{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hgm\\\\Desktop\\\\Maquina3B\\\\ManDoc\\\\Proyectos\\\\Php\\\\DashBoard\\\\SVN\\\\Develop\\\\pricecheck-dashboard\\\\pages\\\\home\\\\reports\\\\scans.tsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n// LIBS\nimport React, { Component } from 'react';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport groupby from 'lodash.groupby';\nimport { Bar } from 'react-chartjs-2';\nimport { format } from 'date-fns';\n\n// UTILS\nimport { IsCustomTheme, getDarkTheme, getTheme, getLocale, validateSession, getHeader } from '../../../utils/session-management';\nimport { buildTheme } from '../../../utils/theme';\nimport { getI18nLabel } from '../../../i18n';\nimport { getGeolocationCatalog } from '../../../utils/catalogs';\nimport { baseURLGeoref, georefApiKey } from '../../../utils/baseUrl';\nimport { textNotData } from '../../../utils/texts';\n\n// COMPONENTS\nimport { PrimaryButton, SecondaryButton } from '../../../components/buttons';\nimport Datepicker from '../../../components/datepicker/datepicker';\nimport { Checkbox } from '../../../components/checkbox';\nimport { Select } from '../../../components/select';\nimport { Header } from '../../../components/header';\nimport { TableComplex } from '../../../components/table';\nimport { ToggleSwitch } from '../../../components/toggleSwitch';\nimport { Dropdown } from '../../../components/dropdown';\n\n// API\nimport api from '../../../utils/api';\n\n// STYLES\nimport styles from './scans.module.scss';\nvar REPORT_TYPE = /*#__PURE__*/function (REPORT_TYPE) {\n  REPORT_TYPE[\"SCANS_REPORTS\"] = \"SCANS_REPORTS\";\n  REPORT_TYPE[\"SCANS_CSV_ANALYST_REPORTS\"] = \"SCANS_CSV_ANALYST_REPORTS\";\n  return REPORT_TYPE;\n}(REPORT_TYPE || {});\nvar REPORT_STATUS = /*#__PURE__*/function (REPORT_STATUS) {\n  REPORT_STATUS[\"VALID\"] = \"valid\";\n  REPORT_STATUS[\"REJECTED\"] = \"rejected\";\n  REPORT_STATUS[\"PENDING\"] = \"pending\";\n  return REPORT_STATUS;\n}(REPORT_STATUS || {});\nconst emptyFilter = {\n  value: 0,\n  label: ''\n};\nclass ScansReport extends Component {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"state\", {\n      hasDarkTheme: false,\n      currentPage: 1,\n      totalPages: 1,\n      total: 0,\n      count: 0,\n      isOpen: false,\n      reports: [],\n      textSearch: '',\n      from: '',\n      to: '',\n      withPhoto: null,\n      isPromotion: null,\n      status: null,\n      type: null,\n      regions: [],\n      selectedRegion: '0',\n      selectedRegionLabel: '',\n      selectedUserScanner: '0',\n      selectedUserScannerLabel: '',\n      selectedMission: '0',\n      selectedMissionLabel: '',\n      scanners: [],\n      missions: [],\n      labels: [],\n      datasets: [],\n      totalByStatus: {\n        Validada: '0',\n        Rechazada: '0',\n        Pendiente: '0'\n      },\n      checkedGeo: undefined,\n      showLoader: false,\n      nameGeoLocation: this.props.nameLocation,\n      optionsGeoCatalog: [],\n      geolocationCatalog: [],\n      showReportDetails: false,\n      selectedReportInfo: [],\n      detailReadOnly: false,\n      textNotData: '',\n      geolocationIdToggle: '0',\n      geoReports: [],\n      filterDownloadGeo: [],\n      baseReports: []\n    });\n    _defineProperty(this, \"colors\", {\n      Validada: 'rgba(255, 99, 132, 1)',\n      Pendiente: 'rgba(255, 153, 32, 1)',\n      Rechazada: 'rgba(55, 253, 232, 1)'\n    });\n    _defineProperty(this, \"header\", [{\n      title: 'Seleccionar',\n      name: 'selected',\n      type: 'checkbox',\n      isHidedable: false\n    }, {\n      title: 'Captura',\n      name: 'scan',\n      type: 'id',\n      isHidedable: false\n    }, {\n      title: 'Foto principal',\n      name: 'photo_main',\n      type: 'img',\n      isHidedable: true\n    }, {\n      title: 'Foto precio',\n      name: 'photo_price',\n      type: 'img',\n      isHidedable: true\n    }, {\n      title: 'Código de barras',\n      name: 'barcode',\n      type: 'text',\n      isHidedable: false\n    }, {\n      title: 'Producto',\n      name: 'product',\n      type: 'text',\n      isHidedable: false\n    }, {\n      title: 'Marca',\n      name: 'brand',\n      type: 'text',\n      isHidedable: false\n    }, {\n      title: 'Tipo',\n      name: 'type',\n      type: 'text',\n      isHidedable: false\n    }, {\n      title: 'Cadena comercial',\n      name: 'chain',\n      type: 'text',\n      isHidedable: false\n    }, {\n      title: 'Sucursal',\n      name: 'branch',\n      type: 'text',\n      isHidedable: true\n    }, {\n      title: 'Capturista',\n      name: 'scanned_by',\n      type: 'text',\n      isHidedable: false\n    }, {\n      title: 'Validador',\n      name: 'reviewed',\n      type: 'text',\n      isHidedable: false\n    }, {\n      title: 'Estado',\n      name: 'status',\n      type: 'text',\n      isHidedable: false\n    }, {\n      title: 'Cantidad',\n      name: 'grammage_quantity',\n      type: 'number',\n      isHidedable: true\n    }, {\n      title: 'Unidad',\n      name: 'unit',\n      type: 'text',\n      isHidedable: true\n    }, {\n      title: 'Precio unitario',\n      name: 'unit_price',\n      type: 'money',\n      isHidedable: false\n    }, {\n      title: 'Grupo',\n      name: 'group',\n      type: 'text',\n      isHidedable: false\n    }, {\n      title: 'Línea',\n      name: 'line',\n      type: 'text',\n      isHidedable: false\n    }, {\n      title: 'Fecha de alta de producto',\n      name: 'product_created_date',\n      type: 'date',\n      isHidedable: false\n    }, {\n      title: 'Precio mínimo',\n      name: 'lower_price',\n      type: 'money',\n      isHidedable: false\n    }, {\n      title: 'Precio máximo',\n      name: 'highest_price',\n      type: 'money',\n      isHidedable: false\n    }, {\n      title: 'Fecha de captura',\n      name: 'capture_date',\n      type: 'date',\n      isHidedable: false\n    }, {\n      title: 'Precio de captura',\n      name: 'capture_price',\n      type: 'money',\n      isHidedable: false\n    }]);\n    _defineProperty(this, \"loadData\", async () => {\n      try {\n        this.getGeoCatalogs();\n        const regions = await this.fetchRegions({\n          search: ''\n        });\n        this.setState({\n          regions: regions || []\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    _defineProperty(this, \"search\", async () => {\n      try {\n        const {\n          selectedRegion,\n          selectedUserScanner,\n          selectedMission,\n          from,\n          to,\n          status\n        } = this.state;\n        const params = {};\n        if (selectedRegion != '0') {\n          params.region = selectedRegion;\n        }\n        if (selectedUserScanner != '0') {\n          params.scanned_by = selectedUserScanner;\n        }\n        if (selectedMission != '0') {\n          params.mission = selectedMission;\n        }\n        if (from) {\n          params.from = this.formatDate(from);\n        }\n        if (to) {\n          params.to = this.formatDate(to);\n        }\n        if (status) {\n          params.status = status;\n        }\n        const scansReports = (await this.fetchReports(REPORT_TYPE.SCANS_REPORTS, params)) || [];\n        const reports = scansReports.reports || [];\n        const pagination = scansReports.pagination || {};\n        this.setState({\n          reports,\n          total: pagination.total,\n          currentPage: pagination.current_page,\n          totalPages: pagination.total_pages,\n          count: pagination.count\n        });\n      } catch (error) {\n        console.log('eee - error: ', error);\n      }\n    });\n    _defineProperty(this, \"selectRegion\", async event => {\n      try {\n        var _event$target;\n        const selectedRegion = event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.value;\n        const scanners = await this.fetchUsersScanners({\n          region: selectedRegion\n        });\n        const missions = await this.fetchMissionsRegion({\n          region: selectedRegion\n        });\n        let selectedRegionLabel = this.state.regions.find(region => region.value === selectedRegion);\n        selectedRegionLabel = selectedRegionLabel && selectedRegionLabel.label ? selectedRegionLabel.label : '';\n        this.setState({\n          selectedRegion,\n          selectedRegionLabel,\n          scanners,\n          missions\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    _defineProperty(this, \"selectUserScanner\", async event => {\n      try {\n        var _event$target2;\n        const selectedUserScanner = event === null || event === void 0 ? void 0 : (_event$target2 = event.target) === null || _event$target2 === void 0 ? void 0 : _event$target2.value;\n        let selectedUserScannerLabel = this.state.scanners.find(userScanner => userScanner.value.toString() === selectedUserScanner);\n        selectedUserScannerLabel = selectedUserScannerLabel && selectedUserScannerLabel.label ? selectedUserScannerLabel.label : '';\n        this.setState({\n          selectedUserScanner,\n          selectedUserScannerLabel\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    _defineProperty(this, \"selectMission\", async event => {\n      try {\n        var _event$target3;\n        const selectedMission = event === null || event === void 0 ? void 0 : (_event$target3 = event.target) === null || _event$target3 === void 0 ? void 0 : _event$target3.value;\n        let selectedMissionLabel = this.state.missions.find(mission => mission.value.toString() === selectedMission);\n        selectedMissionLabel = selectedMissionLabel && selectedMissionLabel.label ? selectedMissionLabel.label : '';\n        this.setState({\n          selectedMission,\n          selectedMissionLabel\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    _defineProperty(this, \"fromDateHandler\", date => {\n      this.setState({\n        from: date\n      });\n    });\n    _defineProperty(this, \"toDateHandler\", date => {\n      this.setState({\n        to: date\n      });\n    });\n    _defineProperty(this, \"changeStateFilter\", stateIndex => {\n      switch (stateIndex) {\n        case 'statusValid':\n          this.setState(prevState => ({\n            status: prevState.status === 'valid' ? null : 'valid'\n          }));\n          break;\n        case 'statusRejected':\n          this.setState(prevState => ({\n            status: prevState.status === 'rejected' ? null : 'rejected'\n          }));\n          break;\n        case 'statusPending':\n          this.setState(prevState => ({\n            status: prevState.status === 'pending' ? null : 'pending'\n          }));\n          break;\n        default:\n          break;\n      }\n    });\n    _defineProperty(this, \"clearParams\", () => {\n      this.setState({\n        from: '',\n        to: '',\n        status: null,\n        selectedRegion: '0',\n        selectedRegionLabel: '',\n        selectedUserScanner: '0',\n        selectedUserScannerLabel: '',\n        selectedMission: '0',\n        reports: [],\n        selectedMissionLabel: ''\n      });\n    });\n    _defineProperty(this, \"getChart\", () => {\n      const {\n        hasDarkTheme,\n        reports\n      } = this.state;\n      const labels = ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'];\n      const datasets = this.getDatasets(reports);\n      const data = {\n        labels,\n        datasets\n      };\n      const options = {\n        legend: {\n          position: 'bottom'\n        }\n      };\n      return __jsx(Bar, {\n        height: 200,\n        width: 300,\n        options: options,\n        data: data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 13\n        }\n      });\n    });\n    _defineProperty(this, \"setCheckedGeo\", e => {\n      this.setState({\n        textSearch: '',\n        showLoader: true\n      });\n      const value = !!e;\n      this.setState({\n        checkedGeo: value\n      }, () => {\n        if (value) {\n          //Si se enciende busca los filtrados del primer registro\n          this.setState({\n            nameGeoLocation: \"Georeportes\",\n            showLoader: false\n          });\n        } else {\n          //Si se apaga busca los generales\n          this.loadData();\n        }\n      });\n    });\n    _defineProperty(this, \"getGeoCatalogs\", async () => {\n      const fetch = getGeolocationCatalog();\n      const catalogs = await Promise.resolve(fetch);\n      const formatedGeoCatalog = catalogs.map((item, index) => {\n        return {\n          value: item.id,\n          label: item.name\n        };\n      });\n      this.setState({\n        optionsGeoCatalog: formatedGeoCatalog,\n        geolocationCatalog: catalogs\n      });\n    });\n    _defineProperty(this, \"setShowLoader\", isActive => {\n      this.setState({\n        showLoader: isActive\n      });\n    });\n    _defineProperty(this, \"setDetailReadOnly\", detailReadOnly => {\n      this.setState({\n        detailReadOnly\n      });\n    });\n    _defineProperty(this, \"setShowReportDetails\", showReportDetails => {\n      this.setState({\n        showReportDetails\n      });\n    });\n    _defineProperty(this, \"setSelectedReportInfo\", report => {\n      this.setState({\n        selectedReportInfo: report\n      });\n    });\n    _defineProperty(this, \"getGeoReports\", async () => {\n      this.setShowLoader(true);\n      try {\n        const response = await api({\n          url: 'api/places',\n          baseURL: baseURLGeoref,\n          headers: {\n            Authorization: `Api-Key ${georefApiKey}`\n          }\n        });\n        this.transformReportsData(response.data.data);\n      } catch (e) {\n        throw new Error(e);\n      } finally {\n        this.setShowLoader(false);\n      }\n    });\n    _defineProperty(this, \"transformReportsData\", reports => {\n      const newReportsArray = reports.map(report => ({\n        id: report.id,\n        location: report.name,\n        position1: {\n          coordinates: report.point1,\n          latitude: report.point1.split(',', 1),\n          longitude: report.point1.split(',', 2)[1]\n        },\n        position2: {\n          coordinates: report.point2,\n          latitude: report.point2.split(',', 1),\n          longitude: report.point2.split(',', 2)[1]\n        },\n        position3: {\n          coordinates: report.point3,\n          latitude: report.point3.split(',', 1),\n          longitude: report.point3.split(',', 2)[1]\n        },\n        position4: {\n          coordinates: report.point4,\n          latitude: report.point4.split(',', 1),\n          longitude: report.point4.split(',', 2)[1]\n        }\n      }));\n      this.setGeoReports(newReportsArray);\n    });\n    _defineProperty(this, \"deleteReport\", async id => {\n      try {\n        await api({\n          method: 'delete',\n          url: `api/places/${id}`,\n          baseURL: baseURLGeoref,\n          headers: {\n            Authorization: `Api-Key ${georefApiKey}`\n          }\n        });\n      } catch (e) {} finally {\n        this.getGeoCatalogs();\n        this.getGeoReports();\n      }\n    });\n    _defineProperty(this, \"showDetailReport\", id => {\n      this.getGeoReports();\n      const selectedReport = this.state.geoReports.filter(report => report.id == id);\n      selectedReport.length > 0 ? this.setSelectedReportInfo(selectedReport[0]) : this.setSelectedReportInfo(this.state.geoReports[0]);\n      this.setShowReportDetails(true);\n      this.setDetailReadOnly(false);\n      this.getGeoCatalogs();\n    });\n    _defineProperty(this, \"setGeolocationIdToggle\", id => {\n      this.setState({\n        showLoader: true\n      });\n      // const { value } = e.target as HTMLInputElement\n      this.setState({\n        geolocationIdToggle: `${id}`\n      }, () => {\n        const resultado = this.state.geolocationCatalog.find(element => element.value === id);\n        this.getFilterGeolocated();\n        this.setState({\n          textSearch: ''\n        });\n      });\n    });\n    _defineProperty(this, \"getFilterGeolocated\", () => {\n      let selectedGeolocatedId = '';\n      if (this.state.geolocationIdToggle !== '0') {\n        selectedGeolocatedId = this.state.geolocationIdToggle;\n      } else {\n        selectedGeolocatedId = this.state.geolocationIdToggle !== '0' ? this.state.geolocationIdToggle : this.state.geolocationCatalog[0].id;\n      }\n      const selectedLocation = this.state.geolocationCatalog.filter(location => location.id === parseInt(selectedGeolocatedId));\n      this.setState({\n        nameGeoLocation: selectedLocation[0].name\n      });\n      const selectedGeolocatedData = {\n        point1: selectedLocation[0].point1,\n        point2: selectedLocation[0].point2,\n        point3: selectedLocation[0].point3,\n        point4: selectedLocation[0].point4\n      };\n      // Obtener datos de geolocalizacion de la API\n      api({\n        url: 'api/scans',\n        baseURL: baseURLGeoref,\n        headers: {\n          Authorization: `Api-Key ${georefApiKey}`\n        },\n        params: selectedGeolocatedData\n      }).then(response => {\n        const transformedData = this.transformData(response.data.data);\n        const dataDownloadGeo = this.getFilterGeo(transformedData);\n        this.setState({\n          showLoader: false,\n          filterDownloadGeo: dataDownloadGeo,\n          reports: transformedData,\n          baseReports: transformedData\n        });\n        if (response.data.data.length === 0) {\n          this.setState({\n            textNotData\n          });\n        } else {\n          this.setState({\n            textNotData: ''\n          });\n        }\n      }).catch(e => {\n        throw new Error(e);\n      });\n      this.setState({\n        currentPage: 1,\n        totalPages: 1\n      });\n    });\n    _defineProperty(this, \"transformData\", data => {\n      const locale = getLocale();\n      return data.map(item => {\n        return {\n          id: item.id,\n          photo_main: item.productPicture,\n          photo_price: item.shelfPicture,\n          barcode: item.barcode,\n          product: item.productName,\n          brand: item.brandName,\n          scanned_by: item.capturist,\n          reviewed: item.validator,\n          product_created_date: item.productCreation,\n          chain: item.storeName,\n          branch: item.storeAddress,\n          capture_date: item.captureDate,\n          unit_price: item.unitPrice,\n          grammage_quantity: item.productUnitQuantity,\n          capture_price: item.price,\n          unit: getI18nLabel(locale, `captures.units.${item.productUnit}`),\n          type: item.productType,\n          group: item.groupName,\n          line: item.lineName,\n          highest_price: item.productMaxPrice,\n          lower_price: item.productMinPrice,\n          status: item.isValid ? getI18nLabel(locale, `captures.status.validated`) : getI18nLabel(locale, `captures.status.pending`),\n          coments: item.comments,\n          capturist_id: item.capturistId,\n          region: item.region,\n          product_price: item.productPrice //Precio de alta\n        };\n      });\n    });\n    _defineProperty(this, \"getFilterGeo\", data => {\n      const options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      };\n      const formatData = data.map((register, index) => {\n        let obj = {\n          \"ID Captura\": register.id,\n          // foto_principal:register.photo_main,\n          \"Codigo de Barras\": register.barcode,\n          \"Producto\": register.product,\n          \"Marca\": register.brand,\n          \"Tipo\": register.type,\n          \"Cadena Comercial\": register.chain,\n          \"Direccion\": register.branch,\n          \"ID Capturista\": register.capturist_id,\n          \"Capturista\": register.scanned_by,\n          \"Region\": register.region,\n          \"Validador\": register.reviewed,\n          \"Estatus\": register.status,\n          \"Comentarios\": register.comments,\n          \"Cantidad\": register.grammage_quantity,\n          \"Unidad\": register.unit,\n          \"Precio Unitario\": register.unit_price,\n          \"Grupo\": register.group,\n          \"Linea\": register.line,\n          \"Fecha de Alta\": new Date(register.product_created_date).toLocaleDateString('es', options).replace(RegExp(' de ', 'g'), '/'),\n          \"Precio de Alta\": register.product_price,\n          \"Precio Minimo\": register.lower_price,\n          \"Precio Maximo\": register.highest_price,\n          \"Fecha de Captura\": new Date(register.capture_date).toLocaleDateString('es', options).replace(RegExp(' de ', 'g'), '/'),\n          \"Precio de Captura\": register.capture_price,\n          \"Promocion\": \" - \"\n        };\n        return obj;\n      });\n      return formatData;\n    });\n  }\n  async componentDidMount() {\n    const hasDarkTheme = getDarkTheme() === '1' ? true : false;\n    const isCustom = IsCustomTheme();\n    let reports = [];\n    if (hasDarkTheme) {\n      document.querySelector('body').classList.remove('custom');\n      document.querySelector('body').classList.add('darkmode');\n    }\n    if (isCustom) {\n      const theme = getTheme();\n      const currentTheme = buildTheme(theme);\n      const style = document.createElement('style');\n      style.innerHTML = currentTheme;\n      document.body.appendChild(style);\n      document.querySelector('body').classList.add('custom');\n    }\n    validateSession();\n    this.loadData();\n  }\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevState.reports.length !== this.state.reports.length) {\n      const totalByStatus = {\n        Validada: 0,\n        Pendiente: 0,\n        Rechazada: 0\n      };\n      const groupedByStatus = groupby(this.state.reports, 'status');\n      for (let status in groupedByStatus) {\n        totalByStatus[status] = groupedByStatus[status].length ? groupedByStatus[status].length : 0;\n      }\n      this.setState({\n        totalByStatus\n      });\n    }\n  }\n  download(res, type = 'text/csv;charset=utf-8;', extension = 'csv') {\n    const url = window.URL.createObjectURL(new Blob([\"\\ufeff\", res], {\n      type\n    }));\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', `scan-report-${format(new Date(), 'MM-dd-yyyy-HH:mm')}.${extension}`);\n    document.body.appendChild(link);\n    link.click();\n    link.parentNode.removeChild(link);\n  }\n  async fetchMissionsRegion(params) {\n    try {\n      const request = {\n        headers: getHeader(),\n        params: {}\n      };\n      if (params) {\n        request.params = params;\n      }\n      let response = await api.get('/api/reports/missions-region', request);\n      response = response && response.data ? response.data : [];\n      response = response.map(item => ({\n        value: item.id,\n        label: item.title\n      }));\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async fetchUsersScanners(params) {\n    try {\n      const request = {\n        headers: getHeader(),\n        params: {}\n      };\n      if (params) {\n        request.params = params;\n      }\n      let response = await api.get('/api/reports/users-scanner', request);\n      response = response && response.data ? response.data : [];\n      response = response.map(item => ({\n        value: item.id,\n        label: item.first_name\n      }));\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async fetchRegions(params) {\n    try {\n      const request = {\n        headers: getHeader(),\n        params: {}\n      };\n      if (params) {\n        request.params = params;\n      }\n      let response = await api.get('/api/regions/search', request);\n      response = response && response.data ? response.data : [];\n      response = response && response.data ? response.data : [];\n      response = response && response.data ? response.data : [];\n      response = response.map(item => ({\n        value: item.id.toString(),\n        label: item.name\n      }));\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async fetchCSVReport() {\n    try {\n      const {\n        selectedRegion,\n        selectedUserScanner,\n        selectedMission,\n        from,\n        to,\n        status\n      } = this.state;\n      const params = {\n        region: selectedRegion || '',\n        scanned_by: selectedUserScanner || '',\n        mission: selectedMission || '',\n        from: this.formatDate(from) || '',\n        to: this.formatDate(to) || '',\n        status: status || ''\n      };\n      const scansCsvAnalystReports = await this.fetchReports(REPORT_TYPE.SCANS_CSV_ANALYST_REPORTS, params);\n      this.download(scansCsvAnalystReports);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async fetchReports(reportType, params) {\n    try {\n      const request = {\n        headers: getHeader(),\n        params: {}\n      };\n      let reportsEndpoint = '';\n      let output;\n      if (params) {\n        request.params = params;\n      }\n      switch (reportType) {\n        case REPORT_TYPE.SCANS_REPORTS:\n          reportsEndpoint = '/api/reports/scans-analyst';\n          break;\n        case REPORT_TYPE.SCANS_CSV_ANALYST_REPORTS:\n          reportsEndpoint = '/api/reports/scans-csv-analyst';\n          request.responseType = 'blob';\n          break;\n        default:\n          console.error('empty report');\n      }\n      const response = await api.get(reportsEndpoint, request);\n      if (response && response.data && response.data.data) {\n        const reports = response.data.data || [];\n        const pagination = response.data.pagination;\n        output = {\n          reports,\n          pagination\n        };\n      }\n      if (response && response.data && !response.data.data) {\n        const reports = response.data || [];\n        output = reports;\n      }\n      return output;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  formatDate(date) {\n    if (date) {\n      date = new Date(date);\n      let month = '' + (date.getMonth() + 1);\n      let day = '' + date.getDate();\n      let year = date.getFullYear();\n      if (month.length < 2) {\n        month = '0' + month;\n      }\n      if (day.length < 2) {\n        day = '0' + day;\n      }\n      return `${year}-${month}-${day}`;\n    }\n    return '';\n  }\n  getDatasets(reports) {\n    let datasets = [];\n    const labels = {\n      'Jan': 'Ene',\n      'Feb': 'Feb',\n      'Mar': 'Mar',\n      'Apr': 'Abr',\n      'May': 'May',\n      'Jun': 'Jun',\n      'Jul': 'Jul',\n      'Aug': 'Ago',\n      'Sep': 'Sep',\n      'Oct': 'Oct',\n      'Nov': 'Nov',\n      'Dic': 'Dec'\n    };\n    const groupedByStatus = groupby(reports, 'status');\n    for (let status in groupedByStatus) {\n      const backgroundColor = this.colors[status];\n      groupedByStatus[status] = groupby(groupedByStatus[status], 'capture_date');\n      const template = [{\n        x: 'Ene',\n        y: 0\n      }, {\n        x: 'Feb',\n        y: 0\n      }, {\n        x: 'Mar',\n        y: 0\n      }, {\n        x: 'Abr',\n        y: 0\n      }, {\n        x: 'May',\n        y: 0\n      }, {\n        x: 'Jun',\n        y: 0\n      }, {\n        x: 'Jul',\n        y: 0\n      }, {\n        x: 'Ago',\n        y: 0\n      }, {\n        x: 'Sep',\n        y: 0\n      }, {\n        x: 'Oct',\n        y: 0\n      }, {\n        x: 'Nov',\n        y: 0\n      }, {\n        x: 'Dic',\n        y: 0\n      }];\n      for (let date in groupedByStatus[status]) {\n        const monthIndex = template.findIndex(month => month.x === labels[this.getMonthName(date)]);\n        template[monthIndex] = {\n          x: labels[this.getMonthName(date)],\n          y: groupedByStatus[status][date].length\n        };\n      }\n      datasets.push({\n        label: status,\n        data: template,\n        backgroundColor\n      });\n    }\n    return datasets;\n  }\n  getMonthName(label) {\n    return label.split('/')[1];\n  }\n  sortLabels(labels) {\n    labels = labels.sort(function (a, b) {\n      a = a.split('/');\n      b = b.split('/');\n      return a[2] - b[2] || a[1] - b[1] || a[0] - b[0];\n    });\n    labels = Array.from(new Set(labels));\n    return labels;\n  }\n  getMonthNames(labels) {\n    const months = [];\n    for (let i = 0; i < labels.length; i++) {\n      const label = this.getMonthName(labels[i]);\n      months.push(label);\n    }\n    return months;\n  }\n  setGeoReports(geoReports) {\n    try {\n      this.setState({\n        geoReports\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  render() {\n    const locale = getLocale();\n    const {\n      total,\n      currentPage,\n      totalPages,\n      count,\n      isOpen,\n      reports,\n      actions,\n      textSearch,\n      from,\n      to,\n      selectedCatalog,\n      optionsCatalog,\n      filterSelected,\n      filterListSelected,\n      unitsCatalog,\n      brandsCatalog,\n      storesCatalog,\n      linesCatalog,\n      groupsCatalog,\n      type,\n      status,\n      isPromotion,\n      withPhoto,\n      regions,\n      selectedRegion,\n      selectedRegionLabel,\n      selectedUserScanner,\n      selectedUserScannerLabel,\n      selectedMission,\n      selectedMissionLabel,\n      scanners,\n      missions,\n      totalByStatus,\n      showLoader,\n      checkedGeo,\n      optionsGeoCatalog,\n      showReportDetails,\n      selectedReportInfo,\n      detailReadOnly,\n      geoReports\n    } = this.state;\n    return this.state && __jsx(React.Fragment, null, __jsx(Header, {\n      locale: locale,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1107,\n        columnNumber: 17\n      }\n    }), __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1109,\n        columnNumber: 17\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1110,\n        columnNumber: 21\n      }\n    }, getI18nLabel(locale, 'scansReport.title'))), __jsx(\"div\", {\n      className: styles.filters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1115,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: styles.leftContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1116,\n        columnNumber: 21\n      }\n    }, __jsx(\"ul\", {\n      className: styles.filterOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1117,\n        columnNumber: 25\n      }\n    }, __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1118,\n        columnNumber: 29\n      }\n    }, __jsx(Select, {\n      defaultOption: selectedRegion,\n      label: getI18nLabel(locale, 'scansReport.filters.region'),\n      onChange: e => this.selectRegion(event),\n      options: regions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1119,\n        columnNumber: 33\n      }\n    })), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1126,\n        columnNumber: 29\n      }\n    }, __jsx(Select, {\n      defaultOption: selectedUserScanner,\n      label: getI18nLabel(locale, 'scansReport.filters.scanner'),\n      onChange: e => this.selectUserScanner(event),\n      options: scanners,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1127,\n        columnNumber: 33\n      }\n    })), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1134,\n        columnNumber: 29\n      }\n    }, __jsx(Select, {\n      defaultOption: selectedMission,\n      label: getI18nLabel(locale, 'scansReport.filters.mission'),\n      onChange: e => this.selectMission(event),\n      options: missions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1135,\n        columnNumber: 33\n      }\n    }))), __jsx(\"ul\", {\n      className: styles.filterOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1143,\n        columnNumber: 25\n      }\n    }, __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1144,\n        columnNumber: 29\n      }\n    }, __jsx(Datepicker, {\n      label: getI18nLabel(locale, 'captures.filters.startDate'),\n      selected: from,\n      onSelect: this.fromDateHandler,\n      placeholder: \"dd/mm/yyyy\",\n      dateFormat: \"dd/MM/yyyy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1145,\n        columnNumber: 33\n      }\n    })), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1153,\n        columnNumber: 29\n      }\n    }, __jsx(Datepicker, {\n      label: getI18nLabel(locale, 'captures.filters.endDate'),\n      selected: to,\n      onSelect: this.toDateHandler,\n      placeholder: \"dd/mm/yyyy\",\n      dateFormat: \"dd/MM/yyyy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1154,\n        columnNumber: 33\n      }\n    }))), __jsx(\"ul\", {\n      className: styles.filterOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1163,\n        columnNumber: 25\n      }\n    }, __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1164,\n        columnNumber: 29\n      }\n    }, __jsx(Checkbox, {\n      className: styles.checkbox,\n      label: getI18nLabel(locale, 'captures.filters.statusValidated'),\n      checked: status === 'valid',\n      onChange: () => this.changeStateFilter('statusValid'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1165,\n        columnNumber: 37\n      }\n    })), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1172,\n        columnNumber: 29\n      }\n    }, __jsx(Checkbox, {\n      className: styles.checkbox,\n      label: getI18nLabel(locale, 'captures.filters.statusRejected'),\n      checked: status === 'rejected',\n      onChange: () => this.changeStateFilter('statusRejected'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1173,\n        columnNumber: 37\n      }\n    })), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1180,\n        columnNumber: 29\n      }\n    }, __jsx(Checkbox, {\n      className: styles.checkbox,\n      label: getI18nLabel(locale, 'captures.filters.statusPending'),\n      checked: status === 'pending',\n      onChange: () => this.changeStateFilter('statusPending'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1181,\n        columnNumber: 37\n      }\n    })), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1188,\n        columnNumber: 29\n      }\n    }), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1190,\n        columnNumber: 29\n      }\n    }, __jsx(ToggleSwitch, {\n      optionLabels: [getI18nLabel(locale, 'advancedSearch.actions.georeference'), getI18nLabel(locale, 'advancedSearch.actions.georeference')],\n      name: \"switch\",\n      id: \"switch\",\n      checked: checkedGeo,\n      onChange: this.setCheckedGeo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1191,\n        columnNumber: 33\n      }\n    }), checkedGeo && __jsx(\"div\", {\n      className: styles.geoSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1198,\n        columnNumber: 41\n      }\n    }, __jsx(Dropdown, {\n      title: \"Geolocalizaciones\",\n      options: optionsGeoCatalog,\n      showReport: this.setGeolocationIdToggle,\n      deleteReport: this.deleteReport,\n      showDetailReport: this.showDetailReport,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1199,\n        columnNumber: 45\n      }\n    })))), __jsx(\"ul\", {\n      className: styles.filterOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1209,\n        columnNumber: 25\n      }\n    }, __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1210,\n        columnNumber: 29\n      }\n    }, __jsx(SecondaryButton, {\n      label: getI18nLabel(locale, 'advancedSearch.actions.cleanFilter'),\n      onClick: this.clearParams,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1211,\n        columnNumber: 33\n      }\n    })), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1216,\n        columnNumber: 29\n      }\n    }, __jsx(SecondaryButton, {\n      label: getI18nLabel(locale, 'advancedSearch.actions.search'),\n      onClick: this.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1217,\n        columnNumber: 33\n      }\n    })), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1222,\n        columnNumber: 29\n      }\n    }, __jsx(PrimaryButton, {\n      label: getI18nLabel(locale, 'advancedSearch.actions.download'),\n      onClick: () => this.fetchCSVReport(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1223,\n        columnNumber: 33\n      }\n    })))), __jsx(\"div\", {\n      className: styles.rightContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1231,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: styles.graphBlock,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1232,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: styles.resume,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1234,\n        columnNumber: 29\n      }\n    }, reports.length > 0 && __jsx(\"ul\", {\n      className: styles.info,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1236,\n        columnNumber: 37\n      }\n    }, totalByStatus.Pendiente != 0 && __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1237,\n        columnNumber: 74\n      }\n    }, \"Pendientes: \", totalByStatus.Pendiente), totalByStatus.Validada != 0 && __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1238,\n        columnNumber: 73\n      }\n    }, \"Validadas: \", totalByStatus.Validada), totalByStatus.Rechazada != 0 && __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1239,\n        columnNumber: 74\n      }\n    }, \"Rechazadas: \", totalByStatus.Rechazada))), __jsx(\"div\", {\n      className: styles.graph,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1244,\n        columnNumber: 29\n      }\n    }, __jsx(\"div\", {\n      className: styles.scannerResume,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1246,\n        columnNumber: 33\n      }\n    }, reports.length > 0 && this.getChart(), reports.length > 0 && __jsx(\"ul\", {\n      className: styles.info,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1249,\n        columnNumber: 41\n      }\n    }, selectedRegionLabel && __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1250,\n        columnNumber: 69\n      }\n    }, \"Regi\\xF3n: \", selectedRegionLabel), selectedUserScannerLabel && __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1251,\n        columnNumber: 74\n      }\n    }, \"Capturista: \", selectedUserScannerLabel), selectedMissionLabel && __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1252,\n        columnNumber: 70\n      }\n    }, \"Misi\\xF3n: \", selectedMissionLabel), from && to && __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1253,\n        columnNumber: 62\n      }\n    }, \"Periodo: \", format(from, 'MM-dd-yyyy'), \" a \", format(to, 'MM-dd-yyyy')))))))), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1262,\n        columnNumber: 17\n      }\n    }, reports.length && __jsx(TableComplex, {\n      actions: [],\n      content: reports || [],\n      header: this.header || [],\n      changePageNext: () => this.fetchReports(REPORT_TYPE.SCANS_CSV_ANALYST_REPORTS, {\n        page: currentPage + 1\n      }),\n      changePagePrev: () => this.fetchReports(REPORT_TYPE.SCANS_CSV_ANALYST_REPORTS, {\n        page: currentPage - 1\n      }),\n      total: total,\n      currentPage: currentPage,\n      totalPage: totalPages,\n      onClickDetails: () => true,\n      onChecked: () => true,\n      count: count,\n      checkboxStyles: '',\n      textNotData: '',\n      reportDetails: true,\n      customClassName: \"fixed-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1264,\n        columnNumber: 25\n      }\n    })));\n  }\n}\nconst withRouter = props => {\n  const router = useRouter();\n  return __jsx(ScansReport, _extends({}, props, {\n    router: router,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1290,\n      columnNumber: 12\n    }\n  }));\n};\nexport default withRouter;","map":{"version":3,"names":["React","Component","useRouter","Head","groupby","Bar","format","IsCustomTheme","getDarkTheme","getTheme","getLocale","validateSession","getHeader","buildTheme","getI18nLabel","getGeolocationCatalog","baseURLGeoref","georefApiKey","textNotData","PrimaryButton","SecondaryButton","Datepicker","Checkbox","Select","Header","TableComplex","ToggleSwitch","Dropdown","api","styles","REPORT_TYPE","REPORT_STATUS","emptyFilter","value","label","ScansReport","constructor","args","_defineProperty","hasDarkTheme","currentPage","totalPages","total","count","isOpen","reports","textSearch","from","to","withPhoto","isPromotion","status","type","regions","selectedRegion","selectedRegionLabel","selectedUserScanner","selectedUserScannerLabel","selectedMission","selectedMissionLabel","scanners","missions","labels","datasets","totalByStatus","Validada","Rechazada","Pendiente","checkedGeo","undefined","showLoader","nameGeoLocation","props","nameLocation","optionsGeoCatalog","geolocationCatalog","showReportDetails","selectedReportInfo","detailReadOnly","geolocationIdToggle","geoReports","filterDownloadGeo","baseReports","title","name","isHidedable","getGeoCatalogs","fetchRegions","search","setState","error","console","log","state","params","region","scanned_by","mission","formatDate","scansReports","fetchReports","SCANS_REPORTS","pagination","current_page","total_pages","event","_event$target","target","fetchUsersScanners","fetchMissionsRegion","find","_event$target2","userScanner","toString","_event$target3","date","stateIndex","prevState","getDatasets","data","options","legend","position","__jsx","height","width","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","e","loadData","fetch","catalogs","Promise","resolve","formatedGeoCatalog","map","item","index","id","isActive","report","setShowLoader","response","url","baseURL","headers","Authorization","transformReportsData","Error","newReportsArray","location","position1","coordinates","point1","latitude","split","longitude","position2","point2","position3","point3","position4","point4","setGeoReports","method","getGeoReports","selectedReport","filter","length","setSelectedReportInfo","setShowReportDetails","setDetailReadOnly","resultado","element","getFilterGeolocated","selectedGeolocatedId","selectedLocation","parseInt","selectedGeolocatedData","then","transformedData","transformData","dataDownloadGeo","getFilterGeo","catch","locale","photo_main","productPicture","photo_price","shelfPicture","barcode","product","productName","brand","brandName","capturist","reviewed","validator","product_created_date","productCreation","chain","storeName","branch","storeAddress","capture_date","captureDate","unit_price","unitPrice","grammage_quantity","productUnitQuantity","capture_price","price","unit","productUnit","productType","group","groupName","line","lineName","highest_price","productMaxPrice","lower_price","productMinPrice","isValid","coments","comments","capturist_id","capturistId","product_price","productPrice","year","month","day","formatData","register","obj","Date","toLocaleDateString","replace","RegExp","componentDidMount","isCustom","document","querySelector","classList","remove","add","theme","currentTheme","style","createElement","innerHTML","body","appendChild","componentDidUpdate","prevProps","groupedByStatus","download","res","extension","window","URL","createObjectURL","Blob","link","href","setAttribute","click","parentNode","removeChild","request","get","first_name","fetchCSVReport","scansCsvAnalystReports","SCANS_CSV_ANALYST_REPORTS","reportType","reportsEndpoint","output","responseType","getMonth","getDate","getFullYear","backgroundColor","colors","template","x","y","monthIndex","findIndex","getMonthName","push","sortLabels","sort","a","b","Array","Set","getMonthNames","months","i","render","actions","selectedCatalog","optionsCatalog","filterSelected","filterListSelected","unitsCatalog","brandsCatalog","storesCatalog","linesCatalog","groupsCatalog","Fragment","className","filters","leftContainer","filterOptions","defaultOption","onChange","selectRegion","selectUserScanner","selectMission","selected","onSelect","fromDateHandler","placeholder","dateFormat","toDateHandler","checkbox","checked","changeStateFilter","optionLabels","setCheckedGeo","geoSelect","showReport","setGeolocationIdToggle","deleteReport","showDetailReport","onClick","clearParams","rightContainer","graphBlock","resume","info","graph","scannerResume","getChart","content","header","changePageNext","page","changePagePrev","totalPage","onClickDetails","onChecked","checkboxStyles","reportDetails","customClassName","withRouter","router","_extends"],"sources":["C:/Users/hgm/Desktop/Maquina3B/ManDoc/Proyectos/Php/DashBoard/SVN/Develop/pricecheck-dashboard/pages/home/reports/scans.tsx"],"sourcesContent":["// LIBS\nimport React, { Component } from 'react'\nimport Router, { useRouter } from 'next/router'\nimport Head from 'next/head'\nimport groupby from 'lodash.groupby'\nimport { Bar } from 'react-chartjs-2'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash, faPencilAlt, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { format } from 'date-fns';\n\n// UTILS\nimport { IsCustomTheme, getDarkTheme, getTheme, getLocale, validateSession, getHeader } from '../../../utils/session-management'\nimport { buildTheme } from '../../../utils/theme';\nimport { ADVANCE_SEARCH_TYPE } from '../../../constants/advance-search.const';\nimport { getI18nLabel, translateTableComplexHeader } from '../../../i18n'\nimport {\n    getGeolocationCatalog,\n} from '../../../utils/catalogs'\nimport {baseURLGeoref, georefApiKey} from '../../../utils/baseUrl';\nimport { textNotData } from '../../../utils/texts'\n\n// COMPONENTS\nimport { PrimaryButton, SecondaryButton } from '../../../components/buttons'\nimport Datepicker from '../../../components/datepicker/datepicker'\nimport { Checkbox } from '../../../components/checkbox'\nimport { Input } from '../../../components/input'\nimport { Select } from '../../../components/select'\nimport { Header } from '../../../components/header'\nimport { TableComplex } from '../../../components/table'\nimport { PrimaryButtonVariant } from '../../../components/buttons/PrimaryButton'\nimport { ToggleSwitch} from '../../../components/toggleSwitch';\nimport CreateGeoLocation from '../../../components/GeoLocation/CreateGeoLocation';\nimport { Dropdown } from '../../../components/dropdown';\n\n// API\nimport api from '../../../utils/api'\n\n// STYLES\nimport styles from './scans.module.scss';\n\nenum REPORT_TYPE {\n    SCANS_REPORTS = 'SCANS_REPORTS',\n    SCANS_CSV_ANALYST_REPORTS = 'SCANS_CSV_ANALYST_REPORTS',\n}\n\nenum REPORT_STATUS {\n    VALID = 'valid',\n    REJECTED = 'rejected',\n    PENDING = 'pending',\n}\n\ntype State = {\n    hasDarkTheme?: any,\n    currentPage?: number,\n    totalPages?: number,\n    total?: number,\n    count?: number,\n    isOpen?: boolean,\n    reports?: any,\n    regions?: any,\n    scanners?: any,\n    missions?: any,\n    actions?: Array<any>,\n    textSearch?: string,\n    from?: any,\n    to?: any,\n    selectedCatalog?: Array<any>,\n    optionsCatalog?: Array<any>,\n    filterSelected?: string,\n    filterListSelected?: Array<any>,\n    unitsCatalog?: Array<any>,\n    brandsCatalog?: Array<any>,\n    storesCatalog?: Array<any>,\n    linesCatalog?: Array<any>,\n    groupsCatalog?: Array<any>\n    type?: string | null,\n    status?: string | null,\n    isPromotion?: boolean | null,\n    withPhoto?: boolean | null,\n    selectedRegion?: any,\n    selectedRegionLabel?: any,\n    selectedUserScanner?: any,\n    selectedUserScannerLabel?: any,\n    selectedMission?: any,\n    selectedMissionLabel?: any,\n    labels?: any,\n    datasets?: any,\n    totalByStatus?: any,\n    checkedGeo?:boolean,\n    showLoader: boolean,\n    nameGeoLocation:String,\n    optionsGeoCatalog: Array<any>,\n    geolocationCatalog: Array<any>,\n    showReportDetails: boolean,\n    selectedReportInfo: any,\n    detailReadOnly: boolean,\n    textNotData: string,\n    geolocationIdToggle: string,\n    geoReports: any,\n    filterDownloadGeo: any,\n    baseReports: any,\n}\n\ntype Props = {\n    nameLocation: string,\n    geolocationId: string,\n    router: any,\n}\n\ntype ScansReports = {\n    mission?: number,\n    region?: number,\n    from?: any,\n    to?: any,\n    status?: REPORT_STATUS,\n    scanned_by?: number,\n}\n\nconst emptyFilter = {\n    value: 0,\n    label: '',\n}\n\nclass ScansReport extends Component<Props, State> {\n    state: State = {\n        hasDarkTheme: false,\n        currentPage: 1,\n        totalPages: 1,\n        total: 0,\n        count: 0,\n        isOpen: false,\n        reports: [],\n        textSearch: '',\n        from: '',\n        to: '',\n        withPhoto: null,\n        isPromotion: null,\n        status: null,\n        type: null,\n        regions: [],\n        selectedRegion: '0',\n        selectedRegionLabel: '',\n        selectedUserScanner: '0',\n        selectedUserScannerLabel: '',\n        selectedMission: '0',\n        selectedMissionLabel: '',\n        scanners: [],\n        missions: [],\n        labels: [],\n        datasets: [],\n        totalByStatus: {\n            Validada: '0',\n            Rechazada: '0',\n            Pendiente: '0',\n        },\n        checkedGeo: undefined,\n        showLoader: false,\n        nameGeoLocation: this.props.nameLocation,\n        optionsGeoCatalog: [],\n        geolocationCatalog: [],\n        showReportDetails: false,\n        selectedReportInfo: [],\n        detailReadOnly: false,\n        textNotData: '',\n        geolocationIdToggle: '0',\n        geoReports: [],\n        filterDownloadGeo: [],\n        baseReports: [],\n    };\n\n    colors = {\n        Validada: 'rgba(255, 99, 132, 1)',\n        Pendiente: 'rgba(255, 153, 32, 1)',\n        Rechazada: 'rgba(55, 253, 232, 1)',\n    }\n\n    header = [\n        {\n            title: 'Seleccionar',\n            name: 'selected',\n            type: 'checkbox',\n            isHidedable: false,\n        },\n        {\n            title: 'Captura',\n            name: 'scan',\n            type: 'id',\n            isHidedable: false,\n        },\n        {\n            title: 'Foto principal',\n            name: 'photo_main',\n            type: 'img',\n            isHidedable: true,\n        },\n        {\n            title: 'Foto precio',\n            name: 'photo_price',\n            type: 'img',\n            isHidedable: true,\n        },\n        {\n            title: 'Código de barras',\n            name: 'barcode',\n            type: 'text',\n            isHidedable: false,\n        },\n        {\n            title: 'Producto',\n            name: 'product',\n            type: 'text',\n            isHidedable: false,\n        },\n        {\n            title: 'Marca',\n            name: 'brand',\n            type: 'text',\n            isHidedable: false,\n        },\n        {\n            title: 'Tipo',\n            name: 'type',\n            type: 'text',\n            isHidedable: false,\n        },\n        {\n            title: 'Cadena comercial',\n            name: 'chain',\n            type: 'text',\n            isHidedable: false,\n        },\n        {\n            title: 'Sucursal',\n            name: 'branch',\n            type: 'text',\n            isHidedable: true,\n        },\n        {\n            title: 'Capturista',\n            name: 'scanned_by',\n            type: 'text',\n            isHidedable: false,\n        },\n        {\n            title: 'Validador',\n            name: 'reviewed',\n            type: 'text',\n            isHidedable: false,\n        },\n        {\n            title: 'Estado',\n            name: 'status',\n            type: 'text',\n            isHidedable: false,\n        },\n        {\n            title: 'Cantidad',\n            name: 'grammage_quantity',\n            type: 'number',\n            isHidedable: true,\n        },\n        {\n            title: 'Unidad',\n            name: 'unit',\n            type: 'text',\n            isHidedable: true,\n        },\n        {\n            title: 'Precio unitario',\n            name: 'unit_price',\n            type: 'money',\n            isHidedable: false,\n        },\n        {\n            title: 'Grupo',\n            name: 'group',\n            type: 'text',\n            isHidedable: false,\n        },\n        {\n            title: 'Línea',\n            name: 'line',\n            type: 'text',\n            isHidedable: false,\n        },\n        {\n            title: 'Fecha de alta de producto',\n            name: 'product_created_date',\n            type: 'date',\n            isHidedable: false,\n        },\n        {\n            title: 'Precio mínimo',\n            name: 'lower_price',\n            type: 'money',\n            isHidedable: false,\n        },\n        {\n            title: 'Precio máximo',\n            name: 'highest_price',\n            type: 'money',\n            isHidedable: false,\n        },\n        {\n            title: 'Fecha de captura',\n            name: 'capture_date',\n            type: 'date',\n            isHidedable: false,\n        },\n        {\n            title: 'Precio de captura',\n            name: 'capture_price',\n            type: 'money',\n            isHidedable: false,\n        },\n    ]\n\n    async componentDidMount() {\n        const hasDarkTheme = getDarkTheme() === '1' ? true : false;\n        const isCustom = IsCustomTheme();\n        let reports = []\n\n        if (hasDarkTheme) {\n            document.querySelector('body').classList.remove('custom')\n            document.querySelector('body').classList.add('darkmode')\n        }\n\n        if(isCustom) {\n            const theme = getTheme();\n            const currentTheme = buildTheme(theme);\n            const style = document.createElement('style');\n            style.innerHTML = currentTheme;\n            document.body.appendChild(style);\n            document.querySelector('body').classList.add('custom');\n        }\n\n        validateSession()\n\n        this.loadData()\n    }\n\n    loadData = async () => {\n        try {\n            this.getGeoCatalogs()\n            const regions = await this.fetchRegions({search: ''})\n            this.setState({ regions: regions || [] })\n        } catch(error) {\n            console.log(error)\n        }\n    }\n\n    async componentDidUpdate(prevProps, prevState) {\n        if (prevState.reports.length !== this.state.reports.length) {\n\n            const totalByStatus = {\n                Validada: 0,\n                Pendiente: 0,\n                Rechazada: 0,\n            }\n\n            const groupedByStatus = groupby(this.state.reports, 'status')\n\n            for (let status in groupedByStatus) {\n                totalByStatus[status] = groupedByStatus[status].length ? groupedByStatus[status].length : 0\n            }\n\n            this.setState({\n                totalByStatus,\n            })\n        }\n    }\n\n    download(res: any, type = 'text/csv;charset=utf-8;', extension = 'csv') {\n        const url = window.URL.createObjectURL(\n            new Blob([\"\\ufeff\", res], {\n              type,\n            }),\n          );\n          const link = document.createElement('a');\n          link.href = url;\n          link.setAttribute('download', `scan-report-${format(new Date(), 'MM-dd-yyyy-HH:mm')}.${extension}`);\n          document.body.appendChild(link);\n          link.click();\n          link.parentNode.removeChild(link);\n    }\n\n    search = async () => {\n        try {\n            const {selectedRegion, selectedUserScanner, selectedMission, from, to, status} = this.state\n            const params: any = {}\n\n            if(selectedRegion != '0') {\n                params.region = selectedRegion\n            }\n\n            if(selectedUserScanner != '0') {\n                params.scanned_by = selectedUserScanner\n            }\n\n            if(selectedMission != '0') {\n                params.mission = selectedMission\n            }\n\n            if(from) {\n                params.from = this.formatDate(from)\n            }\n\n            if(to) {\n                params.to = this.formatDate(to)\n            }\n\n            if(status) {\n                params.status = status\n            }\n\n            const scansReports = await this.fetchReports(REPORT_TYPE.SCANS_REPORTS, params) || []\n            const reports = scansReports.reports || []\n            const pagination = scansReports.pagination || {}\n\n            this.setState({\n                reports,\n                total: pagination.total,\n                currentPage: pagination.current_page,\n                totalPages: pagination.total_pages,\n                count: pagination.count,\n            })\n        } catch(error) {\n            console.log('eee - error: ', error)\n        }\n    }\n\n    async fetchMissionsRegion(params) {\n        try {\n            const request = {\n                headers: getHeader(),\n                params: {},\n            }\n\n            if (params) {\n                request.params = params\n            }\n\n            let response: any = await api.get('/api/reports/missions-region', request)\n\n            response = response && response.data ? response.data : []\n\n            response = response.map((item) => ({\n                value: item.id,\n                label: item.title,\n            }))\n            return response\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    async fetchUsersScanners(params) {\n        try {\n            const request = {\n                headers: getHeader(),\n                params: {},\n            }\n\n            if (params) {\n                request.params = params\n            }\n\n            let response: any = await api.get('/api/reports/users-scanner', request)\n\n            response = response && response.data ? response.data : []\n\n            response = response.map((item) => ({\n                value: item.id,\n                label: item.first_name,\n            }))\n\n            return response\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    async fetchRegions(params) {\n        try {\n            const request = {\n                headers: getHeader(),\n                params: {},\n            }\n\n            if (params) {\n                request.params = params\n            }\n\n            let response: any = await api.get('/api/regions/search', request)\n            response = response && response.data ? response.data : []\n            response = response && response.data ? response.data : []\n            response = response && response.data ? response.data : []\n\n            response = response.map((item) => ({\n                value: item.id.toString(),\n                label: item.name,\n            }))\n\n            return response\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    async fetchCSVReport() {\n        try {\n            const {selectedRegion, selectedUserScanner, selectedMission, from, to, status} = this.state\n            const params = {\n                region: selectedRegion || '',\n                scanned_by: selectedUserScanner || '',\n                mission: selectedMission || '',\n                from: this.formatDate(from) || '',\n                to: this.formatDate(to) || '',\n                status: status || ''\n            }\n            const scansCsvAnalystReports = await this.fetchReports(REPORT_TYPE.SCANS_CSV_ANALYST_REPORTS, params)\n\n            this.download(scansCsvAnalystReports)\n        } catch(error) {\n            console.log(error)\n        }\n    }\n\n    async fetchReports(reportType: REPORT_TYPE, params: any) {\n        try {\n            const request: any = {\n                headers: getHeader(),\n                params: {},\n            }\n\n            let reportsEndpoint: string = ''\n            let output: any\n\n            if (params) {\n                request.params = params\n            }\n\n            switch(reportType) {\n                case REPORT_TYPE.SCANS_REPORTS:\n                    reportsEndpoint = '/api/reports/scans-analyst';\n                    break;\n                case REPORT_TYPE.SCANS_CSV_ANALYST_REPORTS:\n                    reportsEndpoint = '/api/reports/scans-csv-analyst';\n                    request.responseType = 'blob'\n                    break;\n                default:\n                    console.error('empty report');\n            }\n\n            const response = await api.get(reportsEndpoint, request)\n\n            if (response && response.data && response.data.data) {\n                const reports = response.data.data || []\n                const pagination = response.data.pagination\n\n                output = {reports, pagination}\n            }\n\n            if (response && response.data && !response.data.data) {\n                const reports = response.data || []\n\n                output = reports\n            }\n\n            return output\n\n        } catch(error) {\n            console.log(error)\n        }\n    }\n\n    selectRegion = async (event: any) => {\n        try {\n            const selectedRegion = event?.target?.value\n            const scanners = await this.fetchUsersScanners({region: selectedRegion})\n            const missions = await this.fetchMissionsRegion({region: selectedRegion})\n\n            let selectedRegionLabel = this.state.regions.find((region) => region.value === selectedRegion)\n            selectedRegionLabel = selectedRegionLabel && selectedRegionLabel.label ? selectedRegionLabel.label : ''\n\n            this.setState({\n                selectedRegion,\n                selectedRegionLabel,\n                scanners,\n                missions,\n            });\n        } catch(error) {\n            console.log(error);\n        }\n    }\n\n    selectUserScanner = async (event: any) => {\n        try {\n            const selectedUserScanner = event?.target?.value\n\n            let selectedUserScannerLabel = this.state.scanners.find((userScanner) => userScanner.value.toString() === selectedUserScanner)\n            selectedUserScannerLabel = selectedUserScannerLabel && selectedUserScannerLabel.label ? selectedUserScannerLabel.label : ''\n\n            this.setState({\n                selectedUserScanner,\n                selectedUserScannerLabel,\n            });\n        } catch(error) {\n            console.log(error);\n        }\n    }\n\n    selectMission = async (event: any) => {\n        try {\n            const selectedMission = event?.target?.value\n\n            let selectedMissionLabel = this.state.missions.find((mission) => mission.value.toString() === selectedMission)\n            selectedMissionLabel = selectedMissionLabel && selectedMissionLabel.label ? selectedMissionLabel.label : ''\n\n            this.setState({\n                selectedMission,\n                selectedMissionLabel,\n            });\n        } catch(error) {\n            console.log(error);\n        }\n    }\n\n    formatDate(date) {\n        if (date) {\n            date = new Date(date);\n\n            let month = '' + (date.getMonth() + 1);\n            let day = '' + date.getDate();\n            let year = date.getFullYear();\n\n            if (month.length < 2) {\n                month = '0' + month;\n            }\n\n            if (day.length < 2) {\n                day = '0' + day;\n            }\n\n            return `${year}-${month}-${day}`;\n        }\n\n        return ''\n    }\n\n    fromDateHandler = (date: any) => {\n        this.setState({\n            from: date,\n        })\n\n    }\n\n    toDateHandler = (date: any) => {\n        this.setState({\n            to: date,\n        });\n    }\n\n    changeStateFilter = (stateIndex :string) =>{\n        switch (stateIndex) {\n            case 'statusValid':\n                this.setState((prevState) => ({status: prevState.status === 'valid' ? null : 'valid'}))\n                break;\n            case 'statusRejected':\n                this.setState((prevState) => ({status: prevState.status === 'rejected' ? null : 'rejected'}))\n                break;\n            case 'statusPending':\n                this.setState((prevState) => ({status: prevState.status === 'pending' ? null : 'pending'}))\n                break;\n            default:\n                break\n        }\n    }\n\n    clearParams = () => {\n        this.setState({\n            from: '',\n            to: '',\n            status: null,\n            selectedRegion: '0',\n            selectedRegionLabel: '',\n            selectedUserScanner: '0',\n            selectedUserScannerLabel: '',\n            selectedMission: '0',\n            reports: [],\n            selectedMissionLabel: '',\n        })\n    }\n\n    getDatasets(reports) {\n        let datasets = []\n        const labels = {\n            'Jan': 'Ene',\n            'Feb': 'Feb',\n            'Mar': 'Mar',\n            'Apr': 'Abr',\n            'May': 'May',\n            'Jun': 'Jun',\n            'Jul': 'Jul',\n            'Aug': 'Ago',\n            'Sep': 'Sep',\n            'Oct': 'Oct',\n            'Nov': 'Nov',\n            'Dic': 'Dec'\n        };\n\n        const groupedByStatus = groupby(reports, 'status')\n\n        for (let status in groupedByStatus) {\n            const backgroundColor= this.colors[status]\n            groupedByStatus[status] = groupby(groupedByStatus[status], 'capture_date')\n            const template = [{x: 'Ene', y: 0}, {x: 'Feb', y: 0}, {x: 'Mar', y: 0}, {x: 'Abr', y: 0}, {x: 'May', y: 0}, {x: 'Jun', y: 0}, {x: 'Jul', y: 0}, {x: 'Ago', y: 0}, {x: 'Sep', y: 0}, {x: 'Oct', y: 0}, {x: 'Nov', y: 0}, {x: 'Dic', y: 0}];\n\n            for (let date in groupedByStatus[status]) {\n                const monthIndex = template.findIndex((month) => month.x === labels[this.getMonthName(date)])\n                template[monthIndex] = {\n                    x: labels[this.getMonthName(date)],\n                    y: groupedByStatus[status][date].length\n                }\n            }\n\n            datasets.push({\n                label: status,\n                data: template,\n                backgroundColor\n            })\n        }\n\n        return datasets\n    }\n\n    getMonthName(label) {\n        return label.split('/')[1]\n    }\n\n    getChart = () => {\n        const {hasDarkTheme, reports} = this.state\n        const labels = ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'];\n        const datasets = this.getDatasets(reports);\n\n        const data = {\n            labels,\n            datasets,\n        }\n\n        const options = {\n            legend: {\n              position: 'bottom',\n            },\n        };\n\n        return (\n            <Bar height={200} width={300} options={options} data={data} />\n        )\n    }\n\n    sortLabels(labels) {\n        labels = labels.sort(function (a, b) {\n            a = a.split('/');\n            b = b.split('/');\n            return a[2] - b[2] || a[1] - b[1] || a[0] - b[0];\n        })\n        labels = Array.from(new Set(labels))\n\n        return labels;\n    }\n\n    getMonthNames(labels) {\n        const months = []\n\n        for (let i = 0; i < labels.length; i++) {\n            const label = this.getMonthName(labels[i])\n\n            months.push(label)\n        }\n\n        return months\n    }\n\n    setCheckedGeo = (e: any) => {\n        this.setState({\n            textSearch: '',\n            showLoader: true\n        });\n        const value = !!e;\n\n        this.setState({ checkedGeo: value }, () => {\n\n            if(value){ //Si se enciende busca los filtrados del primer registro\n                this.setState({\n                    nameGeoLocation: \"Georeportes\",\n                    showLoader: false,\n                })\n            } else { //Si se apaga busca los generales\n                    this.loadData()\n            }\n        })\n    }\n\n    getGeoCatalogs = async () => {\n        const fetch = getGeolocationCatalog();\n        const catalogs  = await Promise.resolve(fetch);\n        const formatedGeoCatalog =  catalogs.map( (item: any, index:any) => {\n            return {value:item.id,label:item.name};\n        });\n\n        this.setState({\n            optionsGeoCatalog: formatedGeoCatalog,\n            geolocationCatalog: catalogs,\n        });\n    }\n\n    setShowLoader = (isActive) => {\n        this.setState({\n            showLoader: isActive,\n        })\n    }\n\n    setDetailReadOnly = (detailReadOnly) => {\n        this.setState({\n            detailReadOnly,\n        })\n    }\n\n    setShowReportDetails = (showReportDetails) => {\n        this.setState({\n            showReportDetails,\n        })\n    }\n\n    setSelectedReportInfo = (report) => {\n        this.setState({\n            selectedReportInfo: report,\n        })\n    }\n\n    getGeoReports = async () => {\n        this.setShowLoader(true)\n\n        try {\n            const response = await api({\n                url: 'api/places',\n                baseURL: baseURLGeoref,\n                headers: { Authorization: `Api-Key ${georefApiKey}` }\n            })\n\n            this.transformReportsData(response.data.data)\n        } catch (e) {\n            throw new Error(e)\n        } finally {\n            this.setShowLoader(false)\n        }\n    };\n\n    transformReportsData = (reports: any[]) => {\n        const newReportsArray = reports.map(report => ({\n            id: report.id,\n            location: report.name,\n            position1: {\n                coordinates: report.point1,\n                latitude: report.point1.split(',', 1),\n                longitude: report.point1.split(',', 2)[1]\n            },\n            position2: {\n                coordinates: report.point2,\n                latitude: report.point2.split(',', 1),\n                longitude: report.point2.split(',', 2)[1]\n            },\n            position3: {\n                coordinates: report.point3,\n                latitude: report.point3.split(',', 1),\n                longitude: report.point3.split(',', 2)[1]\n            },\n            position4: {\n                coordinates: report.point4,\n                latitude: report.point4.split(',', 1),\n                longitude: report.point4.split(',', 2)[1]\n            },\n        }))\n\n        this.setGeoReports(newReportsArray)\n    }\n\n    deleteReport = async (id: number) => {\n        try {\n            await api({\n                method: 'delete',\n                url: `api/places/${id}`,\n                baseURL: baseURLGeoref,\n                headers: { Authorization: `Api-Key ${georefApiKey}` }\n            })\n        } catch (e) {\n\n        }finally{\n            this.getGeoCatalogs();\n            this.getGeoReports();\n        }\n    };\n\n    showDetailReport = (id: number) => {\n        this.getGeoReports();\n        const selectedReport = this.state.geoReports.filter(report => report.id == id);\n\n        selectedReport.length > 0 ? this.setSelectedReportInfo(selectedReport[0]) : this.setSelectedReportInfo(this.state.geoReports[0]);\n\n        this.setShowReportDetails(true)\n        this.setDetailReadOnly(false)\n        this.getGeoCatalogs();\n    };\n\n    setGeolocationIdToggle = (id: Number) => {\n        this.setState({ showLoader: true })\n        // const { value } = e.target as HTMLInputElement\n        this.setState({geolocationIdToggle:`${id}`}, () => {\n            const resultado = this.state.geolocationCatalog.find((element: any) => element.value === id );\n            this.getFilterGeolocated()\n            this.setState({ textSearch: '' });\n        })\n    }\n\n    getFilterGeolocated = () => {\n        let selectedGeolocatedId = ''\n        if(this.state.geolocationIdToggle !== '0' ){\n            selectedGeolocatedId = this.state.geolocationIdToggle;\n        } else {\n                selectedGeolocatedId = this.state.geolocationIdToggle !== '0'  ?\n                this.state.geolocationIdToggle :\n                this.state.geolocationCatalog[0].id\n        }\n\n        const selectedLocation: any = this.state.geolocationCatalog.filter(\n            location => location.id === parseInt(selectedGeolocatedId)\n        );\n        this.setState({nameGeoLocation:selectedLocation[0].name});\n        const selectedGeolocatedData = {\n            point1: selectedLocation[0].point1,\n            point2: selectedLocation[0].point2,\n            point3: selectedLocation[0].point3,\n            point4: selectedLocation[0].point4,\n        }\n        // Obtener datos de geolocalizacion de la API\n        api({\n            url: 'api/scans',\n            baseURL: baseURLGeoref,\n            headers: { Authorization: `Api-Key ${georefApiKey}` },\n            params: selectedGeolocatedData,\n        })\n        .then(response => {\n            const transformedData = this.transformData(response.data.data)\n            const dataDownloadGeo = this.getFilterGeo(transformedData);\n\n            this.setState({\n                showLoader: false,\n                filterDownloadGeo: dataDownloadGeo,\n                reports: transformedData,\n                baseReports: transformedData\n            })\n\n            if (response.data.data.length === 0) {\n                this.setState({ textNotData })\n            }else{\n                this.setState({ textNotData:'' })\n            }\n        })\n        .catch((e) => {\n            throw new Error(e)\n        });\n\n        this.setState({\n            currentPage: 1,\n            totalPages: 1,\n        })\n    }\n\n    transformData = (data: any[]) => {\n        const locale = getLocale()\n\n        return data.map(item => {\n            return {\n                id: item.id,\n                photo_main: item.productPicture,\n                photo_price: item.shelfPicture,\n                barcode: item.barcode,\n                product: item.productName,\n                brand: item.brandName,\n                scanned_by: item.capturist,\n                reviewed:item.validator,\n                product_created_date: item.productCreation,\n                chain: item.storeName,\n                branch: item.storeAddress,\n                capture_date: item.captureDate,\n                unit_price: item.unitPrice,\n                grammage_quantity: item.productUnitQuantity,\n                capture_price: item.price,\n                unit: getI18nLabel(locale, `captures.units.${item.productUnit}`),\n                type: item.productType,\n                group: item.groupName,\n                line: item.lineName,\n                highest_price: item.productMaxPrice,\n                lower_price: item.productMinPrice,\n                status: item.isValid ? getI18nLabel(locale, `captures.status.validated`) : getI18nLabel(locale, `captures.status.pending`),\n                coments: item.comments,\n                capturist_id: item.capturistId,\n                region: item.region,\n                product_price: item.productPrice, //Precio de alta\n            }\n        })\n    }\n\n    getFilterGeo = (data:any) => {\n        const options:{} = { year: 'numeric', month: 'long', day: 'numeric' };\n        const formatData =  data.map((register:any, index:any) => {\n                let obj = {\n                    \"ID Captura\":register.id,\n                    // foto_principal:register.photo_main,\n                    \"Codigo de Barras\":register.barcode,\n                    \"Producto\":register.product,\n                    \"Marca\":register.brand,\n                    \"Tipo\":register.type,\n                    \"Cadena Comercial\":register.chain,\n                    \"Direccion\":register.branch,\n                    \"ID Capturista\": register.capturist_id,\n                    \"Capturista\":register.scanned_by,\n                    \"Region\": register.region,\n                    \"Validador\":register.reviewed,\n                    \"Estatus\":register.status,\n                    \"Comentarios\": register.comments,\n                    \"Cantidad\":register.grammage_quantity,\n                    \"Unidad\":register.unit,\n                    \"Precio Unitario\":register.unit_price,\n                    \"Grupo\":register.group,\n                    \"Linea\":register.line,\n                    \"Fecha de Alta\":new Date(register.product_created_date).toLocaleDateString('es',options).replace(RegExp(' de ', 'g'),'/'),\n                    \"Precio de Alta\": register.product_price,\n                    \"Precio Minimo\":register.lower_price,\n                    \"Precio Maximo\":register.highest_price,\n                    \"Fecha de Captura\":new Date(register.capture_date).toLocaleDateString('es',options).replace(RegExp(' de ', 'g'),'/'),\n                    \"Precio de Captura\":register.capture_price,\n                    \"Promocion\": \" - \",\n                };\n                return obj;\n        });\n\n        return formatData;\n    }\n\n    setGeoReports(geoReports) {\n        try {\n            this.setState({geoReports})\n        } catch(error) {\n            console.log(error)\n        }\n    }\n\n    render() {\n        const locale = getLocale()\n        const {\n            total,\n            currentPage,\n            totalPages,\n            count,\n            isOpen,\n            reports,\n            actions,\n            textSearch,\n            from,\n            to,\n            selectedCatalog,\n            optionsCatalog,\n            filterSelected,\n            filterListSelected,\n            unitsCatalog,\n            brandsCatalog,\n            storesCatalog,\n            linesCatalog,\n            groupsCatalog,\n            type,\n            status,\n            isPromotion,\n            withPhoto,\n            regions,\n            selectedRegion,\n            selectedRegionLabel,\n            selectedUserScanner,\n            selectedUserScannerLabel,\n            selectedMission,\n            selectedMissionLabel,\n            scanners,\n            missions,\n            totalByStatus,\n            showLoader,\n            checkedGeo,\n            optionsGeoCatalog,\n            showReportDetails,\n            selectedReportInfo,\n            detailReadOnly,\n            geoReports,\n        } = this.state\n\n        return this.state && (\n            <>\n                <Header locale={locale}/>\n\n                <Head>\n                    <title>\n                        {getI18nLabel(locale, 'scansReport.title')}\n                    </title>\n                </Head>\n\n                <div className={styles.filters}>\n                    <div className={styles.leftContainer}>\n                        <ul className={styles.filterOptions}>\n                            <li>\n                                <Select\n                                    defaultOption={selectedRegion}\n                                    label={getI18nLabel(locale, 'scansReport.filters.region')}\n                                    onChange={(e: any) => this.selectRegion(event)}\n                                    options={regions}\n                                />\n                            </li>\n                            <li>\n                                <Select\n                                    defaultOption={selectedUserScanner}\n                                    label={getI18nLabel(locale, 'scansReport.filters.scanner')}\n                                    onChange={(e: any) => this.selectUserScanner(event)}\n                                    options={scanners}\n                                />\n                            </li>\n                            <li>\n                                <Select\n                                    defaultOption={selectedMission}\n                                    label={getI18nLabel(locale, 'scansReport.filters.mission')}\n                                    onChange={(e: any) => this.selectMission(event)}\n                                    options={missions}\n                                />\n                            </li>\n                        </ul>\n                        <ul className={styles.filterOptions}>\n                            <li>\n                                <Datepicker\n                                    label={getI18nLabel(locale, 'captures.filters.startDate')}\n                                    selected={from}\n                                    onSelect={this.fromDateHandler}\n                                    placeholder='dd/mm/yyyy'\n                                    dateFormat='dd/MM/yyyy'\n                                />\n                            </li>\n                            <li>\n                                <Datepicker\n                                    label={getI18nLabel(locale, 'captures.filters.endDate')}\n                                    selected={to}\n                                    onSelect={this.toDateHandler}\n                                    placeholder='dd/mm/yyyy'\n                                    dateFormat='dd/MM/yyyy'\n                                />\n                            </li>\n                        </ul>\n                        <ul className={styles.filterOptions}>\n                            <li>\n                                    <Checkbox\n                                        className={styles.checkbox}\n                                        label={getI18nLabel(locale, 'captures.filters.statusValidated')}\n                                        checked={status === 'valid'}\n                                        onChange={() => this.changeStateFilter('statusValid')}\n                                    />\n                            </li>\n                            <li>\n                                    <Checkbox\n                                        className={styles.checkbox}\n                                        label={getI18nLabel(locale, 'captures.filters.statusRejected')}\n                                        checked={status === 'rejected'}\n                                        onChange={() => this.changeStateFilter('statusRejected')}\n                                    />\n                            </li>\n                            <li>\n                                    <Checkbox\n                                        className={styles.checkbox}\n                                        label={getI18nLabel(locale, 'captures.filters.statusPending')}\n                                        checked={status === 'pending'}\n                                        onChange={() => this.changeStateFilter('statusPending')}\n                                    />\n                            </li>\n                            <li>\n                            </li>\n                            <li>\n                                <ToggleSwitch optionLabels={[\n                                    getI18nLabel(locale, 'advancedSearch.actions.georeference'),\n                                    getI18nLabel(locale, 'advancedSearch.actions.georeference'),\n                                ]} name=\"switch\" id=\"switch\" checked={checkedGeo} onChange={this.setCheckedGeo} />\n\n                                {\n                                    checkedGeo &&\n                                        <div className={styles.geoSelect}>\n                                            <Dropdown title={\"Geolocalizaciones\"}\n                                                options={optionsGeoCatalog}\n                                                showReport={this.setGeolocationIdToggle}\n                                                deleteReport={this.deleteReport}\n                                                showDetailReport= {this.showDetailReport}\n                                            />\n                                        </div>\n                                }\n                            </li>\n                        </ul>\n                        <ul className={styles.filterOptions}>\n                            <li>\n                                <SecondaryButton\n                                    label={getI18nLabel(locale, 'advancedSearch.actions.cleanFilter')}\n                                    onClick={this.clearParams}\n                                />\n                            </li>\n                            <li>\n                                <SecondaryButton\n                                    label={getI18nLabel(locale, 'advancedSearch.actions.search')}\n                                    onClick={this.search}\n                                />\n                            </li>\n                            <li>\n                                <PrimaryButton\n                                    label={getI18nLabel(locale, 'advancedSearch.actions.download')}\n                                    onClick={() => this.fetchCSVReport()}\n                                />\n                            </li>\n                        </ul>\n                    </div>\n\n                    <div className={styles.rightContainer}>\n                        <div className={ styles.graphBlock }>\n\n                            <div className={ styles.resume }>\n                                {reports.length > 0 && (\n                                    <ul className={styles.info}>\n                                        {totalByStatus.Pendiente != 0 && <li>Pendientes: {totalByStatus.Pendiente}</li>}\n                                        {totalByStatus.Validada != 0 && <li>Validadas: {totalByStatus.Validada}</li>}\n                                        {totalByStatus.Rechazada != 0 && <li>Rechazadas: {totalByStatus.Rechazada}</li>}\n                                    </ul>\n                                )}\n                            </div>\n\n                            <div className={ styles.graph }>\n\n                                <div className={ styles.scannerResume }>\n                                    {reports.length > 0 && this.getChart()}\n                                    {reports.length > 0 && (\n                                        <ul className={styles.info}>\n                                            {selectedRegionLabel && <li>Región: {selectedRegionLabel}</li>}\n                                            {selectedUserScannerLabel && <li>Capturista: {selectedUserScannerLabel}</li>}\n                                            {selectedMissionLabel && <li>Misión: {selectedMissionLabel}</li>}\n                                            {(from && to) && <li>Periodo: {format(from, 'MM-dd-yyyy')} a {format(to, 'MM-dd-yyyy')}</li>}\n                                        </ul>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div>\n                    {reports.length && (\n                        <TableComplex\n                            actions={[]}\n                            content={reports || []}\n                            header={this.header || []}\n                            changePageNext={() => this.fetchReports(REPORT_TYPE.SCANS_CSV_ANALYST_REPORTS, {page: currentPage + 1})}\n                            changePagePrev={() => this.fetchReports(REPORT_TYPE.SCANS_CSV_ANALYST_REPORTS, {page: currentPage - 1})}\n                            total={total}\n                            currentPage={currentPage}\n                            totalPage={totalPages}\n                            onClickDetails={() => true}\n                            onChecked={() => true}\n                            count={count}\n                            checkboxStyles={''}\n                            textNotData={''}\n                            reportDetails={true}\n                            customClassName='fixed-header'\n                        />\n                    )}\n                </div>\n            </>\n        )\n    }\n}\n\nconst withRouter = (props) => {\n    const router = useRouter()\n    return <ScansReport {...props} router={router} />\n}\n\nexport default withRouter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}