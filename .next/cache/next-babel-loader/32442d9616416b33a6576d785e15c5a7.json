{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hgm\\\\Desktop\\\\Maquina3B\\\\ManDoc\\\\Proyectos\\\\Php\\\\DashBoard\\\\SVN\\\\Develop\\\\pricecheck-dashboard\\\\pages\\\\home\\\\scans\\\\index.tsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport React, { Component } from 'react';\nimport Router, { useRouter } from 'next/router';\nimport { format } from 'date-fns';\nimport Head from 'next/head';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faPencilAlt, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { Header } from '../../../components/header';\nimport { getDarkTheme, getHeader, getTheme, IsCustomTheme, getLocale } from '../../../utils/session-management';\nimport AdvanceSearch from '../../../components/search/AdvanceSearch';\nimport { TableComplex } from '../../../components/table';\nimport api from '../../../utils/api';\nimport Filter from '../../../components/search/Filter';\nimport { Checkbox } from '../../../components/checkbox';\nimport DialogModal from '../../../components/modal/DialogModal';\nimport { PrimaryButtonVariant } from '../../../components/buttons/PrimaryButton';\nimport { getUnitsCatalog, getBrandsCatalog, getStoresCatalog, getLinesCatalog, getGroupsCatalog, getGeolocationCatalog } from '../../../utils/catalogs';\nimport { Select } from '../../../components/select';\nimport PageTitle from '../../../components/pageTitle/PageTitle';\nimport Loader from '../../../components/loader/Loader';\nimport { textNotData } from '../../../utils/texts';\nimport styles from './scans.module.scss';\nimport { baseURLGeoref, georefApiKey } from '../../../utils/baseUrl';\nimport Datepicker from '../../../components/datepicker/datepicker';\nimport { getI18nLabel, translateTableComplexHeader } from '../../../i18n';\n\n//ELIMINAR import ExportButton from '../../../components/exportButton/ExportButton';\nimport { buildTheme } from '../../../utils/theme';\nclass ScansPage extends Component {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"state\", {\n      currentPage: 1,\n      totalPage: 1,\n      total: 0,\n      count: 0,\n      scans: [],\n      baseScans: [],\n      isOpen: false,\n      scanDeleteId: '',\n      showLoader: false,\n      textNotData: '',\n      header: [{\n        title: 'Seleccionar',\n        name: 'selected',\n        type: 'checkbox',\n        isHidedable: false\n      }, {\n        title: 'Captura',\n        name: 'id',\n        type: 'id',\n        isHidedable: false\n      }, {\n        title: 'Foto principal',\n        name: 'photo_main',\n        type: 'img',\n        isHidedable: true\n      }, {\n        title: 'Foto precio',\n        name: 'photo_price',\n        type: 'img',\n        isHidedable: true\n      }, {\n        title: 'Código de barras',\n        name: 'barcode',\n        type: 'text',\n        isHidedable: false\n      }, {\n        title: 'Producto',\n        name: 'product',\n        type: 'text',\n        isHidedable: false\n      }, {\n        title: 'Marca',\n        name: 'brand',\n        type: 'text',\n        isHidedable: false\n      }, {\n        title: 'Tipo',\n        name: 'type',\n        type: 'text',\n        isHidedable: false\n      }, {\n        title: 'Cadena comercial',\n        name: 'chain',\n        type: 'text',\n        isHidedable: false\n      }, {\n        title: 'Sucursal',\n        name: 'branch',\n        type: 'text',\n        isHidedable: true\n      }, {\n        title: 'Capturista',\n        name: 'scanned_by',\n        type: 'text',\n        isHidedable: false\n      }, {\n        title: 'Validador',\n        name: 'reviewed',\n        type: 'text',\n        isHidedable: false\n      }, {\n        title: 'Estado',\n        name: 'status',\n        type: 'text',\n        isHidedable: false\n      }, {\n        title: 'Cantidad',\n        name: 'grammage_quantity',\n        type: 'number',\n        isHidedable: true\n      }, {\n        title: 'Unidad',\n        name: 'unit',\n        type: 'text',\n        isHidedable: true\n      }, {\n        title: 'Precio unitario',\n        name: 'unit_price',\n        type: 'money',\n        isHidedable: false\n      }, {\n        title: 'Grupo',\n        name: 'group',\n        type: 'text',\n        isHidedable: false\n      }, {\n        title: 'Linea',\n        name: 'line',\n        type: 'text',\n        isHidedable: false\n      }, {\n        title: 'Fecha de alta de producto',\n        name: 'product_created_date',\n        type: 'date',\n        isHidedable: false\n      }, {\n        title: 'Precio mínimo',\n        name: 'lower_price',\n        type: 'money',\n        isHidedable: false\n      }, {\n        title: 'Precio máximo',\n        name: 'highest_price',\n        type: 'money',\n        isHidedable: false\n      }, {\n        title: 'Fecha de captura',\n        name: 'capture_date',\n        type: 'date',\n        isHidedable: false\n      }, {\n        title: 'Precio de captura',\n        name: 'capture_price',\n        type: 'money',\n        isHidedable: false\n      }, {\n        title: 'Acciones',\n        name: '',\n        type: 'actions',\n        isHidedable: false\n      }],\n      actions: [{\n        icon: faTrash,\n        color: '#DE4747',\n        action: scan => this.openModalDelete(scan.scan)\n      }, {\n        icon: faPencilAlt,\n        color: '#71A4E4',\n        action: scan => this.openEdit(scan.scan)\n      }],\n      textSearch: '',\n      from: '',\n      to: '',\n      withPhoto: null,\n      isPromotion: null,\n      status: null,\n      type: null,\n      filters: null,\n      unitsCatalog: [],\n      brandsCatalog: [],\n      storesCatalog: [],\n      linesCatalog: [],\n      groupsCatalog: [],\n      selectedCatalog: [],\n      geolocationCatalog: [],\n      optionsGeoCatalog: [],\n      optionsCatalog: [{\n        value: 'brandsCatalog',\n        label: 'Marca'\n      }, {\n        value: 'groupsCatalog',\n        label: 'Grupo'\n      }, {\n        value: 'linesCatalog',\n        label: 'Linea'\n      }, {\n        value: 'storesCatalog',\n        label: 'Cadena'\n      }, {\n        value: 'unitsCatalog',\n        label: 'Unidad'\n      }],\n      filterSelected: '0',\n      filterListSelected: [],\n      selectedScansId: [],\n      selectedGeolocated: -1,\n      filterDownloadGeo: [],\n      checkedGeo: false,\n      geolocationIdToggle: '0',\n      //Lleva el id de la geolocalizacion seleccioanda\n      nameGeoLocation: this.props.nameLocation\n    });\n    _defineProperty(this, \"units\", {\n      cm: 'Centimetro',\n      m: 'Metro',\n      ml: 'Mililitro',\n      lt: 'Litro',\n      mg: 'Miligramo',\n      g: 'Gramo',\n      kg: 'Kilogramo',\n      pieza: 'Pieza'\n    });\n    _defineProperty(this, \"componentDidMount\", async () => {\n      const isCustom = IsCustomTheme();\n      const hasDarkTheme = getDarkTheme() === '1' ? true : false;\n      if (hasDarkTheme) {\n        document.querySelector('body').classList.remove('custom');\n        document.querySelector('body').classList.add('darkmode');\n      }\n      if (isCustom) {\n        const theme = getTheme();\n        const currentTheme = buildTheme(theme);\n        const style = document.createElement('style');\n        style.innerHTML = currentTheme;\n        document.body.appendChild(style);\n        document.querySelector('body').classList.add('custom');\n      }\n      this.getGeoCatalogs();\n      let currentPageSaved = localStorage.getItem('scansPage') ? parseInt(localStorage.getItem('scansPage')) : this.state.currentPage;\n\n      // Show loader first\n      this.setState({\n        showLoader: true\n      });\n\n      // Asynchronously get all this data without blocking everything else\n\n      const {\n        geolocationCatalog,\n        unitsCatalog,\n        brandsCatalog,\n        storesCatalog,\n        linesCatalog,\n        groupsCatalog\n      } = await this.loadCatalogs();\n      this.setState({\n        // optionsGeoCatalog:formatedGeoCatalog,\n        geolocationCatalog,\n        unitsCatalog,\n        brandsCatalog,\n        storesCatalog,\n        linesCatalog,\n        groupsCatalog,\n        from: localStorage.getItem('scansFrom') || '',\n        to: localStorage.getItem('scansTo') || '',\n        textSearch: localStorage.getItem('scansTextSearch') || '',\n        status: localStorage.getItem('scansStatus') || '',\n        type: localStorage.getItem('scansType') || '',\n        withPhoto: localStorage.getItem('scansWithPhoto') ? localStorage.getItem('scansWithPhoto') === 'true' : null,\n        isPromotion: localStorage.getItem('scansWithPhoto') ? localStorage.getItem('scansIsPromotion') === 'true' : null,\n        filterListSelected: localStorage.getItem('scansFilterListSelected') ? JSON.parse(localStorage.getItem('scansFilterListSelected')) : []\n      }, () => {\n        this.state.geolocationIdToggle != '0' ? this.getFilterGeolocated() : this.loadData(currentPageSaved);\n        this.clearStorageData();\n      });\n    });\n    // Get all catalogs asynchronously and concurrently\n    _defineProperty(this, \"loadCatalogs\", async () => {\n      const fetchers = [getGeolocationCatalog(), getUnitsCatalog(), getBrandsCatalog(), getStoresCatalog(), getLinesCatalog(), getGroupsCatalog()];\n      const catalogResponse = await Promise.all(fetchers);\n      const catalogs = {\n        geolocationCatalog: catalogResponse[0],\n        unitsCatalog: catalogResponse[1],\n        brandsCatalog: catalogResponse[2],\n        storesCatalog: catalogResponse[3],\n        linesCatalog: catalogResponse[4],\n        groupsCatalog: catalogResponse[5]\n      };\n      return catalogs;\n    });\n    _defineProperty(this, \"getGeoCatalogs\", async () => {\n      const fetch = getGeolocationCatalog();\n      const catalogs = await Promise.resolve(fetch);\n      const formatedGeoCatalog = catalogs.map((item, index) => {\n        return {\n          value: item.id,\n          label: item.name\n        };\n      });\n      this.setState({\n        optionsGeoCatalog: formatedGeoCatalog,\n        geolocationCatalog: catalogs\n      });\n    });\n    _defineProperty(this, \"loadData\", async (page = 1) => {\n      this.setState({\n        showLoader: true\n      });\n      try {\n        const response = await api.post(`api/reports/scans?page=${page}`, this.createData(), {\n          headers: getHeader()\n        });\n        if (response.status === 200) {\n          const scans = this.getCheckedScans(response.data.data);\n          const total = response.data.pagination.total;\n          const count = response.data.pagination.count;\n          const currentPage = response.data.pagination.current_page;\n          const totalPage = response.data.pagination.total_pages;\n          this.setState({\n            scans,\n            total,\n            count,\n            currentPage,\n            totalPage,\n            showLoader: false\n          });\n        }\n      } catch (e) {\n        // TODO: Mostrar mensaje de error\n        throw new Error(e);\n      } finally {\n        this.setState({\n          showLoader: false\n        });\n      }\n    });\n    _defineProperty(this, \"getCheckedScans\", scans => {\n      const scan = scans.map(scan => {\n        return _objectSpread(_objectSpread({}, scan), {}, {\n          id: scan.scan\n        });\n      });\n      if (this.state.selectedScansId.length > 0) {\n        scan.forEach(element => {\n          const scanChecked = this.state.selectedScansId.find(item => item === element.id);\n          element.checked = scanChecked ? true : false;\n        });\n      }\n      return scan;\n    });\n    _defineProperty(this, \"createData\", () => {\n      const data = {};\n      if (this.state.textSearch.length > 0) {\n        data.textSearch = this.state.textSearch;\n      }\n      if (this.state.from) {\n        data.from = this.formatDate(this.state.from);\n      }\n      if (this.state.to) {\n        data.to = this.formatDate(this.state.to);\n      }\n      if (this.state.withPhoto !== null) {\n        data.withPhoto = this.state.withPhoto ? 'yes' : 'no';\n      }\n      if (this.state.isPromotion !== null) {\n        data.is_promotion = this.state.isPromotion ? 'yes' : 'no';\n      }\n      if (this.state.status) {\n        data.status = this.state.status;\n      }\n      if (this.state.type) {\n        data.type = this.state.type;\n      }\n      const brandList = this.state.filterListSelected.filter(e => e.option === 'brandsCatalog');\n      if (brandList.length > 0) {\n        data.brand = brandList.map(b => b.value);\n      }\n      const groupList = this.state.filterListSelected.filter(e => e.option === 'groupsCatalog');\n      if (groupList.length > 0) {\n        data.group = groupList.map(b => b.value);\n      }\n      const lineList = this.state.filterListSelected.filter(e => e.option === 'linesCatalog');\n      if (lineList.length > 0) {\n        data.line = lineList.map(b => b.value);\n      }\n      const storeList = this.state.filterListSelected.filter(e => e.option === 'storesCatalog');\n      if (storeList.length > 0) {\n        data.chain = storeList.map(b => b.value);\n      }\n      const unitList = this.state.filterListSelected.filter(e => e.option === 'unitsCatalog');\n      if (unitList.length > 0) {\n        data.unit = unitList.map(b => b.value);\n      }\n      return data;\n    });\n    _defineProperty(this, \"clearParams\", () => {\n      this.setState({\n        textSearch: '',\n        from: '',\n        to: '',\n        withPhoto: null,\n        isPromotion: null,\n        status: null,\n        type: null,\n        filterListSelected: [],\n        filterSelected: '0'\n      }, () => this.makeFilter());\n    });\n    _defineProperty(this, \"deleteScan\", async () => {\n      try {\n        const response = await api.delete(`api/scan/${this.state.scanDeleteId}`, {\n          headers: getHeader()\n        });\n        if (response.status === 204) {\n          this.setState({\n            isOpen: false,\n            scanDeleteId: ''\n          });\n          this.loadData(1);\n        }\n      } catch (e) {\n        // TODO: Mandar mensaje de error\n        throw new Error(e);\n      }\n    });\n    _defineProperty(this, \"openEdit\", id => {\n      this.saveData();\n      Router.push(`/home/scans/${id}`);\n    });\n    _defineProperty(this, \"saveData\", () => {\n      const {\n        currentPage,\n        textSearch,\n        from,\n        to,\n        withPhoto,\n        isPromotion,\n        status,\n        type,\n        filterListSelected\n      } = this.state;\n      localStorage.setItem('scansPage', `${currentPage}`);\n      if (textSearch && textSearch.length > 0) {\n        localStorage.setItem('scansTextSearch', textSearch);\n      }\n      if (from && from.length > 0) {\n        localStorage.setItem('scansFrom', from);\n      }\n      if (to && to.length > 0) {\n        localStorage.setItem('scansTo', to);\n      }\n      if (withPhoto !== null) {\n        localStorage.setItem('scansWithPhoto', withPhoto);\n      }\n      if (isPromotion !== null) {\n        localStorage.setItem('scansIsPromotion', isPromotion);\n      }\n      if (status && status.length > 0) {\n        localStorage.setItem('scansStatus', status);\n      }\n      if (type && type.length > 0) {\n        localStorage.setItem('scansType', type);\n      }\n      if (filterListSelected && filterListSelected.length > 0) {\n        localStorage.setItem('scansFilterListSelected', JSON.stringify(filterListSelected));\n      }\n    });\n    _defineProperty(this, \"downloadData\", async () => {\n      try {\n        const getDownloadData = this.createData();\n        if (this.state.selectedScansId.length > 0) {\n          getDownloadData.items = this.state.selectedScansId;\n        }\n        const response = await api.post(`api/reports/scans-csv`, getDownloadData, {\n          headers: getHeader(),\n          responseType: 'blob'\n        });\n        if (response.status === 200) {\n          this.download(response.data);\n        }\n      } catch (e) {\n        // TODO: Mostrar mensaje de error\n        throw new Error(e);\n      }\n    });\n    _defineProperty(this, \"openModalDelete\", scan => {\n      this.setState({\n        isOpen: true,\n        scanDeleteId: scan\n      });\n    });\n    _defineProperty(this, \"getCorrectCatalog\", optionSelected => {\n      let selectedCatalog = this.state[optionSelected];\n      const filterSelected = optionSelected;\n      this.setState({\n        selectedCatalog,\n        filterSelected\n      });\n    });\n    _defineProperty(this, \"getCorrectOption\", value => {\n      const filterListSelected = this.state.filterListSelected;\n      const optionSelected = this.state.selectedCatalog.filter(\n      // Cast e.value to string because of API shenanigans\n      e => `${e.value}` === value);\n      if (optionSelected.length > 0) {\n        filterListSelected.push({\n          option: this.state.filterSelected,\n          value,\n          label: optionSelected[0].label\n        });\n      }\n      this.setState({\n        filterListSelected,\n        filterSelected: '0',\n        selectedCatalog: []\n      });\n    });\n    _defineProperty(this, \"deleteDynamicFilter\", value => {\n      const filterListSelected = this.state.filterListSelected.filter(e => value != e.value);\n      this.setState({\n        filterListSelected\n      });\n    });\n    _defineProperty(this, \"setCheckedScans\", id => {\n      const selectedScansId = [...this.state.selectedScansId];\n      const indexSelectedItem = selectedScansId.indexOf(id);\n      const scans = [...this.state.scans];\n      const selectedScan = scans.find(scans => scans.id === id);\n      if (indexSelectedItem > -1) {\n        selectedScansId.splice(indexSelectedItem, 1);\n        selectedScan.checked = false;\n      } else {\n        selectedScansId.push(id);\n        selectedScan.checked = true;\n      }\n      this.setState({\n        selectedScansId,\n        scans\n      });\n    });\n    // Filtra las columnas que se mostraran junto con la la creacion del state\n    // Si se quieren agregar mas datos provenientes de la API agregar aqui\n    _defineProperty(this, \"transformData\", data => {\n      const locale = getLocale();\n      return data.map(item => {\n        return {\n          id: item.id,\n          photo_main: item.productPicture,\n          photo_price: item.shelfPicture,\n          barcode: item.barcode,\n          product: item.productName,\n          brand: item.brandName,\n          scanned_by: item.capturist,\n          reviewed: item.validator,\n          product_created_date: item.productCreation,\n          chain: item.storeName,\n          branch: item.storeAddress,\n          capture_date: item.captureDate,\n          unit_price: item.unitPrice,\n          grammage_quantity: item.productUnitQuantity,\n          capture_price: item.price,\n          unit: getI18nLabel(locale, `captures.units.${item.productUnit}`),\n          type: item.productType,\n          group: item.groupName,\n          line: item.lineName,\n          highest_price: item.productMaxPrice,\n          lower_price: item.productMinPrice,\n          status: item.isValid ? getI18nLabel(locale, `captures.status.validated`) : getI18nLabel(locale, `captures.status.pending`),\n          coments: item.comments,\n          capturist_id: item.capturistId,\n          region: item.region,\n          product_price: item.productPrice //Precio de alta\n        };\n      });\n    });\n    // Obtiene los datos para las geolocalizaciones\n    _defineProperty(this, \"getFilterGeolocated\", () => {\n      let selectedGeolocatedId = '';\n      if (this.state.geolocationIdToggle !== '0') {\n        selectedGeolocatedId = this.state.geolocationIdToggle;\n      } else {\n        selectedGeolocatedId = this.state.geolocationIdToggle !== '0' ? this.state.geolocationIdToggle : this.state.geolocationCatalog[0].id;\n      }\n      const selectedLocation = this.state.geolocationCatalog.filter(location => location.id === parseInt(selectedGeolocatedId));\n      this.setState({\n        nameGeoLocation: selectedLocation[0].name\n      });\n      const selectedGeolocatedData = {\n        point1: selectedLocation[0].point1,\n        point2: selectedLocation[0].point2,\n        point3: selectedLocation[0].point3,\n        point4: selectedLocation[0].point4\n      };\n      // Obtener datos de geolocalizacion de la API\n      api({\n        url: 'api/scans',\n        baseURL: baseURLGeoref,\n        headers: {\n          Authorization: `Api-Key ${georefApiKey}`\n        },\n        params: selectedGeolocatedData\n      }).then(response => {\n        const transformedData = this.transformData(response.data.data);\n        const dataDownloadGeo = this.getFilterGeo(transformedData);\n        this.setState({\n          showLoader: false\n        });\n        this.setState({\n          filterDownloadGeo: dataDownloadGeo\n        });\n        this.setState({\n          scans: transformedData\n        });\n        this.setState({\n          baseScans: transformedData\n        });\n        if (response.data.data.length === 0) {\n          this.setState({\n            textNotData\n          });\n        } else {\n          this.setState({\n            textNotData: ''\n          });\n        }\n      }).catch(e => {\n        throw new Error(e);\n      });\n      this.setState({\n        currentPage: 1,\n        totalPage: 1\n      });\n    });\n    _defineProperty(this, \"setAdvancedSearchText\", e => {\n      const {\n        value\n      } = e.target;\n      this.setState({\n        textSearch: value\n      });\n    });\n    // Se ejecuta cuando el toggle es activado/desactivado\n    _defineProperty(this, \"setCheckedGeo\", e => {\n      this.setState({\n        textSearch: ''\n      });\n      this.setState({\n        showLoader: true\n      });\n      const value = !!e;\n      this.setState({\n        checkedGeo: value\n      }, () => {\n        if (value) {\n          //Si se enciende busca los filtrados del primer registro\n          this.setState({\n            nameGeoLocation: \"Georeportes\",\n            scans: [],\n            total: 0,\n            count: 0,\n            currentPage: 0,\n            totalPage: 0,\n            showLoader: false\n          });\n        } else {\n          //Si se apaga busca los generales\n          this.loadData();\n        }\n      });\n    });\n    // Guarda el id del Geolocalización\n    // setGeolocationIdToggle = (e: SyntheticEvent) => {\n    _defineProperty(this, \"setGeolocationIdToggle\", id => {\n      this.setState({\n        showLoader: true\n      });\n      // const { value } = e.target as HTMLInputElement\n      this.setState({\n        geolocationIdToggle: `${id}`\n      }, () => {\n        const resultado = this.state.geolocationCatalog.find(element => element.value === id);\n        this.getFilterGeolocated();\n        this.setState({\n          textSearch: ''\n        });\n      });\n    });\n    _defineProperty(this, \"fromDateHandler\", date => {\n      this.setState({\n        from: date\n      });\n    });\n    _defineProperty(this, \"toDateHandler\", date => {\n      this.setState({\n        to: date\n      });\n    });\n    _defineProperty(this, \"getFilterGeo\", data => {\n      console.log(\"map\", data);\n      const options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      };\n      const formatData = data.map((register, index) => {\n        let obj = {\n          \"ID Captura\": register.id,\n          // foto_principal:register.photo_main,\n          \"Codigo de Barras\": register.barcode,\n          \"Producto\": register.product,\n          \"Marca\": register.brand,\n          \"Tipo\": register.type,\n          \"Cadena Comercial\": register.chain,\n          \"Direccion\": register.branch,\n          \"ID Capturista\": register.capturist_id,\n          \"Capturista\": register.scanned_by,\n          \"Region\": register.region,\n          \"Validador\": register.reviewed,\n          \"Estatus\": register.status,\n          \"Comentarios\": register.comments,\n          \"Cantidad\": register.grammage_quantity,\n          \"Unidad\": register.unit,\n          \"Precio Unitario\": register.unit_price,\n          \"Grupo\": register.group,\n          \"Linea\": register.line,\n          \"Fecha de Alta\": new Date(register.product_created_date).toLocaleDateString('es', options).replace(RegExp(' de ', 'g'), '/'),\n          \"Precio de Alta\": register.product_price,\n          \"Precio Minimo\": register.lower_price,\n          \"Precio Maximo\": register.highest_price,\n          \"Fecha de Captura\": new Date(register.capture_date).toLocaleDateString('es', options).replace(RegExp(' de ', 'g'), '/'),\n          \"Precio de Captura\": register.capture_price,\n          \"Promocion\": \" - \"\n        };\n        return obj;\n      });\n      return formatData;\n    });\n    _defineProperty(this, \"filterOnGeolocation\", async () => {\n      const {\n        textSearch,\n        baseScans,\n        from,\n        to,\n        withPhoto,\n        isPromotion,\n        status,\n        type,\n        selectedCatalog,\n        filterSelected,\n        filterListSelected\n      } = this.state;\n      const statusArray = {\n        'valid': 'Validado',\n        'rejected': 'Rechazado',\n        'pending': 'Pendiente'\n      };\n      const parametrosArray = {\n        'brandsCatalog': 'brand',\n        'groupsCatalog': 'group',\n        'linesCatalog': 'line',\n        'storesCatalog': 'chain',\n        'unitsCatalog': 'unit'\n      };\n      const desde = Date.parse(from);\n      const hasta = Date.parse(to);\n      let newArray = baseScans.filter(function (el) {\n        return textSearch !== \"\" ? el.product.toLowerCase().indexOf(textSearch.toLowerCase()) > -1 : true;\n      });\n      if (!Number.isNaN(desde)) {\n        newArray = newArray.filter(function (el) {\n          return Date.parse(el.capture_date) > desde;\n        });\n      }\n      if (!Number.isNaN(hasta)) {\n        newArray = newArray.filter(function (el) {\n          return Date.parse(el.capture_date) < hasta;\n        });\n      }\n      if (isPromotion === true || isPromotion === false) {\n        newArray = newArray.filter(function (el) {\n          if (el.isPromotion) {\n            return isPromotion === true ? el.isPromotion === 1 : el.isPromotion == 0;\n          } else {\n            return true;\n          }\n        });\n      }\n      if (isPromotion === true || isPromotion === false) {\n        newArray = newArray.filter(function (el) {\n          if (el.isPromotion) {\n            return isPromotion === true ? el.isPromotion === 1 : el.isPromotion == 0;\n          } else {\n            return true;\n          }\n        });\n      }\n      if (status) {\n        newArray = newArray.filter(function (el) {\n          return statusArray[status] === el.status;\n        });\n      }\n      if (type) {\n        newArray = newArray.filter(function (el) {\n          return el.type === type;\n        });\n      }\n      if (filterListSelected.length > 0) {\n        newArray = newArray.filter(function (el) {\n          let resp = filterListSelected.every((element, index) => {\n            if (parametrosArray[element.option] === 'line' || parametrosArray[element.option] === 'group') {\n              let match = element.label.slice(-4);\n              const regex = new RegExp(match, 'i');\n              return regex.test(el[parametrosArray[element.option]]);\n            } else {\n              return el[parametrosArray[element.option]].toLowerCase() === element.label.toLowerCase();\n            }\n          });\n          return resp;\n        });\n      }\n      const dataDownloadGeo = this.getFilterGeo(newArray);\n      this.setState({\n        filterDownloadGeo: dataDownloadGeo\n      });\n      this.setState({\n        scans: newArray\n      });\n    });\n    _defineProperty(this, \"makeFilter\", () => {\n      this.state.checkedGeo ? this.filterOnGeolocation() : this.loadData();\n    });\n    _defineProperty(this, \"changeStateFilter\", stateIndex => {\n      switch (stateIndex) {\n        case 'isPromotionFalse':\n          this.setState(prevState => {\n            return {\n              isPromotion: prevState.isPromotion === false ? null : false\n            };\n          });\n          break;\n        case 'isPromotionTrue':\n          this.setState(prevState => {\n            return {\n              isPromotion: prevState.isPromotion ? null : true\n            };\n          });\n          break;\n        case 'statusValid':\n          this.setState(prevState => {\n            return {\n              status: prevState.status === 'valid' ? null : 'valid'\n            };\n          });\n          break;\n        case 'statusRejected':\n          this.setState(prevState => {\n            return {\n              status: prevState.status === 'rejected' ? null : 'rejected'\n            };\n          });\n          break;\n        case 'statusPending':\n          this.setState(prevState => {\n            return {\n              status: prevState.status === 'pending' ? null : 'pending'\n            };\n          });\n          break;\n        case 'typeMc':\n          this.setState(prevState => {\n            return {\n              type: prevState.type === 'MC' ? null : 'MC'\n            };\n          });\n          break;\n        case 'typeMp':\n          this.setState(prevState => {\n            return {\n              type: prevState.type === 'MP' ? null : 'MP'\n            };\n          });\n          break;\n        case 'withPhotoTrue':\n          this.setState(prevState => {\n            return {\n              withPhoto: prevState.withPhoto ? null : true\n            };\n          });\n          break;\n        case 'withPhotoFalse':\n          this.setState(prevState => {\n            return {\n              withPhoto: prevState.withPhoto === false ? null : false\n            };\n          });\n          break;\n        default:\n          break;\n      }\n    });\n  }\n  clearStorageData() {\n    const items = ['scansPage', 'scansFrom', 'scansTo', 'scansWithPhoto', 'scansIsPromotion', 'scansStatus', 'scansType', 'scansFilterListSelected'];\n    items.forEach(i => localStorage.removeItem(i));\n  }\n\n  // Función para descargar información\n\n  download(res, type = 'text/csv;charset=utf-8;', extension = 'csv') {\n    console.log('aaa - res: ', res);\n    const url = window.URL.createObjectURL(new Blob([\"\\ufeff\", res], {\n      type\n    }));\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', `scan-report-${format(new Date(), 'MM-dd-yyyy-HH:mm')}.${extension}`);\n    document.body.appendChild(link);\n    link.click();\n    link.parentNode.removeChild(link);\n  }\n  formatDate(date) {\n    if (date) {\n      date = new Date(date);\n      let month = '' + (date.getMonth() + 1);\n      let day = '' + date.getDate();\n      let year = date.getFullYear();\n      if (month.length < 2) {\n        month = '0' + month;\n      }\n      if (day.length < 2) {\n        day = '0' + day;\n      }\n      return `${year}-${month}-${day}`;\n    }\n    return '';\n  }\n  render() {\n    const {\n      currentPage,\n      total,\n      totalPage,\n      count,\n      scans,\n      actions,\n      textSearch,\n      withPhoto,\n      isPromotion,\n      status,\n      type,\n      from,\n      to,\n      selectedCatalog,\n      filterListSelected,\n      filterSelected,\n      isOpen,\n      showLoader,\n      filterDownloadGeo\n    } = this.state;\n    selectedCatalog.sort((a, b) => a.label.toLowerCase() > b.label.toLowerCase() ? 1 : -1);\n    const locale = getLocale();\n    let optionsCatalog = this.state.optionsCatalog.map(option => {\n      option.label = getI18nLabel(locale, `captures.optionsCatalog.${option.value}`);\n      return option;\n    });\n    const header = translateTableComplexHeader(locale, this.state.header, 'captures.table.head');\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1125,\n        columnNumber: 17\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1126,\n        columnNumber: 21\n      }\n    }, \"Scans\")), __jsx(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1129,\n        columnNumber: 17\n      }\n    }), __jsx(Loader, {\n      show: showLoader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1131,\n        columnNumber: 17\n      }\n    }), __jsx(AdvanceSearch, {\n      onDownload: () => this.downloadData(),\n      inputSearchValue: textSearch,\n      onChangeInputSearch: this.setAdvancedSearchText,\n      onSearch: () => this.makeFilter(),\n      onClear: () => this.clearParams(),\n      checkedGeo: this.state.checkedGeo,\n      setCheckedGeo: this.setCheckedGeo,\n      geolocationIdToggle: this.state.geolocationIdToggle,\n      setGeolocationIdToggle: this.setGeolocationIdToggle,\n      optionsGeoCatalog: this.state.optionsGeoCatalog,\n      filterDownloadGeo: this.state.filterDownloadGeo,\n      getGeoCatalogs: this.getGeoCatalogs,\n      showGeoref: true,\n      locale: locale,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1135,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: styles.filterCon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1151,\n        columnNumber: 25\n      }\n    }, __jsx(Filter, {\n      label: \"\",\n      showFilters: true,\n      floatWindow: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1152,\n        columnNumber: 29\n      }\n    }, __jsx(\"div\", {\n      className: `${styles.filter} row`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1157,\n        columnNumber: 33\n      }\n    }, __jsx(\"div\", {\n      className: `${styles.inputCon} col-2 m-0 p-2`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1158,\n        columnNumber: 37\n      }\n    }, __jsx(Datepicker, {\n      label: getI18nLabel(locale, 'captures.filters.startDate'),\n      selected: from,\n      onSelect: this.fromDateHandler,\n      placeholder: \"dd/mm/yyyy\",\n      dateFormat: \"dd/MM/yyyy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1159,\n        columnNumber: 41\n      }\n    }), __jsx(Datepicker, {\n      label: getI18nLabel(locale, 'captures.filters.endDate'),\n      selected: to,\n      onSelect: this.toDateHandler,\n      placeholder: \"dd/mm/yyyy\",\n      dateFormat: \"dd/MM/yyyy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1167,\n        columnNumber: 41\n      }\n    })), __jsx(\"div\", {\n      className: `${styles.checkboxesContainer} col-8 m-0 p-2`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1176,\n        columnNumber: 37\n      }\n    }, __jsx(\"div\", {\n      className: \"row justify-content-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1177,\n        columnNumber: 41\n      }\n    }, __jsx(\"div\", {\n      className: `${styles.checkboxContainer} col-3 m-0 p-2`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1178,\n        columnNumber: 45\n      }\n    }, __jsx(Checkbox, {\n      className: styles.checkbox,\n      label: getI18nLabel(locale, 'captures.filters.withImage'),\n      checked: withPhoto === true,\n      onChange: () => this.changeStateFilter('withPhotoTrue'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1179,\n        columnNumber: 49\n      }\n    })), __jsx(\"div\", {\n      className: `${styles.checkboxContainer} col-3 m-0 p-2`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1187,\n        columnNumber: 45\n      }\n    }, __jsx(Checkbox, {\n      className: styles.checkbox,\n      label: getI18nLabel(locale, 'captures.filters.withoutImage'),\n      checked: withPhoto === false,\n      onChange: () => this.changeStateFilter('withPhotoFalse'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1188,\n        columnNumber: 49\n      }\n    })), __jsx(\"div\", {\n      className: `${styles.checkboxContainer} col-3 m-0 p-2`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1196,\n        columnNumber: 45\n      }\n    }, __jsx(Checkbox, {\n      className: styles.checkbox,\n      label: getI18nLabel(locale, 'captures.filters.normalPrice'),\n      checked: isPromotion === false,\n      onChange: () => this.changeStateFilter('isPromotionFalse'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1197,\n        columnNumber: 49\n      }\n    })), __jsx(\"div\", {\n      className: `${styles.checkboxContainer} col-3 m-0 p-2`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1205,\n        columnNumber: 45\n      }\n    }, __jsx(Checkbox, {\n      className: styles.checkbox,\n      label: getI18nLabel(locale, 'captures.filters.priceWithPromotion'),\n      checked: isPromotion === true,\n      onChange: () => this.changeStateFilter('isPromotionTrue'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1206,\n        columnNumber: 49\n      }\n    }))), __jsx(\"div\", {\n      className: \"row justify-content-start pb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1215,\n        columnNumber: 41\n      }\n    }, __jsx(\"div\", {\n      className: `${styles.checkboxContainer} col-3 m-0 p-2`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1216,\n        columnNumber: 45\n      }\n    }, __jsx(Checkbox, {\n      className: styles.checkbox,\n      label: getI18nLabel(locale, 'captures.filters.statusValidated'),\n      checked: status === 'valid',\n      onChange: () => this.changeStateFilter('statusValid'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1217,\n        columnNumber: 49\n      }\n    })), __jsx(\"div\", {\n      className: `${styles.checkboxContainer} col-3 m-0 p-2`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1225,\n        columnNumber: 45\n      }\n    }, __jsx(Checkbox, {\n      className: styles.checkbox,\n      label: getI18nLabel(locale, 'captures.filters.statusRejected'),\n      checked: status === 'rejected',\n      onChange: () => this.changeStateFilter('statusRejected'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1226,\n        columnNumber: 49\n      }\n    })), __jsx(\"div\", {\n      className: `${styles.checkboxContainer} col-3 m-0 p-2`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1234,\n        columnNumber: 45\n      }\n    }, __jsx(Checkbox, {\n      className: styles.checkbox,\n      label: getI18nLabel(locale, 'captures.filters.statusPending'),\n      checked: status === 'pending',\n      onChange: () => this.changeStateFilter('statusPending'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1235,\n        columnNumber: 49\n      }\n    }))), __jsx(\"div\", {\n      className: \"row justify-content-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1243,\n        columnNumber: 41\n      }\n    }, __jsx(\"div\", {\n      className: `${styles.checkboxContainer} col-3 m-0 p-2`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1244,\n        columnNumber: 45\n      }\n    }, __jsx(Checkbox, {\n      className: styles.checkbox,\n      label: \"MC\",\n      checked: type === 'MC',\n      onChange: () => this.changeStateFilter('typeMc'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1245,\n        columnNumber: 49\n      }\n    })), __jsx(\"div\", {\n      className: `${styles.checkboxContainer} col-3 m-0 p-2`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1252,\n        columnNumber: 45\n      }\n    }, __jsx(Checkbox, {\n      className: styles.checkbox,\n      label: \"MP\",\n      checked: type === 'MP',\n      onChange: () => this.changeStateFilter('typeMp'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1253,\n        columnNumber: 49\n      }\n    })))), __jsx(\"div\", {\n      className: `${styles.inputCon} col-2 m-0 p-2`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1263,\n        columnNumber: 37\n      }\n    }, __jsx(Select, {\n      defaultOption: filterSelected,\n      label: getI18nLabel(locale, 'captures.filters.param'),\n      onChange: e => this.getCorrectCatalog(e.target.value),\n      options: optionsCatalog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1264,\n        columnNumber: 41\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1270,\n        columnNumber: 41\n      }\n    }), __jsx(Select, {\n      defaultOption: \"0\",\n      label: getI18nLabel(locale, 'captures.filters.value'),\n      onChange: e => this.getCorrectOption(e.target.value),\n      options: selectedCatalog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1272,\n        columnNumber: 41\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1279,\n        columnNumber: 41\n      }\n    }), __jsx(\"div\", {\n      className: styles.tags,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1281,\n        columnNumber: 41\n      }\n    }, filterListSelected.map(f => {\n      const optionObj = optionsCatalog.filter(o => o.value === f.option);\n      return __jsx(\"div\", {\n        key: f.value,\n        className: styles.tag,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1288,\n          columnNumber: 53\n        }\n      }, __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1289,\n          columnNumber: 57\n        }\n      }, optionObj[0].label, \" - \", f.label), __jsx(FontAwesomeIcon, {\n        style: {\n          cursor: 'pointer'\n        },\n        onClick: () => this.deleteDynamicFilter(f.value),\n        icon: faTimes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1293,\n          columnNumber: 57\n        }\n      }));\n    }))))))), __jsx(\"div\", {\n      className: styles.tableComplexContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1309,\n        columnNumber: 17\n      }\n    }, __jsx(PageTitle, {\n      title: this.state.checkedGeo ? `${this.state.nameGeoLocation}` : getI18nLabel(locale, 'captures.title'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1310,\n        columnNumber: 21\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1316,\n        columnNumber: 21\n      }\n    }), __jsx(TableComplex, {\n      actions: actions,\n      content: scans,\n      header: header,\n      changePageNext: () => this.loadData(currentPage + 1),\n      changePagePrev: () => this.loadData(currentPage - 1),\n      total: total,\n      currentPage: currentPage,\n      totalPage: totalPage,\n      onClickDetails: id => this.openEdit(id),\n      onChecked: ({\n        id\n      }) => {\n        this.setCheckedScans(id);\n      },\n      count: count,\n      checkboxStyles: styles.checkbox,\n      textNotData: this.state.textNotData,\n      reportDetails: true,\n      customClassName: \"fixed-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1318,\n        columnNumber: 21\n      }\n    })), __jsx(DialogModal, {\n      btnAcceptLabel: getI18nLabel(locale, 'captures.modal.delete.buttonAcceptLabel'),\n      isOpen: isOpen,\n      message: getI18nLabel(locale, 'captures.modal.delete.message'),\n      onClose: () => this.setState({\n        isOpen: false\n      }),\n      btnAcceptType: PrimaryButtonVariant.Error,\n      onAccept: () => this.deleteScan(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1337,\n        columnNumber: 17\n      }\n    }));\n  }\n}\nconst withRouter = props => {\n  const router = useRouter();\n  return __jsx(ScansPage, _extends({}, props, {\n    router: router,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1353,\n      columnNumber: 12\n    }\n  }));\n};\nexport default withRouter;","map":{"version":3,"names":["React","Component","Router","useRouter","format","Head","FontAwesomeIcon","faTrash","faPencilAlt","faTimes","Header","getDarkTheme","getHeader","getTheme","IsCustomTheme","getLocale","AdvanceSearch","TableComplex","api","Filter","Checkbox","DialogModal","PrimaryButtonVariant","getUnitsCatalog","getBrandsCatalog","getStoresCatalog","getLinesCatalog","getGroupsCatalog","getGeolocationCatalog","Select","PageTitle","Loader","textNotData","styles","baseURLGeoref","georefApiKey","Datepicker","getI18nLabel","translateTableComplexHeader","buildTheme","ScansPage","constructor","args","_defineProperty","currentPage","totalPage","total","count","scans","baseScans","isOpen","scanDeleteId","showLoader","header","title","name","type","isHidedable","actions","icon","color","action","scan","openModalDelete","openEdit","textSearch","from","to","withPhoto","isPromotion","status","filters","unitsCatalog","brandsCatalog","storesCatalog","linesCatalog","groupsCatalog","selectedCatalog","geolocationCatalog","optionsGeoCatalog","optionsCatalog","value","label","filterSelected","filterListSelected","selectedScansId","selectedGeolocated","filterDownloadGeo","checkedGeo","geolocationIdToggle","nameGeoLocation","props","nameLocation","cm","m","ml","lt","mg","g","kg","pieza","isCustom","hasDarkTheme","document","querySelector","classList","remove","add","theme","currentTheme","style","createElement","innerHTML","body","appendChild","getGeoCatalogs","currentPageSaved","localStorage","getItem","parseInt","state","setState","loadCatalogs","JSON","parse","getFilterGeolocated","loadData","clearStorageData","fetchers","catalogResponse","Promise","all","catalogs","fetch","resolve","formatedGeoCatalog","map","item","index","id","page","response","post","createData","headers","getCheckedScans","data","pagination","current_page","total_pages","e","Error","_objectSpread","length","forEach","element","scanChecked","find","checked","formatDate","is_promotion","brandList","filter","option","brand","b","groupList","group","lineList","line","storeList","chain","unitList","unit","makeFilter","delete","saveData","push","setItem","stringify","getDownloadData","items","responseType","download","optionSelected","indexSelectedItem","indexOf","selectedScan","splice","locale","photo_main","productPicture","photo_price","shelfPicture","barcode","product","productName","brandName","scanned_by","capturist","reviewed","validator","product_created_date","productCreation","storeName","branch","storeAddress","capture_date","captureDate","unit_price","unitPrice","grammage_quantity","productUnitQuantity","capture_price","price","productUnit","productType","groupName","lineName","highest_price","productMaxPrice","lower_price","productMinPrice","isValid","coments","comments","capturist_id","capturistId","region","product_price","productPrice","selectedGeolocatedId","selectedLocation","location","selectedGeolocatedData","point1","point2","point3","point4","url","baseURL","Authorization","params","then","transformedData","transformData","dataDownloadGeo","getFilterGeo","catch","target","resultado","date","console","log","options","year","month","day","formatData","register","obj","Date","toLocaleDateString","replace","RegExp","statusArray","parametrosArray","desde","hasta","newArray","el","toLowerCase","Number","isNaN","resp","every","match","slice","regex","test","filterOnGeolocation","stateIndex","prevState","i","removeItem","res","extension","window","URL","createObjectURL","Blob","link","href","setAttribute","click","parentNode","removeChild","getMonth","getDate","getFullYear","render","sort","a","__jsx","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","show","onDownload","downloadData","inputSearchValue","onChangeInputSearch","setAdvancedSearchText","onSearch","onClear","clearParams","setCheckedGeo","setGeolocationIdToggle","showGeoref","className","filterCon","showFilters","floatWindow","inputCon","selected","onSelect","fromDateHandler","placeholder","dateFormat","toDateHandler","checkboxesContainer","checkboxContainer","checkbox","onChange","changeStateFilter","defaultOption","getCorrectCatalog","getCorrectOption","tags","f","optionObj","o","key","tag","cursor","onClick","deleteDynamicFilter","tableComplexContainer","content","changePageNext","changePagePrev","onClickDetails","onChecked","setCheckedScans","checkboxStyles","reportDetails","customClassName","btnAcceptLabel","message","onClose","btnAcceptType","onAccept","deleteScan","withRouter","router","_extends"],"sources":["C:/Users/hgm/Desktop/Maquina3B/ManDoc/Proyectos/Php/DashBoard/SVN/Develop/pricecheck-dashboard/pages/home/scans/index.tsx"],"sourcesContent":["import React, { Component, SyntheticEvent } from 'react'\nimport Router, { useRouter } from 'next/router';\nimport { format } from 'date-fns';\nimport Head from 'next/head'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash, faPencilAlt, faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport { Header } from '../../../components/header'\nimport { getDarkTheme, getHeader, getTheme, IsCustomTheme, getLocale } from '../../../utils/session-management'\nimport AdvanceSearch from '../../../components/search/AdvanceSearch'\nimport { TableComplex } from '../../../components/table'\nimport api from '../../../utils/api'\nimport Filter from '../../../components/search/Filter'\nimport { Checkbox } from '../../../components/checkbox'\nimport { Input } from '../../../components/input'\nimport DialogModal from '../../../components/modal/DialogModal'\nimport { PrimaryButtonVariant } from '../../../components/buttons/PrimaryButton'\nimport {\n    getUnitsCatalog,\n    getBrandsCatalog,\n    getStoresCatalog,\n    getLinesCatalog,\n    getGroupsCatalog,\n    getGeolocationCatalog,\n} from '../../../utils/catalogs'\nimport { Select } from '../../../components/select'\nimport PageTitle from '../../../components/pageTitle/PageTitle'\nimport Loader from '../../../components/loader/Loader'\nimport { textNotData } from '../../../utils/texts'\n\nimport styles from './scans.module.scss';\n\nimport {baseURLGeoref, georefApiKey} from '../../../utils/baseUrl';\n\nimport Datepicker from '../../../components/datepicker/datepicker'\nimport { getI18nLabel, translateTableComplexHeader } from '../../../i18n';\n\n//ELIMINAR import ExportButton from '../../../components/exportButton/ExportButton';\nimport { buildTheme } from '../../../utils/theme';\n\ntype Props = {\n    geolocationId: string,\n    nameLocation: string,\n    router: any,\n}\n\ntype State = {\n    currentPage: number,\n    totalPage: number,\n    total: number,\n    count: number,\n    scans: Array<Object>,\n    baseScans:Array<Object>,\n    isOpen: boolean,\n    scanDeleteId: string,\n    header: Array<Object>,\n    actions: Array<Object>,\n    textSearch: string,\n    from: any,\n    to: any,\n    selectedCatalog: Array<Object>,\n    geolocationCatalog: Array<Object>,\n    optionsGeoCatalog: Array<Object>,\n    optionsCatalog: Array<Object>,\n    filterSelected: string,\n    filterListSelected: Array<Object>,\n    unitsCatalog: Array<Object>,\n    brandsCatalog: Array<Object>,\n    storesCatalog: Array<Object>,\n    linesCatalog: Array<Object>,\n    groupsCatalog: Array<Object>\n    type: string | null,\n    status: string | null,\n    isPromotion: boolean | null,\n    withPhoto: boolean | null,\n    selectedGeolocated: number,\n    selectedScansId: Array<number>,\n    showLoader: boolean,\n    textNotData: string,\n    filterDownloadGeo:Array<Object>,\n    checkedGeo:boolean,\n    geolocationIdToggle:string,\n    nameGeoLocation:String,\n}\n\nclass ScansPage extends Component<Props, State> {\n    state = {\n        currentPage: 1,\n        totalPage: 1,\n        total: 0,\n        count: 0,\n        scans: [],\n        baseScans:[],\n        isOpen: false,\n        scanDeleteId: '',\n        showLoader: false,\n        textNotData: '',\n        header: [\n            {\n                title: 'Seleccionar',\n                name: 'selected',\n                type: 'checkbox',\n                isHidedable: false,\n            },\n            {\n                title: 'Captura',\n                name: 'id',\n                type: 'id',\n                isHidedable: false,\n            },\n            {\n                title: 'Foto principal',\n                name: 'photo_main',\n                type: 'img',\n                isHidedable: true,\n            },\n            {\n                title: 'Foto precio',\n                name: 'photo_price',\n                type: 'img',\n                isHidedable: true,\n            },\n            {\n                title: 'Código de barras',\n                name: 'barcode',\n                type: 'text',\n                isHidedable: false,\n            },\n            {\n                title: 'Producto',\n                name: 'product',\n                type: 'text',\n                isHidedable: false,\n            },\n            {\n                title: 'Marca',\n                name: 'brand',\n                type: 'text',\n                isHidedable: false,\n            },\n            {\n                title: 'Tipo',\n                name: 'type',\n                type: 'text',\n                isHidedable: false,\n            },\n            {\n                title: 'Cadena comercial',\n                name: 'chain',\n                type: 'text',\n                isHidedable: false,\n            },\n            {\n                title: 'Sucursal',\n                name: 'branch',\n                type: 'text',\n                isHidedable: true,\n            },\n            {\n                title: 'Capturista',\n                name: 'scanned_by',\n                type: 'text',\n                isHidedable: false,\n            },\n            {\n                title: 'Validador',\n                name: 'reviewed',\n                type: 'text',\n                isHidedable: false,\n            },\n            {\n                title: 'Estado',\n                name: 'status',\n                type: 'text',\n                isHidedable: false,\n            },\n            {\n                title: 'Cantidad',\n                name: 'grammage_quantity',\n                type: 'number',\n                isHidedable: true,\n            },\n            {\n                title: 'Unidad',\n                name: 'unit',\n                type: 'text',\n                isHidedable: true,\n            },\n            {\n                title: 'Precio unitario',\n                name: 'unit_price',\n                type: 'money',\n                isHidedable: false,\n            },\n            {\n                title: 'Grupo',\n                name: 'group',\n                type: 'text',\n                isHidedable: false,\n            },\n            {\n                title: 'Linea',\n                name: 'line',\n                type: 'text',\n                isHidedable: false,\n            },\n            {\n                title: 'Fecha de alta de producto',\n                name: 'product_created_date',\n                type: 'date',\n                isHidedable: false,\n            },\n            {\n                title: 'Precio mínimo',\n                name: 'lower_price',\n                type: 'money',\n                isHidedable: false,\n            },\n            {\n                title: 'Precio máximo',\n                name: 'highest_price',\n                type: 'money',\n                isHidedable: false,\n            },\n            {\n                title: 'Fecha de captura',\n                name: 'capture_date',\n                type: 'date',\n                isHidedable: false,\n            },\n            {\n                title: 'Precio de captura',\n                name: 'capture_price',\n                type: 'money',\n                isHidedable: false,\n            },\n            {\n                title: 'Acciones',\n                name: '',\n                type: 'actions',\n                isHidedable: false,\n            },\n        ],\n        actions: [\n            {\n                icon: faTrash,\n                color: '#DE4747',\n                action: (scan: { scan: string }) => this.openModalDelete(scan.scan),\n            },\n            {\n                icon: faPencilAlt,\n                color: '#71A4E4',\n                action: (scan: { scan: string }) => this.openEdit(scan.scan),\n            },\n        ],\n        textSearch: '',\n        from: '',\n        to: '',\n        withPhoto: null,\n        isPromotion: null,\n        status: null,\n        type: null,\n        filters: null,\n        unitsCatalog: [],\n        brandsCatalog: [],\n        storesCatalog: [],\n        linesCatalog: [],\n        groupsCatalog: [],\n        selectedCatalog: [],\n        geolocationCatalog: [],\n        optionsGeoCatalog:[],\n        optionsCatalog: [\n            {\n                value: 'brandsCatalog',\n                label: 'Marca',\n            },\n            {\n                value: 'groupsCatalog',\n                label: 'Grupo',\n            },\n            {\n                value: 'linesCatalog',\n                label: 'Linea',\n            },\n            {\n                value: 'storesCatalog',\n                label: 'Cadena',\n            },\n            {\n                value: 'unitsCatalog',\n                label: 'Unidad',\n            },\n        ],\n        filterSelected: '0',\n        filterListSelected: [],\n        selectedScansId: [],\n        selectedGeolocated: -1,\n        filterDownloadGeo:[],\n        checkedGeo:false,\n        geolocationIdToggle:'0', //Lleva el id de la geolocalizacion seleccioanda\n        nameGeoLocation:this.props.nameLocation,\n    }\n\n    units = {\n        cm: 'Centimetro',\n        m: 'Metro',\n        ml: 'Mililitro',\n        lt: 'Litro',\n        mg: 'Miligramo',\n        g: 'Gramo',\n        kg: 'Kilogramo',\n        pieza: 'Pieza',\n    }\n\n    componentDidMount = async () => {\n        const isCustom = IsCustomTheme();\n        const hasDarkTheme = getDarkTheme() === '1' ? true : false;\n        if (hasDarkTheme) {\n            document.querySelector('body').classList.remove('custom')\n            document.querySelector('body').classList.add('darkmode')\n        }\n\n        if(isCustom) {\n            const theme = getTheme();\n            const currentTheme = buildTheme(theme);\n            const style = document.createElement('style');\n            style.innerHTML = currentTheme;\n            document.body.appendChild(style);\n            document.querySelector('body').classList.add('custom');\n        }\n\n        this.getGeoCatalogs();\n        let currentPageSaved = localStorage.getItem('scansPage') ? parseInt(localStorage.getItem('scansPage')) : this.state.currentPage\n\n        // Show loader first\n        this.setState({ showLoader: true })\n\n        // Asynchronously get all this data without blocking everything else\n\n        const {\n            geolocationCatalog,\n            unitsCatalog,\n            brandsCatalog,\n            storesCatalog,\n            linesCatalog,\n            groupsCatalog,\n        } = await this.loadCatalogs()\n\n\n        this.setState({\n            // optionsGeoCatalog:formatedGeoCatalog,\n            geolocationCatalog,\n            unitsCatalog,\n            brandsCatalog,\n            storesCatalog,\n            linesCatalog,\n            groupsCatalog,\n            from: localStorage.getItem('scansFrom') || '',\n            to: localStorage.getItem('scansTo') || '',\n            textSearch: localStorage.getItem('scansTextSearch') || '',\n            status: localStorage.getItem('scansStatus') || '',\n            type: localStorage.getItem('scansType') || '',\n            withPhoto: localStorage.getItem('scansWithPhoto') ?\n                localStorage.getItem('scansWithPhoto') === 'true' :\n                null,\n            isPromotion: localStorage.getItem('scansWithPhoto') ?\n                localStorage.getItem('scansIsPromotion') === 'true' :\n                null,\n            filterListSelected: localStorage.getItem('scansFilterListSelected') ?\n                JSON.parse(localStorage.getItem('scansFilterListSelected')) :\n                [],\n        }, () => {\n            this.state.geolocationIdToggle != '0' ? this.getFilterGeolocated() : this.loadData(currentPageSaved)\n            this.clearStorageData()\n        })\n    }\n\n    // Get all catalogs asynchronously and concurrently\n    loadCatalogs = async () => {\n        const fetchers = [\n            getGeolocationCatalog(),\n            getUnitsCatalog(),\n            getBrandsCatalog(),\n            getStoresCatalog(),\n            getLinesCatalog(),\n            getGroupsCatalog(),\n        ]\n\n        const catalogResponse = await Promise.all(fetchers)\n\n        const catalogs = {\n            geolocationCatalog: catalogResponse[0],\n            unitsCatalog: catalogResponse[1],\n            brandsCatalog: catalogResponse[2],\n            storesCatalog: catalogResponse[3],\n            linesCatalog: catalogResponse[4],\n            groupsCatalog: catalogResponse[5],\n        }\n\n        return catalogs\n    }\n    getGeoCatalogs = async () => {\n        const fetch = getGeolocationCatalog();\n        const catalogs  = await Promise.resolve(fetch);\n        const formatedGeoCatalog =  catalogs.map( (item: any, index:any) => {\n            return {value:item.id,label:item.name};\n        });\n\n        this.setState({\n            optionsGeoCatalog:formatedGeoCatalog,\n            geolocationCatalog:catalogs,\n        });\n    }\n\n    loadData = async (page: number = 1) => {\n        this.setState({ showLoader: true })\n\n        try {\n            const response = await api.post(\n                `api/reports/scans?page=${page}`,\n                this.createData(),\n                { headers: getHeader() },\n            )\n\n            if (response.status === 200) {\n\n                const scans = this.getCheckedScans(response.data.data)\n                const total = response.data.pagination.total\n                const count = response.data.pagination.count\n                const currentPage = response.data.pagination.current_page\n                const totalPage = response.data.pagination.total_pages\n\n                this.setState({\n                    scans,\n                    total,\n                    count,\n                    currentPage,\n                    totalPage,\n                    showLoader: false,\n                })\n            }\n        } catch (e) {\n            // TODO: Mostrar mensaje de error\n            throw new Error(e)\n        } finally {\n            this.setState({ showLoader: false })\n        }\n    }\n\n    getCheckedScans = (scans: any[]) => {\n        const scan = scans.map(scan => {\n            return {\n                ...scan, id: scan.scan\n            }\n        })\n\n        if (this.state.selectedScansId.length > 0) {\n            scan.forEach((element: any) => {\n                const scanChecked = this.state.selectedScansId.find(item => item === element.id)\n                element.checked = scanChecked ? true : false\n            })\n        }\n\n        return scan\n    }\n\n    createData = () => {\n        const data: {\n            textSearch?: string,\n            from?: any,\n            to?: any,\n            is_promotion?: string | null,\n            withPhoto?: string | null,\n            status?: string | null,\n            type?: string | null,\n            brand?: Array<string>,\n            group?: Array<string>,\n            line?: Array<string>,\n            chain?: Array<string>,\n            unit?: Array<string>,\n        } = {}\n\n        if (this.state.textSearch.length > 0) {\n            data.textSearch = this.state.textSearch\n        }\n\n        if (this.state.from) {\n            data.from = this.formatDate(this.state.from)\n        }\n\n        if (this.state.to) {\n            data.to = this.formatDate(this.state.to)\n        }\n\n        if (this.state.withPhoto !== null) {\n            data.withPhoto = this.state.withPhoto ? 'yes' : 'no'\n        }\n\n        if (this.state.isPromotion !== null) {\n            data.is_promotion = this.state.isPromotion ? 'yes' : 'no'\n        }\n\n        if (this.state.status) {\n            data.status = this.state.status\n        }\n\n        if (this.state.type) {\n            data.type = this.state.type\n        }\n\n        const brandList = this.state.filterListSelected.filter(\n            (e: any) => e.option === 'brandsCatalog'\n        )\n\n        if (brandList.length > 0) {\n            data.brand = brandList.map(b => b.value)\n        }\n\n        const groupList = this.state.filterListSelected.filter(\n            (e: any) => e.option === 'groupsCatalog'\n        )\n\n        if (groupList.length > 0) {\n            data.group = groupList.map(b => b.value)\n        }\n\n        const lineList = this.state.filterListSelected.filter(\n            (e: any) => e.option === 'linesCatalog'\n        )\n\n        if (lineList.length > 0) {\n            data.line = lineList.map(b => b.value)\n        }\n\n        const storeList = this.state.filterListSelected.filter(\n            (e: any) => e.option === 'storesCatalog'\n        )\n\n        if (storeList.length > 0) {\n            data.chain = storeList.map(b => b.value)\n        }\n\n        const unitList = this.state.filterListSelected.filter(\n            (e: any) => e.option === 'unitsCatalog'\n        )\n\n        if (unitList.length > 0) {\n            data.unit = unitList.map(b => b.value)\n        }\n\n        return data\n    }\n\n\n    clearParams = () => {\n        this.setState({\n            textSearch: '',\n            from: '',\n            to: '',\n            withPhoto: null,\n            isPromotion: null,\n            status: null,\n            type: null,\n            filterListSelected: [],\n            filterSelected: '0',\n        }, () => this.makeFilter() )\n    }\n\n    deleteScan = async () => {\n        try {\n            const response = await api.delete(\n                `api/scan/${this.state.scanDeleteId}`,\n                { headers: getHeader() }\n            )\n\n            if (response.status === 204) {\n                this.setState({\n                    isOpen: false,\n                    scanDeleteId: ''\n                })\n                this.loadData(1)\n            }\n        } catch (e) {\n            // TODO: Mandar mensaje de error\n            throw new Error(e)\n        }\n    }\n\n    openEdit = (id: string) => {\n        this.saveData()\n        Router.push(`/home/scans/${id}`)\n    }\n\n    saveData = () => {\n        const {\n            currentPage,\n            textSearch,\n            from,\n            to,\n            withPhoto,\n            isPromotion,\n            status,\n            type,\n            filterListSelected\n        } = this.state\n\n        localStorage.setItem('scansPage', `${currentPage}`)\n\n        if (textSearch && textSearch.length > 0) {\n            localStorage.setItem('scansTextSearch', textSearch)\n        }\n\n        if (from && from.length > 0) {\n            localStorage.setItem('scansFrom', from)\n        }\n\n        if (to && to.length > 0) {\n            localStorage.setItem('scansTo', to)\n        }\n\n        if (withPhoto !== null) {\n            localStorage.setItem('scansWithPhoto', withPhoto)\n        }\n\n        if (isPromotion !== null) {\n            localStorage.setItem('scansIsPromotion', isPromotion)\n        }\n\n        if (status && status.length > 0) {\n            localStorage.setItem('scansStatus', status)\n        }\n\n        if (type && type.length > 0) {\n            localStorage.setItem('scansType', type)\n        }\n\n        if (filterListSelected && filterListSelected.length > 0) {\n            localStorage.setItem('scansFilterListSelected', JSON.stringify(filterListSelected))\n        }\n    }\n\n    clearStorageData() {\n        const items = [\n            'scansPage',\n            'scansFrom',\n            'scansTo',\n            'scansWithPhoto',\n            'scansIsPromotion',\n            'scansStatus',\n            'scansType',\n            'scansFilterListSelected',\n        ]\n\n        items.forEach(i => localStorage.removeItem(i))\n    }\n\n    // Función para descargar información\n\n    download(res: any, type = 'text/csv;charset=utf-8;', extension = 'csv') {\n        console.log('aaa - res: ', res)\n        const url = window.URL.createObjectURL(\n            new Blob([\"\\ufeff\", res], {\n              type,\n            }),\n          );\n          const link = document.createElement('a');\n          link.href = url;\n          link.setAttribute('download', `scan-report-${format(new Date(), 'MM-dd-yyyy-HH:mm')}.${extension}`);\n          document.body.appendChild(link);\n          link.click();\n          link.parentNode.removeChild(link);\n    }\n\n    downloadData = async () => {\n        try {\n            const getDownloadData: { [key: string]: any } = this.createData()\n\n            if (this.state.selectedScansId.length > 0) {\n                getDownloadData.items = this.state.selectedScansId\n            }\n\n            const response = await api.post(\n                `api/reports/scans-csv`,\n                getDownloadData,\n                {\n                    headers: getHeader(),\n                    responseType: 'blob',\n                }\n            )\n\n            if (response.status === 200) {\n                this.download(response.data)\n            }\n        } catch (e) {\n            // TODO: Mostrar mensaje de error\n            throw new Error(e)\n        }\n    }\n\n    openModalDelete = (scan: string) => {\n        this.setState({\n            isOpen: true,\n            scanDeleteId: scan,\n        })\n    }\n\n    getCorrectCatalog = (optionSelected: string) => {\n        let selectedCatalog: Array<{ value: any, label: string }> = this.state[optionSelected]\n        const filterSelected = optionSelected\n\n        this.setState({\n            selectedCatalog,\n            filterSelected,\n        })\n    }\n\n    getCorrectOption = (value: string) => {\n        const filterListSelected: Array<{\n            option: string,\n            value: string,\n            label: string,\n        }> = this.state.filterListSelected\n\n        const optionSelected: any = this.state.selectedCatalog.filter(\n            // Cast e.value to string because of API shenanigans\n            (e: { value: string }) => `${e.value}` === value\n        )\n\n        if (optionSelected.length > 0) {\n            filterListSelected.push({\n                option: this.state.filterSelected,\n                value,\n                label: optionSelected[0].label,\n            })\n        }\n\n        this.setState({\n            filterListSelected,\n            filterSelected: '0',\n            selectedCatalog: [],\n        })\n    }\n\n    deleteDynamicFilter = (value: any) => {\n        const filterListSelected = this.state.filterListSelected.filter(\n            (e: { value: any }) => value != e.value\n        )\n\n        this.setState({ filterListSelected })\n    }\n\n    setCheckedScans = (id: any) => {\n        const selectedScansId: number[] = [...this.state.selectedScansId]\n\n        const indexSelectedItem = selectedScansId.indexOf(id)\n\n        const scans = [...this.state.scans]\n        const selectedScan: any = scans.find((scans: any) => scans.id === id)\n\n        if (indexSelectedItem > -1) {\n            selectedScansId.splice(indexSelectedItem, 1)\n            selectedScan.checked = false\n        }\n\n        else {\n            selectedScansId.push(id)\n            selectedScan.checked = true\n        }\n\n        this.setState({ selectedScansId, scans })\n    }\n// Filtra las columnas que se mostraran junto con la la creacion del state\n// Si se quieren agregar mas datos provenientes de la API agregar aqui\n    transformData = (data: any[]) => {\n        const locale = getLocale()\n\n        return data.map(item => {\n            return {\n                id: item.id,\n                photo_main: item.productPicture,\n                photo_price: item.shelfPicture,\n                barcode: item.barcode,\n                product: item.productName,\n                brand: item.brandName,\n                scanned_by: item.capturist,\n                reviewed:item.validator,\n                product_created_date: item.productCreation,\n                chain: item.storeName,\n                branch: item.storeAddress,\n                capture_date: item.captureDate,\n                unit_price: item.unitPrice,\n                grammage_quantity: item.productUnitQuantity,\n                capture_price: item.price,\n                unit: getI18nLabel(locale, `captures.units.${item.productUnit}`),\n                type: item.productType,\n                group: item.groupName,\n                line: item.lineName,\n                highest_price: item.productMaxPrice,\n                lower_price: item.productMinPrice,\n                status: item.isValid ? getI18nLabel(locale, `captures.status.validated`) : getI18nLabel(locale, `captures.status.pending`),\n                coments: item.comments,\n                capturist_id: item.capturistId,\n                region: item.region,\n                product_price: item.productPrice, //Precio de alta\n            }\n        })\n    }\n\n    // Obtiene los datos para las geolocalizaciones\n    getFilterGeolocated = () => {\n        let selectedGeolocatedId = ''\n        if(this.state.geolocationIdToggle !== '0' ){\n            selectedGeolocatedId = this.state.geolocationIdToggle;\n        } else {\n                selectedGeolocatedId = this.state.geolocationIdToggle !== '0'  ?\n                this.state.geolocationIdToggle :\n                this.state.geolocationCatalog[0].id\n        }\n\n        const selectedLocation = this.state.geolocationCatalog.filter(\n            location => location.id === parseInt(selectedGeolocatedId)\n        );\n        this.setState({nameGeoLocation:selectedLocation[0].name});\n        const selectedGeolocatedData = {\n            point1: selectedLocation[0].point1,\n            point2: selectedLocation[0].point2,\n            point3: selectedLocation[0].point3,\n            point4: selectedLocation[0].point4,\n        }\n        // Obtener datos de geolocalizacion de la API\n        api({\n            url: 'api/scans',\n            baseURL: baseURLGeoref,\n            headers: { Authorization: `Api-Key ${georefApiKey}` },\n            params: selectedGeolocatedData,\n        })\n            .then(response => {\n                const transformedData = this.transformData(response.data.data)\n                const dataDownloadGeo = this.getFilterGeo(transformedData);\n\n                this.setState({ showLoader: false })\n                this.setState({filterDownloadGeo:dataDownloadGeo});\n                this.setState({ scans: transformedData });\n                this.setState({baseScans:transformedData});\n                if (response.data.data.length === 0) {\n                    this.setState({ textNotData })\n                }else{\n                    this.setState({ textNotData:'' })\n                }\n            })\n            .catch((e) => {\n                throw new Error(e)\n            });\n\n            this.setState({\n                currentPage:1,\n                totalPage:1,\n            })\n    }\n\n    setAdvancedSearchText = (e: SyntheticEvent) => {\n        const { value } = e.target as HTMLInputElement\n\n        this.setState({ textSearch: value })\n\n\n    }\n    // Se ejecuta cuando el toggle es activado/desactivado\n    setCheckedGeo = (e: SyntheticEvent) => {\n        this.setState({ textSearch: '' });\n        this.setState({ showLoader: true })\n        const value = !!e;\n\n        this.setState({ checkedGeo: value }, () => {\n\n            if(value){ //Si se enciende busca los filtrados del primer registro\n                this.setState({\n                    nameGeoLocation: \"Georeportes\",\n                    scans: [],\n                    total: 0,\n                    count: 0,\n                    currentPage: 0,\n                    totalPage:0,\n                    showLoader: false,\n                })\n            }else{ //Si se apaga busca los generales\n                    this.loadData()\n            }\n        })\n    }\n    // Guarda el id del Geolocalización\n    // setGeolocationIdToggle = (e: SyntheticEvent) => {\n    setGeolocationIdToggle = (id: Number) => {\n        this.setState({ showLoader: true })\n        // const { value } = e.target as HTMLInputElement\n        this.setState({geolocationIdToggle:`${id}`}, () => {\n            const resultado = this.state.geolocationCatalog.find( element => element.value === id );\n            this.getFilterGeolocated()\n            this.setState({ textSearch: '' });\n        })\n    }\n\n    formatDate(date) {\n        if (date) {\n            date = new Date(date);\n\n            let month = '' + (date.getMonth() + 1);\n            let day = '' + date.getDate();\n            let year = date.getFullYear();\n\n            if (month.length < 2) {\n                month = '0' + month;\n            }\n\n            if (day.length < 2) {\n                day = '0' + day;\n            }\n\n            return `${year}-${month}-${day}`;\n        }\n\n        return ''\n    }\n\n    fromDateHandler = (date: any) => {\n        this.setState({\n            from: date,\n        })\n\n    }\n\n    toDateHandler = (date: any) => {\n        this.setState({\n            to: date,\n        });\n    }\n    getFilterGeo = (data:any) => {\n        console.log(\"map\",data);\n        const options:{} = { year: 'numeric', month: 'long', day: 'numeric' };\n        const formatData =  data.map((register:any, index:any) => {\n                let obj = {\n                    \"ID Captura\":register.id,\n                    // foto_principal:register.photo_main,\n                    \"Codigo de Barras\":register.barcode,\n                    \"Producto\":register.product,\n                    \"Marca\":register.brand,\n                    \"Tipo\":register.type,\n                    \"Cadena Comercial\":register.chain,\n                    \"Direccion\":register.branch,\n                    \"ID Capturista\": register.capturist_id,\n                    \"Capturista\":register.scanned_by,\n                    \"Region\": register.region,\n                    \"Validador\":register.reviewed,\n                    \"Estatus\":register.status,\n                    \"Comentarios\": register.comments,\n                    \"Cantidad\":register.grammage_quantity,\n                    \"Unidad\":register.unit,\n                    \"Precio Unitario\":register.unit_price,\n                    \"Grupo\":register.group,\n                    \"Linea\":register.line,\n                    \"Fecha de Alta\":new Date(register.product_created_date).toLocaleDateString('es',options).replace(RegExp(' de ', 'g'),'/'),\n                    \"Precio de Alta\": register.product_price,\n                    \"Precio Minimo\":register.lower_price,\n                    \"Precio Maximo\":register.highest_price,\n                    \"Fecha de Captura\":new Date(register.capture_date).toLocaleDateString('es',options).replace(RegExp(' de ', 'g'),'/'),\n                    \"Precio de Captura\":register.capture_price,\n                    \"Promocion\": \" - \",\n                };\n                return obj;\n        });\n        return formatData;\n    }\n    filterOnGeolocation = async ()=> {\n        const { textSearch,baseScans, from, to, withPhoto, isPromotion, status,type, selectedCatalog,filterSelected, filterListSelected} = this.state;\n\n\n        const statusArray = {'valid':'Validado','rejected':'Rechazado','pending':'Pendiente'};\n        const parametrosArray = {'brandsCatalog':'brand','groupsCatalog':'group','linesCatalog':'line','storesCatalog':'chain','unitsCatalog':'unit'};\n        const desde = Date.parse(from);\n        const hasta = Date.parse(to);\n            let newArray = baseScans.filter(function (el) {\n                return  textSearch !==\"\" ? el.product.toLowerCase().indexOf(textSearch.toLowerCase()) > -1  : true\n            });\n            if(!Number.isNaN(desde)){\n                newArray = newArray.filter(function (el) {\n                    return  Date.parse(el.capture_date) > desde\n                });\n            }\n            if(!Number.isNaN(hasta)){\n                newArray = newArray.filter(function (el) {\n                    return  Date.parse(el.capture_date) < hasta\n                });\n            }\n            if(isPromotion===true || isPromotion===false){\n                newArray = newArray.filter(function (el) {\n                    if(el.isPromotion){\n                    return  isPromotion===true ? el.isPromotion === 1  : el.isPromotion == 0\n                    }else\n                    {return true}\n                });\n            }\n            if(isPromotion===true || isPromotion===false){\n                newArray = newArray.filter(function (el) {\n                    if(el.isPromotion){\n                    return  isPromotion===true ? el.isPromotion === 1  : el.isPromotion == 0\n                    }else\n                    {return true}\n                });\n            }\n            if(status){\n                newArray = newArray.filter(function (el) {\n                    return  statusArray[status]===el.status\n                });\n            }\n            if(type){\n                newArray = newArray.filter(function (el) {\n                    return  el.type === type\n                });\n            }\n            if(filterListSelected.length>0){\n                newArray = newArray.filter(function (el) {\n                    let resp = filterListSelected.every((element, index) => {\n\n                        if(parametrosArray[element.option] === 'line' || parametrosArray[element.option] === 'group'){\n\n                            let match = element.label.slice(-4);\n                            const regex = new RegExp(match,'i');\n                            return  regex.test(el[parametrosArray[element.option]])\n                        }else{\n                            return el[parametrosArray[element.option]].toLowerCase() === element.label.toLowerCase();\n                        }\n\n                    })\n                    return  resp;\n                });\n            }\n            const dataDownloadGeo = this.getFilterGeo(newArray);\n            this.setState({filterDownloadGeo:dataDownloadGeo});\n            this.setState({\n                scans:newArray\n            })\n    }\n    makeFilter = () => {\n        this.state.checkedGeo ? this.filterOnGeolocation() : this.loadData();\n    }\n    changeStateFilter = (stateIndex :string) =>{\n\n            switch (stateIndex) {\n                case 'isPromotionFalse':\n                    this.setState(\n                        (prevState: { isPromotion: boolean | null }) => {\n                            return { isPromotion: prevState.isPromotion === false ? null : false }\n                        }\n                    )\n\n                    break;\n                case 'isPromotionTrue':\n                    this.setState(\n                        (prevState: { isPromotion: boolean | null }) => {\n                            return { isPromotion: prevState.isPromotion ? null : true }\n                        }\n                    )\n                    break;\n                case 'statusValid':\n                    this.setState((prevState: { status: string | null }) => { return { status: prevState.status === 'valid' ? null : 'valid' } })\n                    break;\n                case 'statusRejected':\n                    this.setState((prevState: { status: string | null }) => { return { status: prevState.status === 'rejected' ? null : 'rejected' }})\n                    break;\n                case 'statusPending':\n                    this.setState((prevState: { status: string | null }) => { return { status: prevState.status === 'pending' ? null : 'pending' } })\n                    break;\n                case 'typeMc':\n                    this.setState((prevState: { type: string | null }) => { return { type: prevState.type === 'MC' ? null : 'MC' } })\n                    break;\n                case 'typeMp':\n                    this.setState((prevState: { type: string | null }) => { return { type: prevState.type === 'MP' ? null : 'MP' } })\n                    break;\n                case 'withPhotoTrue':\n                    this.setState((prevState: { withPhoto: boolean | null }) => { return { withPhoto: prevState.withPhoto ? null : true } })\n                    break;\n                case 'withPhotoFalse':\n                    this.setState((prevState: { withPhoto: boolean | null }) => { return { withPhoto: prevState.withPhoto === false ? null : false } })\n                    break;\n                default:\n                    break\n            }\n    }\n    render() {\n        const {\n            currentPage,\n            total,\n            totalPage,\n            count,\n            scans,\n            actions,\n            textSearch,\n            withPhoto,\n            isPromotion,\n            status,\n            type,\n            from,\n            to,\n            selectedCatalog,\n            filterListSelected,\n            filterSelected,\n            isOpen,\n            showLoader,\n            filterDownloadGeo\n        } = this.state\n\n        selectedCatalog.sort((a, b) => a.label.toLowerCase() > b.label.toLowerCase() ? 1 : -1);\n\n        const locale = getLocale()\n\n        let optionsCatalog = this.state.optionsCatalog.map((option) => {\n            option.label = getI18nLabel(locale, `captures.optionsCatalog.${option.value}`)\n\n            return option\n        })\n\n        const header = translateTableComplexHeader(locale, this.state.header, 'captures.table.head')\n        return (\n            <>\n                <Head>\n                    <title>Scans</title>\n                </Head>\n\n                <Header />\n\n                <Loader show={showLoader} />\n\n                {\n\n                    <AdvanceSearch\n                        onDownload={() => this.downloadData()}\n                        inputSearchValue={textSearch}\n                        onChangeInputSearch={this.setAdvancedSearchText}\n                        onSearch={() => this.makeFilter()}\n                        onClear={() => this.clearParams()}\n                        checkedGeo={this.state.checkedGeo}\n                        setCheckedGeo = {this.setCheckedGeo}\n                        geolocationIdToggle = {this.state.geolocationIdToggle}\n                        setGeolocationIdToggle = {this.setGeolocationIdToggle}\n                        optionsGeoCatalog = {this.state.optionsGeoCatalog}\n                        filterDownloadGeo = {this.state.filterDownloadGeo}\n                        getGeoCatalogs = {this.getGeoCatalogs}\n                        showGeoref={true}\n                        locale={locale}\n                    >\n                        <div className={styles.filterCon}>\n                            <Filter\n                                label=\"\"\n                                showFilters={true}\n                                floatWindow={false}\n                            >\n                                <div className={`${styles.filter} row`}>\n                                    <div className={`${styles.inputCon} col-2 m-0 p-2`}>\n                                        <Datepicker\n                                            label={getI18nLabel(locale, 'captures.filters.startDate')}\n                                            selected={from}\n                                            onSelect={this.fromDateHandler}\n                                            placeholder='dd/mm/yyyy'\n                                            dateFormat='dd/MM/yyyy'\n                                        />\n\n                                        <Datepicker\n                                            label={getI18nLabel(locale, 'captures.filters.endDate')}\n                                            selected={to}\n                                            onSelect={this.toDateHandler}\n                                            placeholder='dd/mm/yyyy'\n                                            dateFormat='dd/MM/yyyy'\n                                        />\n                                    </div>\n\n                                    <div className={`${styles.checkboxesContainer} col-8 m-0 p-2`}>\n                                        <div className=\"row justify-content-start\">\n                                            <div className={`${styles.checkboxContainer} col-3 m-0 p-2`}>\n                                                <Checkbox\n                                                    className={styles.checkbox}\n                                                    label={getI18nLabel(locale, 'captures.filters.withImage')}\n                                                    checked={withPhoto === true}\n                                                    onChange={() => this.changeStateFilter('withPhotoTrue')}\n                                                />\n                                            </div>\n\n                                            <div className={`${styles.checkboxContainer} col-3 m-0 p-2`}>\n                                                <Checkbox\n                                                    className={styles.checkbox}\n                                                    label={getI18nLabel(locale, 'captures.filters.withoutImage')}\n                                                    checked={withPhoto === false}\n                                                    onChange={() => this.changeStateFilter('withPhotoFalse')}\n                                                />\n                                            </div>\n\n                                            <div className={`${styles.checkboxContainer} col-3 m-0 p-2`}>\n                                                <Checkbox\n                                                    className={styles.checkbox}\n                                                    label={getI18nLabel(locale, 'captures.filters.normalPrice')}\n                                                    checked={isPromotion === false}\n                                                    onChange={() => this.changeStateFilter('isPromotionFalse')}\n                                                />\n                                            </div>\n\n                                            <div className={`${styles.checkboxContainer} col-3 m-0 p-2`}>\n                                                <Checkbox\n                                                    className={styles.checkbox}\n                                                    label={getI18nLabel(locale, 'captures.filters.priceWithPromotion')}\n                                                    checked={isPromotion === true}\n                                                    onChange={() => this.changeStateFilter('isPromotionTrue')}\n                                                />\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row justify-content-start pb-4\">\n                                            <div className={`${styles.checkboxContainer} col-3 m-0 p-2`}>\n                                                <Checkbox\n                                                    className={styles.checkbox}\n                                                    label={getI18nLabel(locale, 'captures.filters.statusValidated')}\n                                                    checked={status === 'valid'}\n                                                    onChange={ () => this.changeStateFilter('statusValid')}\n                                                />\n                                            </div>\n\n                                            <div className={`${styles.checkboxContainer} col-3 m-0 p-2`}>\n                                                <Checkbox\n                                                    className={styles.checkbox}\n                                                    label={getI18nLabel(locale, 'captures.filters.statusRejected')}\n                                                    checked={status === 'rejected'}\n                                                    onChange={ () => this.changeStateFilter('statusRejected')}\n                                                />\n                                            </div>\n\n                                            <div className={`${styles.checkboxContainer} col-3 m-0 p-2`}>\n                                                <Checkbox\n                                                    className={styles.checkbox}\n                                                    label={getI18nLabel(locale, 'captures.filters.statusPending')}\n                                                    checked={status === 'pending'}\n                                                    onChange={ () => this.changeStateFilter('statusPending')}\n                                                />\n                                            </div>\n                                        </div>\n                                        <div className=\"row justify-content-start\">\n                                            <div className={`${styles.checkboxContainer} col-3 m-0 p-2`}>\n                                                <Checkbox\n                                                    className={styles.checkbox}\n                                                    label=\"MC\" checked={type === 'MC'}\n                                                    onChange={ () => this.changeStateFilter('typeMc')}\n                                                />\n                                            </div>\n\n                                            <div className={`${styles.checkboxContainer} col-3 m-0 p-2`}>\n                                                <Checkbox\n                                                    className={styles.checkbox}\n                                                    label=\"MP\"\n                                                    checked={type === 'MP'}\n                                                    onChange={ () => this.changeStateFilter('typeMp')}\n                                                />\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className={`${styles.inputCon} col-2 m-0 p-2`}>\n                                        <Select\n                                            defaultOption={filterSelected}\n                                            label={getI18nLabel(locale, 'captures.filters.param')}\n                                            onChange={(e: any) => this.getCorrectCatalog(e.target.value)}\n                                            options={optionsCatalog}\n                                        />\n                                        <br />\n\n                                        <Select\n                                            defaultOption='0'\n                                            label={getI18nLabel(locale, 'captures.filters.value')}\n                                            onChange={(e: any) => this.getCorrectOption(e.target.value)}\n                                            options={selectedCatalog}\n                                        />\n\n                                        <br />\n\n                                        <div className={styles.tags}>\n                                            {filterListSelected.map((\n                                                f: { option: string, value: string, label: string }\n                                            ) => {\n                                                const optionObj = optionsCatalog.filter((o) => o.value === f.option)\n\n                                                return (\n                                                    <div key={f.value} className={styles.tag}>\n                                                        <span>\n                                                            {optionObj[0].label} - {f.label}\n                                                        </span>\n\n                                                        <FontAwesomeIcon\n                                                            style={{ cursor: 'pointer' }}\n                                                            onClick={() => this.deleteDynamicFilter(f.value)}\n                                                            icon={faTimes}\n                                                        />\n                                                    </div>\n                                                )\n                                            })}\n                                        </div>\n                                    </div>\n                                </div>\n                            </Filter>\n                        </div>\n                    </AdvanceSearch>\n                }\n\n                <div className={styles.tableComplexContainer}>\n                    <PageTitle\n                        title={this.state.checkedGeo ?\n                            `${this.state.nameGeoLocation}` :\n                            getI18nLabel(locale, 'captures.title')\n                        }\n                    />\n                    <br />\n\n                    <TableComplex\n                        actions={actions}\n                        content={scans}\n                        header={header}\n                        changePageNext={() => this.loadData(currentPage + 1)}\n                        changePagePrev={() => this.loadData(currentPage - 1)}\n                        total={total}\n                        currentPage={currentPage}\n                        totalPage={totalPage}\n                        onClickDetails={(id: string) => this.openEdit(id)}\n                        onChecked={({ id }) => { this.setCheckedScans(id) }}\n                        count={count}\n                        checkboxStyles={styles.checkbox}\n                        textNotData={this.state.textNotData}\n                        reportDetails={true}\n                        customClassName='fixed-header'\n                    />\n                </div>\n\n                <DialogModal\n                    btnAcceptLabel={getI18nLabel(locale, 'captures.modal.delete.buttonAcceptLabel')}\n                    isOpen={isOpen}\n                    message={getI18nLabel(locale, 'captures.modal.delete.message')}\n                    onClose={() => this.setState({ isOpen: false })}\n                    btnAcceptType={PrimaryButtonVariant.Error}\n                    onAccept={() => this.deleteScan()}\n                />\n            </>\n        )\n    }\n}\n\nconst withRouter = (props) => {\n    const router = useRouter();\n\n    return <ScansPage {...props} router={router}/>\n}\n\nexport default withRouter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}