{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hgm\\\\Desktop\\\\Maquina3B\\\\ManDoc\\\\Proyectos\\\\Php\\\\DashBoard\\\\SVN\\\\Develop\\\\pricecheck-dashboard\\\\components\\\\reportGraphCompare\\\\index.tsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport React, { Component } from 'react';\nimport Router from 'next/router';\nimport { Line } from 'react-chartjs-2';\nimport { Input } from '../input';\nimport api from '../../utils/api';\nimport { getHeader } from '../../utils/session-management';\nimport s from './productCompareDetails.module.scss';\nimport Datepicker from '../datepicker/datepicker';\nimport { TableComplex } from '../table';\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\nimport styles from '../../pages/home/products/products.module.scss';\nimport DialogModal from '../../components/modal/DialogModal';\nimport { PrimaryButtonVariant } from '../../components/buttons/PrimaryButton';\nimport { format } from 'date-fns';\nimport { getLocale } from '../../utils/session-management';\nimport { getI18nLabel } from '../../i18n';\nexport default class GraphReportTabCompare extends Component {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"state\", {\n      inputVal: \"\",\n      labels: [],\n      datasets: [],\n      minDate: '',\n      maxDate: '',\n      currentPage: 1,\n      totalPage: 1,\n      total: 0,\n      count: 0,\n      selectedScan: null,\n      isOpen: false,\n      scanDeleteId: '',\n      actions: [{\n        icon: faTrash,\n        color: '#DE4747',\n        action: scan => this.openModalDelete(scan.id)\n      }, {\n        icon: faPencilAlt,\n        color: '#71A4E4',\n        action: scan => this.openEdit(scan.id)\n      }],\n      header: [{\n        title: 'ID',\n        name: 'id',\n        type: 'id',\n        isHidedable: false\n      }, {\n        title: 'Foto principal',\n        name: 'product_picture',\n        type: 'img',\n        isHidedable: true\n      }, {\n        title: 'Foto del precio',\n        name: 'shelf_picture',\n        type: 'img',\n        isHidedable: true\n      }, {\n        title: 'CÃ³digo de barras',\n        name: 'barcode',\n        type: 'number',\n        isHidedable: false\n      }, {\n        title: 'Precio',\n        name: 'price',\n        type: 'string',\n        isHidedable: false\n      }, {\n        title: 'Fecha de captura',\n        name: 'capture_date',\n        type: 'string',\n        isHidedable: false\n      }, {\n        title: 'Acciones',\n        name: '',\n        type: 'actions',\n        isHidedable: false\n      }]\n    });\n    _defineProperty(this, \"colors\", ['#1B998B', '#A7A7A9', '#2D3047', '#E84855', '#BDBF09', '#D96C06', '#b26c90', '#88665D', '#C2B97F', '#80ED99', '#322A26', '#3185FC', '#EFBCD5', '#931621', '#44344F', '#FF6F59', '#95B8D1', '#EB4B98', '#02394A', '#ea00c8', '#f1f96d']);\n    _defineProperty(this, \"tooltipOptions\", {\n      tooltips: {\n        callbacks: {\n          title: (tooltip, data) => {\n            const dataset = this.state.datasets[tooltip[0].datasetIndex];\n            return dataset.data[0].x;\n          },\n          label: (tooltip, data) => {\n            const dataset = this.state.datasets[tooltip.datasetIndex];\n            let label = dataset.label || '';\n            if (label) {\n              label += `: $`;\n            }\n            label += tooltip.yLabel;\n            return label;\n          },\n          footer: params => params.map(param => {\n            const dataset = this.state.datasets[param.datasetIndex];\n            const scanId = dataset.data[param.index].scanId;\n            return `Id de captura: ${scanId}`;\n          })\n        },\n        responsive: false,\n        bodyFontSize: 10,\n        titleFontSize: 8,\n        footerFontSize: 8,\n        \"enabled\": true,\n        displayColors: true,\n        caretSize: 0,\n        bodySpacing: 0,\n        titleSpacing: 0,\n        xPadding: 2,\n        yPadding: 2,\n        cornerRadius: 2,\n        titleMarginBottom: 2\n      },\n      legend: {\n        position: 'bottom',\n        labels: {\n          fontSize: 10\n        }\n      }\n    });\n    _defineProperty(this, \"loadData\", async () => {\n      try {\n        var _barcodes$join;\n        const {\n          priceField,\n          barcodes\n        } = this.props;\n        const data = barcodes === null || barcodes === void 0 ? void 0 : (_barcodes$join = barcodes.join(\",\")) === null || _barcodes$join === void 0 ? void 0 : _barcodes$join.toString();\n        const requestOptions = {\n          headers: getHeader(),\n          params: {\n            enddate: this.formatDate(this.state.maxDate) || null,\n            startdate: this.formatDate(this.state.minDate) || null,\n            barcodes: data.toString()\n          }\n        };\n        const response = await api.get('api/product/show', requestOptions);\n        if (response.status === 200) {\n          const {\n            products\n          } = response.data;\n          const datasets = [];\n          let scans = [];\n          let labels = [];\n          for (let i = 0; i < products.length; i++) {\n            const product = products[i];\n            scans[i] = [];\n            for (let j = 0; j < product.stores.length; j++) {\n              const store = product.stores[j];\n              const label = `${store.name} - ${product.name}`;\n              for (let k = 0; k < store.prices.length; k++) {\n                const price = store.prices[k];\n                const scan = {\n                  label,\n                  scanId: price.scan_id,\n                  captureDate: format(new Date(price.capture_date), \"dd-MM-yyyy\").split(\" \")[0],\n                  price: price[priceField]\n                };\n                labels.push(format(new Date(price.capture_date), \"dd-MM-yyyy\").split(\" \")[0]);\n                scans[i].push(scan);\n              }\n            }\n          }\n          scans = scans.filter(scan => scan.length);\n          labels = this.getLabels(labels);\n          let datasetBatch = []; // collection of different labels\n          let datasetCollection = []; // collection of dataset\n          for (let i = 0; i < scans.length; i++) {\n            const prices = new Array(labels.length).fill(null);\n            for (let j = 0; j < scans[i].length; j++) {\n              const scan = scans[i][j];\n              const slot = labels.findIndex(label => label === scan.captureDate);\n\n              // create object with data\n              const data = {};\n              data.price = scan.price;\n              data.y = scan.price;\n              data.scanId = scan.scanId;\n              data.capture_day = scan.captureDate;\n              data.x = scan.captureDate;\n              const label = scan.label;\n              if (!datasetBatch.includes(label)) {\n                datasetBatch.push(scan.label);\n                const obj = {\n                  label: scan.label\n                };\n                datasetCollection.push({\n                  label: scan.label,\n                  data: [data]\n                });\n              } else {\n                const idx = datasetCollection.findIndex(x => x.label === label);\n                datasetCollection[idx].data.push(data);\n              }\n            }\n            ;\n          }\n          const dataset = datasetCollection.map(item => this.parseDataset(item));\n          this.setState({\n            labels,\n            datasets: dataset\n          });\n        }\n      } catch (error) {\n        // TODO: Mensaje de error\n        console.log(error);\n      }\n    });\n    _defineProperty(this, \"openModalDelete\", id => {\n      this.setState({\n        isOpen: true,\n        scanDeleteId: id\n      });\n    });\n    _defineProperty(this, \"openEdit\", id => {\n      Router.push(`/home/scans/${id}?barcodes=${Router && Router.query.barcodes}`);\n    });\n    _defineProperty(this, \"getChart\", () => {\n      return __jsx(\"div\", {\n        className: s.graphContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 7\n        }\n      }, __jsx(Line, {\n        data: this.state,\n        options: this.tooltipOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 9\n        }\n      }));\n    });\n    _defineProperty(this, \"minDateHandler\", date => {\n      const {\n        minDate,\n        maxDate\n      } = this.state;\n      this.setState({\n        minDate: date\n      }, () => {\n        if (maxDate) {\n          this.loadData();\n        }\n      });\n    });\n    _defineProperty(this, \"maxDateHandler\", date => {\n      const {\n        minDate,\n        maxDate\n      } = this.state;\n      this.setState({\n        maxDate: date\n      }, () => {\n        if (minDate) {\n          this.loadData();\n        }\n      });\n    });\n    _defineProperty(this, \"deleteScan\", async () => {\n      try {\n        const response = await api.delete(`api/scan/${this.state.scanDeleteId}`, {\n          headers: getHeader()\n        });\n        if (response.status === 204) {\n          this.setState({\n            isOpen: false,\n            scanDeleteId: ''\n          });\n          this.loadData();\n        }\n      } catch (e) {\n        // TODO: Mandar mensaje de error\n        throw new Error(e);\n      }\n    });\n    _defineProperty(this, \"handleOnChangeSearch\", async event => {\n      try {\n        const {\n          datasets\n        } = this.state;\n        const {\n          target\n        } = event;\n        const requestOptions = {\n          headers: getHeader()\n        };\n        this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n          inputVal: target.value\n        }));\n        for (let i = 0; i < datasets.length; i++) {\n          const {\n            data\n          } = datasets[i];\n          const scan = data.find(scan => scan.scanId == target.value);\n          if (scan && scan.scanId) {\n            const endpoint = `api/scan/${scan.scanId}/show`;\n            const {\n              data: {\n                scan: response\n              }\n            } = await api.get(endpoint, requestOptions);\n            const {\n              id,\n              barcode,\n              pictures,\n              store,\n              price,\n              status,\n              capture_date\n            } = response;\n            const {\n              product_picture,\n              shelf_picture\n            } = pictures && pictures.length && pictures[0];\n            const storeName = store && (store.name || '');\n            const selectedScan = {\n              id,\n              barcode,\n              product_picture,\n              shelf_picture,\n              storeName,\n              price,\n              status,\n              capture_date\n            };\n            this.setState({\n              selectedScan\n            });\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    });\n  }\n  async componentDidMount() {\n    try {\n      await this.loadData();\n    } catch (error) {\n      // TODO: Mensaje de error\n      console.log(error);\n    }\n  }\n  async componentDidUpdate(prevProps) {\n    if (document) {\n      const table = document.querySelector('.product-details-table');\n      if (table) {\n        table.scrollIntoView(true);\n      }\n    }\n  }\n  getLabels(labels) {\n    labels = Array.from(new Set(labels));\n    labels = labels.sort(function (a, b) {\n      a = a.split('-');\n      b = b.split('-');\n      return a[2] - b[2] || a[1] - b[1] || a[0] - b[0];\n    });\n    labels = Array.from(new Set(labels));\n    return labels;\n  }\n  parseDataset(dataset) {\n    const randomNumber = max => max ? Math.floor(Math.random() * max) : 0;\n    const randomColor = this.colors[randomNumber(this.colors.length)];\n    return {\n      borderCapStyle: 'butt',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: randomColor,\n      borderColor: randomColor,\n      pointBorderColor: randomColor,\n      data: dataset.data,\n      label: dataset.label,\n      showLine: false\n    };\n  }\n  formatDate(date) {\n    if (date) {\n      date = new Date(date);\n      let month = '' + (date.getMonth() + 1);\n      let day = '' + date.getDate();\n      let year = date.getFullYear();\n      if (month.length < 2) {\n        month = '0' + month;\n      }\n      if (day.length < 2) {\n        day = '0' + day;\n      }\n      return `${year}-${month}-${day}`;\n    }\n    return '';\n  }\n  onlyNumberKey(event) {\n    const code = event.which ? event.which : event.keyCode;\n    const isAlpha = code > 31 && (code < 48 || code > 57);\n    if (isAlpha) {\n      event.preventDefault();\n    }\n  }\n  render() {\n    const {\n      minDate,\n      maxDate,\n      selectedScan,\n      actions,\n      header,\n      currentPage,\n      count,\n      total,\n      totalPage,\n      isOpen,\n      inputVal\n    } = this.state;\n    const locale = getLocale();\n    return __jsx(\"div\", {\n      className: s.graphPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: s.inputsContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 11\n      }\n    }, __jsx(Datepicker, {\n      label: getI18nLabel(locale, 'graphTabCompare.startDate'),\n      selected: minDate,\n      onSelect: this.minDateHandler,\n      placeholder: \"dd/mm/yyyy\",\n      dateFormat: \"dd/MM/yyyy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 11\n      }\n    }, __jsx(Datepicker, {\n      label: getI18nLabel(locale, 'graphTabCompare.endDate'),\n      selected: maxDate,\n      onSelect: this.maxDateHandler,\n      placeholder: \"dd/mm/yyyy\",\n      dateFormat: \"dd/MM/yyyy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      className: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 11\n      }\n    }, __jsx(Input, {\n      type: \"text\",\n      defaultValue: inputVal,\n      placeholder: getI18nLabel(locale, 'graphTabCompare.search'),\n      inputPlaceholder: \"ej: 8093\",\n      onChange: event => this.handleOnChangeSearch(event),\n      onKeyPress: event => this.onlyNumberKey(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 13\n      }\n    }))), this.getChart(), selectedScan && __jsx(TableComplex, {\n      actions: actions,\n      content: [selectedScan],\n      header: header,\n      changePageNext: () => false,\n      changePagePrev: () => false,\n      total: total,\n      currentPage: currentPage,\n      totalPage: totalPage,\n      onClickDetails: id => this.openEdit(id),\n      count: count,\n      checkboxStyles: styles.checkbox,\n      textNotData: \"\",\n      customClassName: \"fixed-header product-details-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 11\n      }\n    }), __jsx(DialogModal, {\n      btnAcceptLabel: getI18nLabel(locale, 'graphTabCompare.modal.delete.buttonAcceptLabel'),\n      isOpen: isOpen,\n      message: getI18nLabel(locale, 'graphTabCompare.modal.delete.message'),\n      onClose: () => this.setState({\n        isOpen: false\n      }),\n      btnAcceptType: PrimaryButtonVariant.Error,\n      onAccept: () => this.deleteScan(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n_defineProperty(GraphReportTabCompare, \"defaultProps\", {\n  priceField: 'price',\n  barcodes: []\n});","map":{"version":3,"names":["React","Component","Router","Line","Input","api","getHeader","s","Datepicker","TableComplex","faTrash","faPencilAlt","styles","DialogModal","PrimaryButtonVariant","format","getLocale","getI18nLabel","GraphReportTabCompare","constructor","args","_defineProperty","inputVal","labels","datasets","minDate","maxDate","currentPage","totalPage","total","count","selectedScan","isOpen","scanDeleteId","actions","icon","color","action","scan","openModalDelete","id","openEdit","header","title","name","type","isHidedable","tooltips","callbacks","tooltip","data","dataset","state","datasetIndex","x","label","yLabel","footer","params","map","param","scanId","index","responsive","bodyFontSize","titleFontSize","footerFontSize","displayColors","caretSize","bodySpacing","titleSpacing","xPadding","yPadding","cornerRadius","titleMarginBottom","legend","position","fontSize","_barcodes$join","priceField","barcodes","props","join","toString","requestOptions","headers","enddate","formatDate","startdate","response","get","status","products","scans","i","length","product","j","stores","store","k","prices","price","scan_id","captureDate","Date","capture_date","split","push","filter","getLabels","datasetBatch","datasetCollection","Array","fill","slot","findIndex","y","capture_day","includes","obj","idx","item","parseDataset","setState","error","console","log","query","__jsx","className","graphContainer","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","options","tooltipOptions","date","loadData","delete","e","Error","event","target","_objectSpread","value","find","endpoint","barcode","pictures","product_picture","shelf_picture","storeName","componentDidMount","componentDidUpdate","prevProps","document","table","querySelector","scrollIntoView","from","Set","sort","a","b","randomNumber","max","Math","floor","random","randomColor","colors","borderCapStyle","lineTension","backgroundColor","borderColor","pointBorderColor","showLine","month","getMonth","day","getDate","year","getFullYear","onlyNumberKey","code","which","keyCode","isAlpha","preventDefault","render","locale","graphPage","inputsContainer","selected","onSelect","minDateHandler","placeholder","dateFormat","maxDateHandler","defaultValue","inputPlaceholder","onChange","handleOnChangeSearch","onKeyPress","getChart","content","changePageNext","changePagePrev","onClickDetails","checkboxStyles","checkbox","textNotData","customClassName","btnAcceptLabel","message","onClose","btnAcceptType","onAccept","deleteScan"],"sources":["C:/Users/hgm/Desktop/Maquina3B/ManDoc/Proyectos/Php/DashBoard/SVN/Develop/pricecheck-dashboard/components/reportGraphCompare/index.tsx"],"sourcesContent":["import React, { Component } from 'react';\nimport Router from 'next/router'\nimport { Line } from 'react-chartjs-2'\n\nimport { Input } from '../input';\n\nimport api from '../../utils/api';\nimport { getHeader } from '../../utils/session-management';\n\nimport s from './productCompareDetails.module.scss'\n\nimport Datepicker from '../datepicker/datepicker'\n\nimport { TableComplex } from '../table'\nimport { faTrash, faPencilAlt, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport styles from '../../pages/home/products/products.module.scss'\nimport DialogModal from '../../components/modal/DialogModal'\nimport { PrimaryButtonVariant } from '../../components/buttons/PrimaryButton'\nimport { format } from 'date-fns';\nimport { getLocale } from '../../utils/session-management'\nimport { getI18nLabel } from '../../i18n';\n\n\ntype PriceCaptureDate = {\n  capture_date: string\n}\n\ntype Store = {\n  name: string\n  prices: PriceCaptureDate[]\n}\n\ntype Product = {\n  name: string\n  stores: Store[]\n}\n\ntype Price = {\n  capture_date: string\n  price: string\n  scan_id: number\n}\n\ntype Props = {\n  priceField: string,\n  barcodes: any,\n}\n\nexport default class GraphReportTabCompare extends Component<Props> {\n  static defaultProps = {\n    priceField: 'price',\n    barcodes: [],\n  }\n\n  state = {\n    inputVal: \"\",\n    labels: [],\n    datasets: [],\n    minDate: '',\n    maxDate: '',\n    currentPage: 1,\n    totalPage: 1,\n    total: 0,\n    count: 0,\n    selectedScan: null,\n    isOpen: false,\n    scanDeleteId: '',\n    actions: [\n      {\n        icon: faTrash,\n        color: '#DE4747',\n        action: scan => this.openModalDelete(scan.id),\n      },\n      {\n        icon: faPencilAlt,\n        color: '#71A4E4',\n        action: scan => this.openEdit(scan.id),\n      },\n    ],\n    header: [\n      {\n        title: 'ID',\n        name: 'id',\n        type: 'id',\n        isHidedable: false,\n      },\n      {\n        title: 'Foto principal',\n        name: 'product_picture',\n        type: 'img',\n        isHidedable: true,\n      },\n      {\n        title: 'Foto del precio',\n        name: 'shelf_picture',\n        type: 'img',\n        isHidedable: true,\n      },\n      {\n        title: 'CÃ³digo de barras',\n        name: 'barcode',\n        type: 'number',\n        isHidedable: false,\n      },\n      {\n        title: 'Precio',\n        name: 'price',\n        type: 'string',\n        isHidedable: false,\n      },\n      {\n        title: 'Fecha de captura',\n        name: 'capture_date',\n        type: 'string',\n        isHidedable: false,\n      },\n      {\n        title: 'Acciones',\n        name: '',\n        type: 'actions',\n        isHidedable: false,\n      },\n    ]\n  }\n\n  colors = [\n    '#1B998B',\n    '#A7A7A9',\n    '#2D3047',\n    '#E84855',\n    '#BDBF09',\n    '#D96C06',\n    '#b26c90',\n    '#88665D',\n    '#C2B97F',\n    '#80ED99',\n    '#322A26',\n    '#3185FC',\n    '#EFBCD5',\n    '#931621',\n    '#44344F',\n    '#FF6F59',\n    '#95B8D1',\n    '#EB4B98',\n    '#02394A',\n    '#ea00c8',\n    '#f1f96d',\n  ]\n\n  tooltipOptions = {\n    tooltips: {\n      callbacks: {\n        title: (tooltip, data) => {\n          const dataset = this.state.datasets[tooltip[0].datasetIndex];\n          return dataset.data[0].x;\n\n        },\n        label: (tooltip, data) => {\n          const dataset = this.state.datasets[tooltip.datasetIndex];\n          let label = dataset.label || '';\n\n          if (label) {\n            label += `: $`;\n          }\n\n          label += tooltip.yLabel;\n          return label;\n        },\n        footer: (params) => params.map((param) => {\n          const dataset = this.state.datasets[param.datasetIndex];\n          const scanId = dataset.data[param.index].scanId\n\n          return `Id de captura: ${scanId}`;\n        }),\n      },\n      responsive: false,\n      bodyFontSize: 10,\n      titleFontSize: 8,\n      footerFontSize: 8,\n      \"enabled\": true,\n      displayColors: true,\n      caretSize: 0,\n      bodySpacing: 0,\n      titleSpacing: 0,\n      xPadding: 2,\n      yPadding: 2,\n      cornerRadius: 2,\n      titleMarginBottom: 2,\n    },\n    legend: {\n      position: 'bottom',\n      labels: {\n        fontSize: 10,\n      }\n    },\n  };\n\n  async componentDidMount() {\n    try {\n      await this.loadData()\n    } catch (error) {\n      // TODO: Mensaje de error\n      console.log(error);\n    }\n  }\n  async componentDidUpdate(prevProps) {\n    if (document) {\n      const table = document.querySelector('.product-details-table')\n\n      if (table) {\n        table.scrollIntoView(true)\n      }\n    }\n  }\n\n  getLabels(labels) {\n\n    labels = Array.from(new Set(labels))\n    labels = labels.sort(function (a, b) {\n      a = a.split('-');\n      b = b.split('-');\n      return a[2] - b[2] || a[1] - b[1] || a[0] - b[0];\n    })\n    labels = Array.from(new Set(labels))\n\n    return labels;\n  }\n\n  parseDataset(dataset) {\n    const randomNumber = (max) => max ? Math.floor(Math.random() * max) : 0;\n    const randomColor = this.colors[randomNumber(this.colors.length)]\n\n    return {\n      borderCapStyle: 'butt',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: randomColor,\n      borderColor: randomColor,\n      pointBorderColor: randomColor,\n      data: dataset.data,\n      label: dataset.label,\n      showLine: false,\n    }\n  }\n\n  formatDate(date) {\n    if (date) {\n      date = new Date(date);\n\n      let month = '' + (date.getMonth() + 1);\n      let day = '' + date.getDate();\n      let year = date.getFullYear();\n\n      if (month.length < 2) {\n        month = '0' + month;\n      }\n\n      if (day.length < 2) {\n        day = '0' + day;\n      }\n\n      return `${year}-${month}-${day}`;\n    }\n\n    return ''\n  }\n\n  loadData = async () => {\n    try {\n      const { priceField, barcodes } = this.props\n      const data = barcodes?.join(\",\")?.toString();\n      const requestOptions = {\n        headers: getHeader(),\n        params: {\n          enddate: this.formatDate(this.state.maxDate) || null,\n          startdate: this.formatDate(this.state.minDate) || null,\n          barcodes: data.toString(),\n        }\n      };\n\n      const response = await api.get('api/product/show', requestOptions);\n      if (response.status === 200) {\n        const { products } = response.data;\n        const datasets = [];\n        let scans = [];\n        let labels = [];\n\n        for (let i = 0; i < products.length; i++) {\n          const product = products[i];\n\n          scans[i] = [];\n\n          for (let j = 0; j < product.stores.length; j++) {\n            const store = product.stores[j];\n            const label = `${store.name} - ${product.name}`;\n\n            for (let k = 0; k < store.prices.length; k++) {\n              const price = store.prices[k];\n              const scan = {\n                label,\n                scanId: price.scan_id,\n                captureDate: format(new Date(price.capture_date), \"dd-MM-yyyy\").split(\" \")[0],\n                price: price[priceField],\n              };\n\n              labels.push(format(new Date(price.capture_date), \"dd-MM-yyyy\").split(\" \")[0]);\n              scans[i].push(scan);\n            }\n          }\n        }\n\n        scans = scans.filter((scan) => scan.length)\n        labels = this.getLabels(labels);\n\n        let datasetBatch: any = [] // collection of different labels\n        let datasetCollection: any = []; // collection of dataset\n        for (let i = 0; i < scans.length; i++) {\n          const prices = new Array(labels.length).fill(null);\n          for (let j = 0; j < scans[i].length; j++) {\n            const scan = scans[i][j];\n            const slot = labels.findIndex((label) => label === scan.captureDate);\n\n            // create object with data\n            const data: any = {};\n            data.price = scan.price;\n            data.y = scan.price;\n            data.scanId = scan.scanId;\n            data.capture_day = scan.captureDate;\n            data.x = scan.captureDate\n\n            const label = scan.label;\n            if (!datasetBatch.includes(label)) {\n              datasetBatch.push(scan.label);\n              const obj = {\n                label: scan.label\n              }\n              datasetCollection.push({\n                label: scan.label,\n                data: [data]\n              });\n            } else {\n              const idx = datasetCollection.findIndex(x => x.label === label);\n              datasetCollection[idx].data.push(data);\n            }\n          };\n        }\n\n        const dataset = datasetCollection.map(item => this.parseDataset(item));\n\n        this.setState({\n          labels,\n          datasets: dataset\n        });\n\n      }\n    } catch (error) {\n      // TODO: Mensaje de error\n      console.log(error);\n    }\n  }\n\n  openModalDelete = (id: string) => {\n    this.setState({\n      isOpen: true,\n      scanDeleteId: id\n    })\n  }\n\n  openEdit = (id: string) => {\n    Router.push(`/home/scans/${id}?barcodes=${Router && Router.query.barcodes}`)\n  }\n\n  getChart = () => {\n    return (\n      <div className={s.graphContainer}>\n        <Line data={this.state} options={this.tooltipOptions} />\n      </div>\n    )\n  }\n\n  minDateHandler = (date: any) => {\n    const { minDate, maxDate } = this.state;\n\n    this.setState({\n      minDate: date,\n    }, () => {\n      if (maxDate) {\n        this.loadData()\n      }\n    })\n  }\n\n  maxDateHandler = (date: any) => {\n    const { minDate, maxDate } = this.state;\n\n    this.setState({\n      maxDate: date,\n    }, () => {\n      if (minDate) {\n        this.loadData()\n      }\n    })\n  }\n\n  deleteScan = async () => {\n    try {\n      const response = await api.delete(\n        `api/scan/${this.state.scanDeleteId}`,\n        { headers: getHeader() }\n      )\n\n      if (response.status === 204) {\n        this.setState({\n          isOpen: false,\n          scanDeleteId: ''\n        })\n        this.loadData()\n      }\n    } catch (e) {\n      // TODO: Mandar mensaje de error\n      throw new Error(e)\n    }\n  }\n\n  handleOnChangeSearch = async (event) => {\n    try {\n      const { datasets } = this.state\n      const { target } = event\n      const requestOptions = {\n        headers: getHeader(),\n      };\n      this.setState({ ...this.state, inputVal: target.value })\n      for (let i = 0; i < datasets.length; i++) {\n        const { data } = datasets[i]\n        const scan = data.find((scan) => scan.scanId == target.value)\n\n        if (scan && scan.scanId) {\n          const endpoint = `api/scan/${scan.scanId}/show`\n          const { data: { scan: response } } = (await api.get(endpoint, requestOptions))\n          const { id, barcode, pictures, store, price, status, capture_date } = response\n          const { product_picture, shelf_picture } = (pictures && pictures.length) && pictures[0]\n          const storeName = store && (store.name || '')\n\n          const selectedScan = {\n            id,\n            barcode,\n            product_picture,\n            shelf_picture,\n            storeName,\n            price,\n            status,\n            capture_date,\n          }\n          this.setState({\n            selectedScan,\n          })\n        }\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  onlyNumberKey(event) {\n    const code = (event.which) ? event.which : event.keyCode\n    const isAlpha = code > 31 && (code < 48 || code > 57)\n\n    if (isAlpha) {\n      event.preventDefault()\n    }\n  }\n\n  render() {\n    const {\n      minDate,\n      maxDate,\n      selectedScan,\n      actions,\n      header,\n      currentPage,\n      count,\n      total,\n      totalPage,\n      isOpen,\n      inputVal,\n    } = this.state;\n\n    const locale = getLocale()\n\n    return (\n      <div className={s.graphPage}>\n        <div className={s.inputsContainer}>\n          <div>\n            <Datepicker\n              label={getI18nLabel(locale, 'graphTabCompare.startDate')}\n              selected={minDate}\n              onSelect={this.minDateHandler}\n              placeholder='dd/mm/yyyy'\n              dateFormat='dd/MM/yyyy'\n            />\n          </div>\n\n          <div>\n            <Datepicker\n              label={getI18nLabel(locale, 'graphTabCompare.endDate')}\n              selected={maxDate}\n              onSelect={this.maxDateHandler}\n              placeholder='dd/mm/yyyy'\n              dateFormat='dd/MM/yyyy'\n            />\n          </div>\n\n          <div className='search'>\n            <Input\n              type='text'\n              defaultValue={inputVal}\n              placeholder={getI18nLabel(locale, 'graphTabCompare.search')}\n              inputPlaceholder='ej: 8093'\n              onChange={(event) => this.handleOnChangeSearch(event)}\n              onKeyPress={(event) => this.onlyNumberKey(event)}\n            />\n          </div>\n        </div>\n\n        {this.getChart()}\n\n        {selectedScan && (\n          <TableComplex\n            actions={actions}\n            content={[selectedScan]}\n            header={header}\n            changePageNext={() => false}\n            changePagePrev={() => false}\n            total={total}\n            currentPage={currentPage}\n            totalPage={totalPage}\n            onClickDetails={(id: string) => this.openEdit(id)}\n            count={count}\n            checkboxStyles={styles.checkbox}\n            textNotData=''\n            customClassName='fixed-header product-details-table'\n          />\n        )}\n        <DialogModal\n          btnAcceptLabel={getI18nLabel(locale, 'graphTabCompare.modal.delete.buttonAcceptLabel')}\n          isOpen={isOpen}\n          message={getI18nLabel(locale, 'graphTabCompare.modal.delete.message')}\n          onClose={() => this.setState({ isOpen: false })}\n          btnAcceptType={PrimaryButtonVariant.Error}\n          onAccept={() => this.deleteScan()}\n        />\n      </div>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}