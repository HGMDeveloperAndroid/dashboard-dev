{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hgm\\\\Desktop\\\\Maquina3B\\\\ManDoc\\\\Proyectos\\\\Php\\\\DashBoard\\\\SVN\\\\Develop\\\\pricecheck-dashboard\\\\components\\\\GeoLocation\\\\CreateGeoLocation.tsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nimport api from '../../utils/api';\nimport ReportDetails from '../reportDetails';\nimport Loader from '../loader/Loader';\nimport { baseURLGeoref, georefApiKey } from '../../utils/baseUrl';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// const [reports, setReports] = useState([]);\n// const [showReportDetails, setShowReportDetails] = useState(false)\n// const [selectedReportInfo, setSelectedReportInfo] = useState([])\n// const [detailReadOnly, setDetailReadOnly] = useState(true)\n// const [showLoader, setShowLoader] = useState(false)\n\n// const deleteReport:Function = async (id: number) => {\n//     // Elimina geoReporte\n//         try {\n//             await api({\n//                 method: 'delete',\n//                 url: `api/places/${id}`,\n//                 baseURL: baseURLGeoref,\n//                 headers: { Authorization: `Api-Key ${georefApiKey}` }\n//             })\n\n//             // getReports()\n//         } catch (e) {\n//             throw new Error(e)\n//         }\n//     };\n\n// // Editar GeoReporte\n//     const showDetailReport:Function = (row: any) => {\n//         // const selectedReport = reports.filter(report => report.id === row.id)\n//         // setSelectedReportInfo(selectedReport[0])\n//         setShowReportDetails(true)\n//         setDetailReadOnly(false)\n//     };\nexport default function CreateGeoLocation(props) {\n  const {\n    getGeoCatalogs,\n    setShowReportDetails,\n    setSelectedReportInfo,\n    setDetailReadOnly,\n    setShowLoader,\n    showReportDetails,\n    selectedReportInfo,\n    detailReadOnly,\n    showLoader,\n    getReports\n  } = props;\n  const openCreateModal = () => {\n    setDetailReadOnly(false);\n    setShowReportDetails(true);\n    setSelectedReportInfo([]);\n  };\n  const createNewReport = async data => {\n    try {\n      await api({\n        method: 'post',\n        url: 'api/places',\n        baseURL: baseURLGeoref,\n        headers: {\n          Authorization: `Api-Key ${georefApiKey}`\n        },\n        data\n      });\n    } catch (e) {\n      throw new Error(e);\n    } finally {\n      getGeoCatalogs();\n      setShowReportDetails(false);\n      getReports();\n    }\n  };\n  const updateReport = async (data, id) => {\n    try {\n      await api({\n        method: 'patch',\n        url: `api/places/${id}`,\n        baseURL: baseURLGeoref,\n        headers: {\n          Authorization: `Api-Key ${georefApiKey}`\n        },\n        data\n      });\n    } catch (e) {\n      throw new Error(e);\n    } finally {\n      getGeoCatalogs();\n      setShowReportDetails(false);\n      getReports();\n    }\n  };\n  return __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, __jsx(Loader, {\n    show: showLoader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }), __jsx(FontAwesomeIcon, {\n    onClick: openCreateModal,\n    size: \"2x\",\n    icon: faPlusCircle,\n    style: {\n      color: 'green',\n      margin: '0.5em',\n      cursor: 'pointer',\n      verticalAlign: 'middle'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), showReportDetails && __jsx(ReportDetails, _extends({\n    toggleModal: () => setShowReportDetails(false),\n    showModal: showReportDetails\n  }, selectedReportInfo, {\n    readOnly: detailReadOnly,\n    saveInfo: (newReport, id) => id === 0 ? createNewReport(newReport) : updateReport(newReport, id),\n    cancel: () => setShowReportDetails(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  })));\n}\n;","map":{"version":3,"names":["React","faPlusCircle","api","ReportDetails","Loader","baseURLGeoref","georefApiKey","FontAwesomeIcon","CreateGeoLocation","props","getGeoCatalogs","setShowReportDetails","setSelectedReportInfo","setDetailReadOnly","setShowLoader","showReportDetails","selectedReportInfo","detailReadOnly","showLoader","getReports","openCreateModal","createNewReport","data","method","url","baseURL","headers","Authorization","e","Error","updateReport","id","__jsx","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","show","onClick","size","icon","style","color","margin","cursor","verticalAlign","_extends","toggleModal","showModal","readOnly","saveInfo","newReport","cancel"],"sources":["C:/Users/hgm/Desktop/Maquina3B/ManDoc/Proyectos/Php/DashBoard/SVN/Develop/pricecheck-dashboard/components/GeoLocation/CreateGeoLocation.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport localStorage from 'localStorage';\nimport {\n    faExternalLinkAlt,\n    faTrashAlt,\n    faPencilAlt,\n    faPlusCircle\n} from '@fortawesome/free-solid-svg-icons';\nimport api from '../../utils/api';\nimport { header } from '../../utils/headers';\nimport ReportDetails from '../reportDetails';\nimport { PrimaryButton } from '../buttons/PrimaryButton';\nimport styles from './createGeoLocation.module.scss';\nimport Router from 'next/router';\nimport PageTitle from '../pageTitle/PageTitle';\nimport Loader from '../loader/Loader';\nimport {baseURLGeoref, georefApiKey} from '../../utils/baseUrl';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\ntype Props = {\n    getGeoCatalogs:Function,\n    setShowReportDetails:Function,\n    setSelectedReportInfo:Function,\n    setDetailReadOnly:Function,\n    setShowLoader:Function,\n    showReportDetails:boolean,\n    selectedReportInfo:any[],\n    detailReadOnly:boolean,\n    showLoader:boolean,\n    getReports:Function,\n}\n\n// const [reports, setReports] = useState([]);\n// const [showReportDetails, setShowReportDetails] = useState(false)\n// const [selectedReportInfo, setSelectedReportInfo] = useState([])\n// const [detailReadOnly, setDetailReadOnly] = useState(true)\n// const [showLoader, setShowLoader] = useState(false)\n\n    // const deleteReport:Function = async (id: number) => {\n    //     // Elimina geoReporte\n    //         try {\n    //             await api({\n    //                 method: 'delete',\n    //                 url: `api/places/${id}`,\n    //                 baseURL: baseURLGeoref,\n    //                 headers: { Authorization: `Api-Key ${georefApiKey}` }\n    //             })\n\n    //             // getReports()\n    //         } catch (e) {\n    //             throw new Error(e)\n    //         }\n    //     };\n\n\n    // // Editar GeoReporte\n    //     const showDetailReport:Function = (row: any) => {\n    //         // const selectedReport = reports.filter(report => report.id === row.id)\n    //         // setSelectedReportInfo(selectedReport[0])\n    //         setShowReportDetails(true)\n    //         setDetailReadOnly(false)\n    //     };\n\n\n\n\nexport default function CreateGeoLocation(props:Props) {\n\n    const {\n        getGeoCatalogs,\n        setShowReportDetails,\n        setSelectedReportInfo,\n        setDetailReadOnly,\n        setShowLoader,\n        showReportDetails,\n        selectedReportInfo,\n        detailReadOnly,\n        showLoader,\n        getReports\n    } = props;\n\n        const openCreateModal = () => {\n            setDetailReadOnly(false)\n            setShowReportDetails(true)\n            setSelectedReportInfo([])\n        }\n        const createNewReport = async (data: any) => {\n            try {\n                await api({\n                    method: 'post',\n                    url: 'api/places',\n                    baseURL: baseURLGeoref,\n                    headers: { Authorization: `Api-Key ${georefApiKey}` },\n                    data\n                })\n            } catch (e) {\n                throw new Error(e)\n            } finally {\n                getGeoCatalogs();\n                setShowReportDetails(false);\n                getReports();\n            }\n        };\n        const updateReport = async (data: any, id: any) => {\n            try {\n                await api({\n                    method: 'patch',\n                    url: `api/places/${id}`,\n                    baseURL: baseURLGeoref,\n                    headers: { Authorization: `Api-Key ${georefApiKey}` },\n                    data\n                })\n            } catch (e) {\n                throw new Error(e)\n            } finally {\n                getGeoCatalogs();\n                setShowReportDetails(false)\n                getReports();\n            }\n        };\n    return (\n        <span>\n            <Loader show={showLoader} />\n            <FontAwesomeIcon onClick={openCreateModal} size='2x' icon={faPlusCircle} style={{color: 'green', margin: '0.5em', cursor: 'pointer', verticalAlign: 'middle'}} />\n            {showReportDetails && (\n                <ReportDetails\n                    toggleModal={() => setShowReportDetails(false)}\n                    showModal={showReportDetails}\n                    {...selectedReportInfo}\n                    readOnly={detailReadOnly}\n                    saveInfo={(newReport: any, id: number) => id === 0 ?\n                        createNewReport(newReport) :\n                        updateReport(newReport, id)\n                    }\n                    cancel={() => setShowReportDetails(false)}\n                />\n            )}\n        </span>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}