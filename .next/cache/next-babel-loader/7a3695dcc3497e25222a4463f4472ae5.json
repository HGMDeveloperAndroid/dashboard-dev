{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport api from './api';\nimport { getHeader } from './session-management';\nimport { baseURLGeoref, georefApiKey } from './baseUrl';\nconst getRolesCatalog = async () => {\n  const res = await api.get('api/roles', {\n    headers: getHeader()\n  });\n  return res.data.data.map(rol => {\n    return {\n      value: rol.name,\n      label: rol.name\n    };\n  });\n};\nconst getRegionsCatalog = async () => {\n  const res = await api.get('api/regions', {\n    headers: getHeader()\n  });\n  return res.data.data.map(region => {\n    return {\n      value: region.id,\n      label: region.name\n    };\n  });\n};\nconst getRegionsLabelCatalog = async () => {\n  const res = await api.get('api/regions', {\n    headers: getHeader()\n  });\n  return res.data.data.map(region => {\n    return {\n      value: region.name,\n      label: region.name\n    };\n  });\n};\nconst getLabelsCatalog = async () => {\n  const res = await api.get('api/labels', {\n    headers: getHeader()\n  });\n  return res.data.data.map(label => {\n    return {\n      value: label.id,\n      label: label.name\n    };\n  });\n};\nconst getGroupsCatalog = async () => {\n  const res = await api.get('api/groups/list', {\n    headers: getHeader()\n  });\n  return res.data.group.map(group => {\n    return {\n      value: group.id,\n      label: group.name\n    };\n  });\n};\nconst getMissionsCatalog = async () => {\n  const data = {\n    textSearch: ''\n  };\n  const res = await api.post('api/missions/list', data, {\n    headers: getHeader()\n  });\n  return Object.keys(res.data).map(missionKey => {\n    return {\n      value: missionKey,\n      label: res.data[missionKey]\n    };\n  });\n};\nconst getMissionsValidation = async () => {\n  const res = await api.get('api/missions/list-validation', {\n    headers: getHeader()\n  });\n  return Object.keys(res.data).map(missionKey => {\n    return {\n      value: missionKey,\n      label: res.data[missionKey]\n    };\n  });\n};\nconst getMissionsCatalogByMission = async mission => {\n  const data = {\n    textSearch: mission\n  };\n  const res = await api.post('api/missions/list', data, {\n    headers: getHeader()\n  });\n  return Object.keys(res.data).map(missionKey => {\n    return {\n      value: missionKey,\n      label: res.data[missionKey]\n    };\n  });\n};\nconst getUnitsCatalog = async () => {\n  const res = await api.get('api/units/list', {\n    headers: getHeader()\n  });\n  return Object.keys(res.data.data).map(unitKey => {\n    return {\n      value: unitKey,\n      label: res.data.data[unitKey]\n    };\n  });\n};\nconst getBrandsCatalog = async () => {\n  const res = await api.get('api/brands/list', {\n    headers: getHeader()\n  });\n  return Object.keys(res.data.data).map(brandKey => {\n    return {\n      value: brandKey,\n      label: res.data.data[brandKey]\n    };\n  });\n};\nconst getStoresCatalog = async () => {\n  const res = await api.get('api/store/list', {\n    headers: getHeader()\n  });\n  const stores = Object.keys(res.data).map(storeKey => {\n    return {\n      value: storeKey,\n      label: res.data[storeKey]\n    };\n  });\n  stores.sort((a, b) => {\n    if (a.label.toLowerCase() < b.label.toLowerCase()) {\n      return -1;\n    }\n    if (a.label.toLowerCase() > b.label.toLowerCase()) {\n      return 1;\n    }\n    return 0;\n  });\n  return stores;\n};\nconst getLinesCatalog = async () => {\n  const res = await api.get('api/lines/list', {\n    headers: getHeader()\n  });\n  return res.data.lines.map(line => {\n    return {\n      value: line.id,\n      label: line.name,\n      group: line.id_group\n    };\n  });\n};\nconst getGeolocationCatalog = async () => {\n  var _response$data;\n  const response = await api({\n    url: \"api/places\",\n    baseURL: baseURLGeoref,\n    headers: {\n      Authorization: `Api-Key ${georefApiKey}`\n    }\n  });\n  let transformGeolocation = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data;\n  transformGeolocation = transformGeolocation.map(geolocation => {\n    return _objectSpread(_objectSpread({}, geolocation), {}, {\n      value: geolocation.id,\n      label: geolocation.name\n    });\n  });\n  return transformGeolocation;\n};\nexport { getRolesCatalog, getRegionsCatalog, getLabelsCatalog, getGroupsCatalog, getMissionsCatalog, getMissionsValidation, getUnitsCatalog, getBrandsCatalog, getStoresCatalog, getLinesCatalog, getMissionsCatalogByMission, getGeolocationCatalog, getRegionsLabelCatalog };","map":{"version":3,"names":["api","getHeader","baseURLGeoref","georefApiKey","getRolesCatalog","res","get","headers","data","map","rol","value","name","label","getRegionsCatalog","region","id","getRegionsLabelCatalog","getLabelsCatalog","getGroupsCatalog","group","getMissionsCatalog","textSearch","post","Object","keys","missionKey","getMissionsValidation","getMissionsCatalogByMission","mission","getUnitsCatalog","unitKey","getBrandsCatalog","brandKey","getStoresCatalog","stores","storeKey","sort","a","b","toLowerCase","getLinesCatalog","lines","line","id_group","getGeolocationCatalog","_response$data","response","url","baseURL","Authorization","transformGeolocation","geolocation","_objectSpread"],"sources":["C:/Users/hgm/Desktop/Maquina3B/ManDoc/Proyectos/Php/DashBoard/SVN/Develop/pricecheck-dashboard/utils/catalogs.ts"],"sourcesContent":["import api from './api'\nimport { getHeader } from './session-management'\nimport {baseURLGeoref, georefApiKey} from './baseUrl';\n\ntype Options =\n{value: string, label: string}\n\ntype Line = {value: string, label: string, group: string }\n\nconst getRolesCatalog = async (): Promise<Array<Options>> => {\n    const res = await api.get('api/roles', { headers: getHeader() })\n    return res.data.data.map((rol: {name: string}) => {\n        return {\n            value: rol.name,\n            label: rol.name,\n        }\n    })\n}\n\nconst getRegionsCatalog = async (): Promise<Array<Options>> => {\n    const res = await api.get('api/regions', { headers: getHeader() })\n    return  res.data.data.map((region: {name: string, id: number}) => {\n        return {\n            value: region.id,\n            label: region.name,\n        }\n    })\n}\n\nconst getRegionsLabelCatalog = async (): Promise<Array<Options>> => {\n    const res = await api.get('api/regions', { headers: getHeader() })\n    return  res.data.data.map((region: {name: string, id: number}) => {\n        return {\n            value: region.name,\n            label: region.name,\n        }\n    })\n}\n\nconst getLabelsCatalog = async (): Promise<Array<Options>> => {\n    const res = await api.get('api/labels', { headers: getHeader() })\n    return res.data.data.map((label: {id: number, name: string}) => {\n        return {\n            value: label.id,\n            label: label.name\n        }\n    })\n\n}\n\nconst getGroupsCatalog = async (): Promise<Array<Options>> => {\n    const res = await api.get('api/groups/list', { headers: getHeader() })\n    return res.data.group.map((group: {id: number, name: string}) =>{\n        return {\n            value: group.id,\n            label: group.name\n        }\n    })\n}\n\nconst getMissionsCatalog = async (): Promise<Array<Options>> => {\n    const data = {\n        textSearch: '',\n    }\n    const res = await api.post('api/missions/list', data, { headers: getHeader() })\n    return Object.keys(res.data).map(missionKey =>{\n        return {\n            value: missionKey,\n            label: res.data[missionKey]\n        }\n    } )\n}\nconst getMissionsValidation = async (): Promise<Array<Options>> => {\n    const res = await api.get('api/missions/list-validation', { headers: getHeader() })\n    return Object.keys(res.data).map(missionKey =>{\n        return {\n            value: missionKey,\n            label: res.data[missionKey]\n        }\n    } )\n}\n\nconst getMissionsCatalogByMission = async (mission: string): Promise<Array<Options>> => {\n    const data = {\n        textSearch: mission,\n    }\n\n    const res = await api.post('api/missions/list', data, { headers: getHeader() },)\n    return Object.keys(res.data).map(missionKey =>{\n        return {\n            value: missionKey,\n            label: res.data[missionKey]\n        }\n    } )\n}\n\nconst getUnitsCatalog = async (): Promise<Array<Options>> => {\n    const res = await api.get('api/units/list', { headers: getHeader() })\n    return Object.keys(res.data.data).map(unitKey =>{\n        return {\n            value: unitKey,\n            label: res.data.data[unitKey]\n        }\n    } )\n}\n\nconst getBrandsCatalog = async (): Promise<Array<Options>> => {\n    const res = await api.get('api/brands/list', { headers: getHeader() })\n    return Object.keys(res.data.data).map(brandKey =>{\n        return {\n            value: brandKey,\n            label: res.data.data[brandKey]\n        }\n    } )\n}\n\nconst getStoresCatalog = async (): Promise<Array<Options>> => {\n    const res = await api.get('api/store/list', { headers: getHeader() })\n    const stores = Object.keys(res.data).map(storeKey => {\n        return {\n            value: storeKey,\n            label: res.data[storeKey]\n        }\n    })\n\n    stores.sort((a, b) => {\n        if (a.label.toLowerCase() < b.label.toLowerCase()) {\n            return -1\n        }\n\n        if (a.label.toLowerCase() > b.label.toLowerCase()) {\n            return 1\n        }\n\n        return 0\n    })\n\n    return stores\n}\n\nconst getLinesCatalog = async (): Promise<Array<Line>> => {\n    const res = await api.get('api/lines/list', { headers: getHeader() })\n    return res.data.lines.map((line: {id: number, name: string, id_group: number}) => {\n        return {\n            value: line.id,\n            label: line.name,\n            group: line.id_group,\n        }\n    })\n}\n\nconst getGeolocationCatalog = async (): Promise<Array<Line>> => {\n    const response = await api({\n        url: \"api/places\",\n        baseURL: baseURLGeoref,\n        headers: { Authorization: `Api-Key ${georefApiKey}` },\n    })\n    let transformGeolocation = response?.data?.data\n    transformGeolocation = transformGeolocation.map(geolocation => {\n        return {...geolocation, value: geolocation.id, label: geolocation.name}\n    })\n\n    return transformGeolocation\n}\n\nexport {\n    getRolesCatalog,\n    getRegionsCatalog,\n    getLabelsCatalog,\n    getGroupsCatalog,\n    getMissionsCatalog,\n    getMissionsValidation,\n    getUnitsCatalog,\n    getBrandsCatalog,\n    getStoresCatalog,\n    getLinesCatalog,\n    getMissionsCatalogByMission,\n    getGeolocationCatalog,\n    getRegionsLabelCatalog,\n}\n"],"mappings":";;;;;AAAA,OAAOA,GAAG,MAAM,OAAO;AACvB,SAASC,SAAS,QAAQ,sBAAsB;AAChD,SAAQC,aAAa,EAAEC,YAAY,QAAO,WAAW;AAOrD,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAqC;EACzD,MAAMC,GAAG,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,WAAW,EAAE;IAAEC,OAAO,EAAEN,SAAS;EAAG,CAAC,CAAC;EAChE,OAAOI,GAAG,CAACG,IAAI,CAACA,IAAI,CAACC,GAAG,CAAEC,GAAmB,IAAK;IAC9C,OAAO;MACHC,KAAK,EAAED,GAAG,CAACE,IAAI;MACfC,KAAK,EAAEH,GAAG,CAACE;IACf,CAAC;EACL,CAAC,CAAC;AACN,CAAC;AAED,MAAME,iBAAiB,GAAG,MAAAA,CAAA,KAAqC;EAC3D,MAAMT,GAAG,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,aAAa,EAAE;IAAEC,OAAO,EAAEN,SAAS;EAAG,CAAC,CAAC;EAClE,OAAQI,GAAG,CAACG,IAAI,CAACA,IAAI,CAACC,GAAG,CAAEM,MAAkC,IAAK;IAC9D,OAAO;MACHJ,KAAK,EAAEI,MAAM,CAACC,EAAE;MAChBH,KAAK,EAAEE,MAAM,CAACH;IAClB,CAAC;EACL,CAAC,CAAC;AACN,CAAC;AAED,MAAMK,sBAAsB,GAAG,MAAAA,CAAA,KAAqC;EAChE,MAAMZ,GAAG,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,aAAa,EAAE;IAAEC,OAAO,EAAEN,SAAS;EAAG,CAAC,CAAC;EAClE,OAAQI,GAAG,CAACG,IAAI,CAACA,IAAI,CAACC,GAAG,CAAEM,MAAkC,IAAK;IAC9D,OAAO;MACHJ,KAAK,EAAEI,MAAM,CAACH,IAAI;MAClBC,KAAK,EAAEE,MAAM,CAACH;IAClB,CAAC;EACL,CAAC,CAAC;AACN,CAAC;AAED,MAAMM,gBAAgB,GAAG,MAAAA,CAAA,KAAqC;EAC1D,MAAMb,GAAG,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,YAAY,EAAE;IAAEC,OAAO,EAAEN,SAAS;EAAG,CAAC,CAAC;EACjE,OAAOI,GAAG,CAACG,IAAI,CAACA,IAAI,CAACC,GAAG,CAAEI,KAAiC,IAAK;IAC5D,OAAO;MACHF,KAAK,EAAEE,KAAK,CAACG,EAAE;MACfH,KAAK,EAAEA,KAAK,CAACD;IACjB,CAAC;EACL,CAAC,CAAC;AAEN,CAAC;AAED,MAAMO,gBAAgB,GAAG,MAAAA,CAAA,KAAqC;EAC1D,MAAMd,GAAG,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,iBAAiB,EAAE;IAAEC,OAAO,EAAEN,SAAS;EAAG,CAAC,CAAC;EACtE,OAAOI,GAAG,CAACG,IAAI,CAACY,KAAK,CAACX,GAAG,CAAEW,KAAiC,IAAI;IAC5D,OAAO;MACHT,KAAK,EAAES,KAAK,CAACJ,EAAE;MACfH,KAAK,EAAEO,KAAK,CAACR;IACjB,CAAC;EACL,CAAC,CAAC;AACN,CAAC;AAED,MAAMS,kBAAkB,GAAG,MAAAA,CAAA,KAAqC;EAC5D,MAAMb,IAAI,GAAG;IACTc,UAAU,EAAE;EAChB,CAAC;EACD,MAAMjB,GAAG,GAAG,MAAML,GAAG,CAACuB,IAAI,CAAC,mBAAmB,EAAEf,IAAI,EAAE;IAAED,OAAO,EAAEN,SAAS;EAAG,CAAC,CAAC;EAC/E,OAAOuB,MAAM,CAACC,IAAI,CAACpB,GAAG,CAACG,IAAI,CAAC,CAACC,GAAG,CAACiB,UAAU,IAAG;IAC1C,OAAO;MACHf,KAAK,EAAEe,UAAU;MACjBb,KAAK,EAAER,GAAG,CAACG,IAAI,CAACkB,UAAU;IAC9B,CAAC;EACL,CAAC,CAAE;AACP,CAAC;AACD,MAAMC,qBAAqB,GAAG,MAAAA,CAAA,KAAqC;EAC/D,MAAMtB,GAAG,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,8BAA8B,EAAE;IAAEC,OAAO,EAAEN,SAAS;EAAG,CAAC,CAAC;EACnF,OAAOuB,MAAM,CAACC,IAAI,CAACpB,GAAG,CAACG,IAAI,CAAC,CAACC,GAAG,CAACiB,UAAU,IAAG;IAC1C,OAAO;MACHf,KAAK,EAAEe,UAAU;MACjBb,KAAK,EAAER,GAAG,CAACG,IAAI,CAACkB,UAAU;IAC9B,CAAC;EACL,CAAC,CAAE;AACP,CAAC;AAED,MAAME,2BAA2B,GAAG,MAAOC,OAAe,IAA8B;EACpF,MAAMrB,IAAI,GAAG;IACTc,UAAU,EAAEO;EAChB,CAAC;EAED,MAAMxB,GAAG,GAAG,MAAML,GAAG,CAACuB,IAAI,CAAC,mBAAmB,EAAEf,IAAI,EAAE;IAAED,OAAO,EAAEN,SAAS;EAAG,CAAC,CAAE;EAChF,OAAOuB,MAAM,CAACC,IAAI,CAACpB,GAAG,CAACG,IAAI,CAAC,CAACC,GAAG,CAACiB,UAAU,IAAG;IAC1C,OAAO;MACHf,KAAK,EAAEe,UAAU;MACjBb,KAAK,EAAER,GAAG,CAACG,IAAI,CAACkB,UAAU;IAC9B,CAAC;EACL,CAAC,CAAE;AACP,CAAC;AAED,MAAMI,eAAe,GAAG,MAAAA,CAAA,KAAqC;EACzD,MAAMzB,GAAG,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,gBAAgB,EAAE;IAAEC,OAAO,EAAEN,SAAS;EAAG,CAAC,CAAC;EACrE,OAAOuB,MAAM,CAACC,IAAI,CAACpB,GAAG,CAACG,IAAI,CAACA,IAAI,CAAC,CAACC,GAAG,CAACsB,OAAO,IAAG;IAC5C,OAAO;MACHpB,KAAK,EAAEoB,OAAO;MACdlB,KAAK,EAAER,GAAG,CAACG,IAAI,CAACA,IAAI,CAACuB,OAAO;IAChC,CAAC;EACL,CAAC,CAAE;AACP,CAAC;AAED,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAqC;EAC1D,MAAM3B,GAAG,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,iBAAiB,EAAE;IAAEC,OAAO,EAAEN,SAAS;EAAG,CAAC,CAAC;EACtE,OAAOuB,MAAM,CAACC,IAAI,CAACpB,GAAG,CAACG,IAAI,CAACA,IAAI,CAAC,CAACC,GAAG,CAACwB,QAAQ,IAAG;IAC7C,OAAO;MACHtB,KAAK,EAAEsB,QAAQ;MACfpB,KAAK,EAAER,GAAG,CAACG,IAAI,CAACA,IAAI,CAACyB,QAAQ;IACjC,CAAC;EACL,CAAC,CAAE;AACP,CAAC;AAED,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAqC;EAC1D,MAAM7B,GAAG,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,gBAAgB,EAAE;IAAEC,OAAO,EAAEN,SAAS;EAAG,CAAC,CAAC;EACrE,MAAMkC,MAAM,GAAGX,MAAM,CAACC,IAAI,CAACpB,GAAG,CAACG,IAAI,CAAC,CAACC,GAAG,CAAC2B,QAAQ,IAAI;IACjD,OAAO;MACHzB,KAAK,EAAEyB,QAAQ;MACfvB,KAAK,EAAER,GAAG,CAACG,IAAI,CAAC4B,QAAQ;IAC5B,CAAC;EACL,CAAC,CAAC;EAEFD,MAAM,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IAClB,IAAID,CAAC,CAACzB,KAAK,CAAC2B,WAAW,EAAE,GAAGD,CAAC,CAAC1B,KAAK,CAAC2B,WAAW,EAAE,EAAE;MAC/C,OAAO,CAAC,CAAC;IACb;IAEA,IAAIF,CAAC,CAACzB,KAAK,CAAC2B,WAAW,EAAE,GAAGD,CAAC,CAAC1B,KAAK,CAAC2B,WAAW,EAAE,EAAE;MAC/C,OAAO,CAAC;IACZ;IAEA,OAAO,CAAC;EACZ,CAAC,CAAC;EAEF,OAAOL,MAAM;AACjB,CAAC;AAED,MAAMM,eAAe,GAAG,MAAAA,CAAA,KAAkC;EACtD,MAAMpC,GAAG,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,gBAAgB,EAAE;IAAEC,OAAO,EAAEN,SAAS;EAAG,CAAC,CAAC;EACrE,OAAOI,GAAG,CAACG,IAAI,CAACkC,KAAK,CAACjC,GAAG,CAAEkC,IAAkD,IAAK;IAC9E,OAAO;MACHhC,KAAK,EAAEgC,IAAI,CAAC3B,EAAE;MACdH,KAAK,EAAE8B,IAAI,CAAC/B,IAAI;MAChBQ,KAAK,EAAEuB,IAAI,CAACC;IAChB,CAAC;EACL,CAAC,CAAC;AACN,CAAC;AAED,MAAMC,qBAAqB,GAAG,MAAAA,CAAA,KAAkC;EAAA,IAAAC,cAAA;EAC5D,MAAMC,QAAQ,GAAG,MAAM/C,GAAG,CAAC;IACvBgD,GAAG,EAAE,YAAY;IACjBC,OAAO,EAAE/C,aAAa;IACtBK,OAAO,EAAE;MAAE2C,aAAa,EAAG,WAAU/C,YAAa;IAAE;EACxD,CAAC,CAAC;EACF,IAAIgD,oBAAoB,GAAGJ,QAAQ,aAARA,QAAQ,wBAAAD,cAAA,GAARC,QAAQ,CAAEvC,IAAI,cAAAsC,cAAA,uBAAdA,cAAA,CAAgBtC,IAAI;EAC/C2C,oBAAoB,GAAGA,oBAAoB,CAAC1C,GAAG,CAAC2C,WAAW,IAAI;IAC3D,OAAAC,aAAA,CAAAA,aAAA,KAAWD,WAAW;MAAEzC,KAAK,EAAEyC,WAAW,CAACpC,EAAE;MAAEH,KAAK,EAAEuC,WAAW,CAACxC;IAAI;EAC1E,CAAC,CAAC;EAEF,OAAOuC,oBAAoB;AAC/B,CAAC;AAED,SACI/C,eAAe,EACfU,iBAAiB,EACjBI,gBAAgB,EAChBC,gBAAgB,EAChBE,kBAAkB,EAClBM,qBAAqB,EACrBG,eAAe,EACfE,gBAAgB,EAChBE,gBAAgB,EAChBO,eAAe,EACfb,2BAA2B,EAC3BiB,qBAAqB,EACrB5B,sBAAsB"},"metadata":{},"sourceType":"module"}